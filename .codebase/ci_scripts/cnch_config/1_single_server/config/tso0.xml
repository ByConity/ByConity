<?xml version="1.0" encoding="UTF-8"?>
<!--
  NOTE: User and query level settings are set up in "users.xml" file.
-->
<yandex>
    <logger>
        <!-- Possible levels: https://github.com/pocoproject/poco/blob/develop/Foundation/include/Poco/Logger.h#L105 -->
        <level>debug</level>
        <log>/test_output/tso0/tso0.log</log>
        <errorlog>/test_output/tso0/tso0.err.log</errorlog>
        <testlog>/test_output/tso0/tso0.test.log</testlog>
        <size>1000M</size>
        <count>10</count>
        <!-- <console>1</console> --> <!-- Default behavior is autodetection (log to console if not daemon mode and is tty) -->
    </logger>

    <!-- Hostname that is used by other replicas to request this server.
         If not specified, than it is determined analoguous to 'hostname -f' command.
         This setting could be used to switch replication to another network interface.
      -->
    <!--
    <interserver_http_host>example.yandex.ru</interserver_http_host>
    -->

    <!-- Listen specified host. use :: (wildcard IPv6 address), if you want to accept connections both with IPv4 and IPv6 from everywhere. -->
    <listen_host>::</listen_host>
    <!-- <listen_host>0.0.0.0</listen_host> -->
    <!-- Default values - try listen localhost on ipv4 and ipv6: -->
    <!--
    <listen_host>::1</listen_host>
    <listen_host>127.0.0.1</listen_host>
    -->
    <!-- Don't exit if ipv6 or ipv4 unavailable, but listen_host with this protocol specified -->
    <listen_try>1</listen_try>

    <!-- Allow listen on same address:port -->
    <!-- <listen_reuse_port>0</listen_reuse_port> -->

    <!-- <listen_backlog>64</listen_backlog> -->

    <max_connections>4096</max_connections>
    <keep_alive_timeout>3</keep_alive_timeout>

    <!-- Maximum number of concurrent queries. -->
    <max_concurrent_queries>100</max_concurrent_queries>

    <!-- Set limit on number of open files (default: maximum). This setting makes sense on Mac OS X because getrlimit() fails to retrieve
         correct maximum value. -->
    <!-- <max_open_files>262144</max_open_files> -->

    <!-- Size of cache of uncompressed blocks of data, used in tables of MergeTree family.
         In bytes. Cache is single for server. Memory is allocated only on demand.
         Cache is used when 'use_uncompressed_cache' user setting turned on (off by default).
         Uncompressed cache is advantageous only for very short queries and in rare cases.
      -->
    <uncompressed_cache_size>8589934592</uncompressed_cache_size>

    <!-- Approximate size of mark cache, used in tables of MergeTree family.
         In bytes. Cache is single for server. Memory is allocated only on demand.
         You should not lower this value.
      -->
    <mark_cache_size>5368709120</mark_cache_size>

    <!-- Interval to sync Virtual Warehouse resource usage from Daemon Manager-->
    <resource_usage_sync_interval>5</resource_usage_sync_interval>

    <!-- Path to data directory, with trailing slash. -->
    <path>/cnch/cnch_test/server/</path>

    <!-- Path to temporary data for processing hard queries. -->
    <tmp_path>/cnch/cnch_test/server/tmp/</tmp_path>

    <!-- Directory with user provided files that are accessible by 'file' table function. -->

    <!-- Path to configuration file with users, access rights, profiles of settings, quotas. -->
    <users_config>cnch-users.xml</users_config>

    <!-- Default profile of settings. -->
    <default_profile>default</default_profile>

    <!-- Server time zone could be set here.

         Time zone is used when converting between String and DateTime types,
          when printing DateTime in text formats and parsing DateTime from text,
          it is used in date and time related functions, if specific time zone was not passed as an argument.

         Time zone is specified as identifier from IANA time zone database, like UTC or Africa/Abidjan.
         If not specified, system time zone at server startup is used.

         Please note, that server could display time zone alias instead of specified name.
         Example: W-SU is an alias for Europe/Moscow and Zulu is an alias for UTC.
    -->
    <timezone>Europe/Moscow</timezone>

    <!-- You can specify umask here (see "man umask"). Server will apply it on startup.
         Number is always parsed as octal. Default umask is 027 (other users cannot read logs, data files, etc; group can only read).
    -->
    <!-- <umask>022</umask> -->

    <!-- Perform mlockall after startup to lower first queries latency
          and to prevent clickhouse executable from being paged out under high IO load.
         Enabling this option is recommended but will lead to increased startup time for up to a few seconds.
    -->
    <mlock_executable>false</mlock_executable>

    <!-- If element has 'incl' attribute, then for it's value will be used corresponding substitution from another file.
         By default, path to file with substitutions is /etc/metrika.xml. It could be changed in config in 'include_from' element.
         Values for substitutions are specified in /yandex/name_of_substitution elements in that file.
      -->

    <!-- ZooKeeper is used to store metadata about replicas, when using Replicated tables.
         Optional. If you don't use replicated tables, you could omit that.

         See https://clickhouse.yandex/docs/en/table_engines/replication/
      -->
    <!-- <zookeeper incl="zookeeper-servers" optional="true" /> -->

    <!--
    <zookeeper>
        <node index="1">
            <host>10.25.182.208</host>
            <port>2181</port>
        </node>
    </zookeeper>
    -->

    <!-- Substitutions for parameters of replicated tables.
          Optional. If you don't use replicated tables, you could omit that.

         See https://clickhouse.yandex/docs/en/table_engines/replication/#creating-replicated-tables
      -->
    <macros incl="macros" optional="true" />

    <!-- Reloading interval for embedded dictionaries, in seconds. Default: 3600. -->
    <builtin_dictionaries_reload_interval>3600</builtin_dictionaries_reload_interval>

    <!-- Maximum session timeout, in seconds. Default: 3600. -->
    <max_session_timeout>3600</max_session_timeout>

    <!-- Default session timeout, in seconds. Default: 60. -->
    <default_session_timeout>60</default_session_timeout>

    <resource_usage_sync_interval>5</resource_usage_sync_interval>
    <!-- Server resource usage entry timeout. Outdated entries are deleted -->
    <server_resource_usage_timeout_seconds>15</server_resource_usage_timeout_seconds>

    <!-- Directory in <clickhouse-path> containing schema files for various input formats.
         The directory will be created if it doesn't exist.
      -->
    <format_schema_path>/cnch/cnch_test/server/format_schemas/</format_schema_path>

    <!-- Uncomment to disable ClickHouse internal DNS caching. -->
    <!-- <disable_internal_dns_cache>1</disable_internal_dns_cache> -->

    <service_discovery>
        <!--Service Discovery local/consul/dns -->
        <mode>local</mode>
        <cluster>default</cluster>
        <disable_cache>false</disable_cache>
        <cache_timeout>5</cache_timeout>
        <server>
            <psm>data.cnch.server</psm>
            <!-- For dns -->
            <service>cnch-server</service>
            <headless_service>cnch-server-headless</headless_service>
            <!-- For local test -->
            <node>
                <host>ip_address_replace_me</host>
                <hostname>server0</hostname>
                <ports>
                    <!-- TCP/Primary -->
                    <port><name>PORT0</name><value>9000</value></port>
                    <!-- RPC -->
                    <port><name>PORT1</name><value>8223</value></port>
                    <!-- HTTP -->
                    <port><name>PORT2</name><value>8123</value></port>
                    <!-- TCP_SECURE -->
                    <port><name>PORT3</name><value>9002</value></port>
                    <!-- HTTPS_PORT -->
                    <port><name>PORT4</name><value>8125</value></port>
                    <!-- Exchange Stream Port-->
                    <port><name>PORT5</name><value>9400</value></port>
                    <!-- Exchange Status Port-->
                    <port><name>PORT6</name><value>9500</value></port>
                </ports>
            </node>
        </server>
        <tso>
            <psm>data.cnch.tso</psm>
            <!-- For dns -->
            <service>cnch-tso</service>
            <headless_service>cnch-tso-headless</headless_service>
            <!-- For local test -->
            <node>
                <host>ip_address_replace_me</host>
                <hostname>tso0</hostname>
                <ports>
                    <!-- RPC/Primary -->
                    <port><name>PORT0</name><value>8080</value></port>
                </ports>
            </node>
        </tso>
        <daemon_manager>
            <psm>data.cnch.daemon_manager</psm>
            <!-- For dns -->
            <service>cnch-daemonmanager</service>
            <headless_service>cnch-daemonmanager-headless</headless_service>
            <!-- For local test -->
            <node>
                <host>ip_address_replace_me</host>
                <hostname>dm0</hostname>
                <ports>
                    <!-- RPC/Primary -->
                    <port><name>PORT0</name><value>8090</value></port>
                </ports>
            </node>
        </daemon_manager>
        <resource_manager>
            <psm>data.cnch.resource_manager</psm>
            <!-- For dns -->
            <service>cnch-resourcemanager</service>
            <headless_service>cnch-resourcemanager-headless</headless_service>
            <!-- For local test -->
            <node>
                <host>ip_address_replace_me</host>
                <hostname>rm0</hostname>
                <ports>
                    <!-- RPC/Primary -->
                    <port><name>PORT0</name><value>8989</value></port>
                </ports>
            </node>
        </resource_manager>
        <vw>
            <psm>data.cnch.vw_default</psm>
            <!-- For local test -->
            <node>
                <vw_name>vw_default</vw_name>
                <host>ip_address_replace_me</host>
                <hostname>vw_default0</hostname>
                <ports>
                    <!-- TCP/Primary -->
                    <port><name>PORT0</name><value>9001</value></port>
                    <!-- RPC -->
                    <port><name>PORT1</name><value>8224</value></port>
                    <!-- HTTP -->
                    <port><name>PORT2</name><value>8124</value></port>
                    <!-- TCP_SECURE -->
                    <port><name>PORT3</name><value>9003</value></port>
                    <!-- HTTPS_PORT -->
                    <port><name>PORT4</name><value>8126</value></port>
                    <!-- Exchange Stream Port-->
                    <port><name>PORT5</name><value>9410</value></port>
                    <!-- Exchange Status Port-->
                    <port><name>PORT6</name><value>9510</value></port>
                </ports>
            </node>
            <node>
                <vw_name>vw_write</vw_name>
                <host>ip_address_replace_me</host>
                <hostname>vw_write0</hostname>
                <ports>
                    <!-- TCP/Primary -->
                    <port><name>PORT0</name><value>9001</value></port>
                    <!-- RPC -->
                    <port><name>PORT1</name><value>8224</value></port>
                    <!-- HTTP -->
                    <port><name>PORT2</name><value>8124</value></port>
                    <!-- TCP_SECURE -->
                    <port><name>PORT3</name><value>9003</value></port>
                    <!-- HTTPS_PORT -->
                    <port><name>PORT4</name><value>8126</value></port>
                    <!-- Exchange Stream Port-->
                    <port><name>PORT5</name><value>9410</value></port>
                    <!-- Exchange Status Port-->
                    <port><name>PORT6</name><value>9510</value></port>
                </ports>
            </node>
        </vw>
    </service_discovery>

    <catalog>
        <name_space>random_suffix_replace_me</name_space>
    </catalog>

    <tso_service>
        <port>8080</port>
        <!--Metastore storage type, support `bytekv` and `fdb`-->
        <type>fdb</type>
        <bytekv>
            <service_name>bytedance.bytekv.cnch_meta.service.lf</service_name>
            <cluster_name>cnch_meta</cluster_name>
            <name_space>bytekv_cnch_build</name_space>
            <table_name>cnch_tso_build</table_name>
            <key_name>tso</key_name>
        </bytekv>
        <fdb>
            <cluster_file>fdb_cluster_config_path_replace_me</cluster_file>>
        </fdb>
        <tso_window_ms>3000</tso_window_ms>
        <tso_max_retry_count>3</tso_max_retry_count>
        <!-- If use_fallback is true, read_only transactions during TSO unavailability will succeed but there is a small risk the returned result is incorrect -->
        <use_fallback>true</use_fallback>
    </tso_service>

    <data_paths>
        <data_path>
            <level>0</level>
                <path>/cnch/cnch_test/server/data/</path>
                <type>local</type>
        </data_path>
        <data_path>
                <level>1</level>
                <path>/user/cnch_ci/random_suffix_replace_me/</path>
                <type>hdfs</type>
        </data_path>
    </data_paths>

    <hdfs_nnproxy>data.bytehouse.nnproxy-hostnetwork.service.lf</hdfs_nnproxy>
</yandex>
