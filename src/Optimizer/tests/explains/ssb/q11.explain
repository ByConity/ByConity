Projection est. 12105 rows
│     Expressions: [C_NATION], d_year:=`expr#toYear(LO_ORDERDATE)`, profit:=`expr#sum(minus(LO_REVENUE, LO_SUPPLYCOST))`
└─ Sorting est. 12105 rows
   │     Order by: {expr#toYear(LO_ORDERDATE) asc, C_NATION asc}
   └─ Gather Exchange est. 12105 rows
      └─ Sorting est. 12105 rows
         │     Order by: {expr#toYear(LO_ORDERDATE) asc, C_NATION asc}
         └─ MergingAggregated est. 12105 rows
            └─ Repartition Exchange est. 12105 rows
               │     Partition by: {C_NATION, expr#toYear(LO_ORDERDATE)}
               └─ Aggregating est. 12105 rows
                  │     Group by: {C_NATION, expr#toYear(LO_ORDERDATE)}
                  │     Aggregates: expr#sum(minus(LO_REVENUE, LO_SUPPLYCOST)):=AggNull(sum)(expr#minus(LO_REVENUE, LO_SUPPLYCOST))
                  └─ Projection est. 200551286 rows
                     │     Expressions: [C_NATION], expr#minus(LO_REVENUE, LO_SUPPLYCOST):=LO_REVENUE - LO_SUPPLYCOST, expr#toYear(LO_ORDERDATE):=toYear(LO_ORDERDATE)
                     └─ Inner Join est. 200551286 rows
                        │     Condition: LO_PARTKEY == P_PARTKEY
                        ├─ Repartition Exchange est. 351541928 rows
                        │  │     Partition by: {LO_PARTKEY}
                        │  └─ Inner Join est. 351541928 rows
                        │     │     Condition: LO_CUSTKEY == C_CUSTKEY
                        │     ├─ Repartition Exchange est. 1199857024 rows
                        │     │  │     Partition by: {LO_CUSTKEY}
                        │     │  └─ Inner Join est. 1199857024 rows
                        │     │     │     Condition: LO_SUPPKEY == S_SUPPKEY
                        │     │     ├─ Repartition Exchange est. 5999989813 rows
                        │     │     │  │     Partition by: {LO_SUPPKEY}
                        │     │     │  └─ Filter est. 5999989813 rows
                        │     │     │     │     Dynamic Filters: {LO_CUSTKEY:bloomfilter,LO_CUSTKEY:range,LO_PARTKEY:bloomfilter,LO_PARTKEY:range,LO_SUPPKEY:bloomfilter,LO_SUPPKEY:range}
                        │     │     │     └─ TableScan ssb.lineorder est. 5999989813 rows
                        │     │     │              Outputs: [LO_CUSTKEY, LO_ORDERDATE, LO_PARTKEY, LO_REVENUE, LO_SUPPKEY, LO_SUPPLYCOST]
                        │     │     └─ Repartition Exchange est. 399954 rows
                        │     │        │     Partition by: {S_SUPPKEY}
                        │     │        └─ Projection est. 399954 rows
                        │     │           │     Expressions: [S_REGION, S_SUPPKEY]
                        │     │           │     Dynamic Filters Builder: {S_SUPPKEY}
                        │     │           └─ Filter est. 399954 rows
                        │     │              │     Condition: S_REGION = 'AMERICA'
                        │     │              └─ TableScan ssb.supplier est. 2000000 rows
                        │     │                       Outputs: [S_REGION, S_SUPPKEY]
                        │     └─ Repartition Exchange est. 6000975 rows
                        │        │     Partition by: {C_CUSTKEY}
                        │        └─ Projection est. 6000975 rows
                        │           │     Expressions: [C_CUSTKEY, C_NATION, C_REGION]
                        │           │     Dynamic Filters Builder: {C_CUSTKEY}
                        │           └─ Filter est. 6000975 rows
                        │              │     Condition: C_REGION = 'AMERICA'
                        │              └─ TableScan ssb.customer est. 30000000 rows
                        │                       Outputs: [C_CUSTKEY, C_NATION, C_REGION]
                        └─ Repartition Exchange est. 799457 rows
                           │     Partition by: {P_PARTKEY}
                           └─ Projection est. 799457 rows
                              │     Expressions: [P_MFGR, P_PARTKEY]
                              │     Dynamic Filters Builder: {P_PARTKEY}
                              └─ Filter est. 799457 rows
                                 │     Condition: P_MFGR IN ('MFGR#1', 'MFGR#2')
                                 └─ TableScan ssb.part est. 2000000 rows
                                          Outputs: [P_MFGR, P_PARTKEY]
note: Dynamic Filter is applied for 6 times.
