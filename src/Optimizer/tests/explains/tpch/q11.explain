Projection est. ? rows
│     Expressions: [ps_partkey], value:=`expr#sum(multiply(ps_supplycost, ps_availqty))`
└─ Sorting est. ? rows
   │     Order by: {expr#sum(multiply(ps_supplycost, ps_availqty)) desc nulls_last}
   └─ Gather Exchange est. ? rows
      └─ Sorting est. ? rows
         │     Order by: {expr#sum(multiply(ps_supplycost, ps_availqty)) desc nulls_last}
         └─ Inner Join est. ? rows
            │     Condition: 
            │     Filter: `expr#sum(multiply(ps_supplycost, ps_availqty))` > `expr#multiply(sum(multiply(ps_supplycost, ps_availqty)), CAST('0.0001', 'Decimal(18, 4)'))`
            ├─ MergingAggregated est. 32000 rows
            │  └─ Repartition Exchange est. 32000 rows
            │     │     Partition by: {ps_partkey}
            │     └─ Aggregating est. 32000 rows
            │        │     Group by: {ps_partkey}
            │        │     Aggregates: expr#sum(multiply(ps_supplycost, ps_availqty)):=AggNull(sum)(expr#multiply(ps_supplycost, ps_availqty))
            │        └─ Projection est. 32000 rows
            │           │     Expressions: [ps_partkey], expr#multiply(ps_supplycost, ps_availqty):=ps_supplycost * ps_availqty
            │           └─ Inner Join est. 31990 rows
            │              │     Condition: ps_suppkey == s_suppkey
            │              ├─ Local Exchange est. 800000 rows
            │              │  └─ Filter est. 800000 rows
            │              │     │     Dynamic Filters: {ps_suppkey:bloomfilter,ps_suppkey:range}
            │              │     └─ TableScan tpch.partsupp est. 800000 rows
            │              │              Outputs: [ps_availqty, ps_partkey, ps_suppkey, ps_supplycost]
            │              └─ Broadcast Exchange est. 400 rows
            │                 └─ Projection est. 400 rows
            │                    │     Expressions: [s_suppkey]
            │                    │     Dynamic Filters Builder: {s_suppkey}
            │                    └─ Inner Join est. 400 rows
            │                       │     Condition: s_nationkey == n_nationkey
            │                       ├─ Local Exchange est. 10000 rows
            │                       │  └─ Filter est. 10000 rows
            │                       │     │     Dynamic Filters: {s_nationkey:bloomfilter,s_nationkey:range}
            │                       │     └─ TableScan tpch.supplier est. 10000 rows
            │                       │              Outputs: [s_nationkey, s_suppkey]
            │                       └─ Broadcast Exchange est. 1 rows
            │                          └─ Projection est. 1 rows
            │                             │     Expressions: [n_name, n_nationkey]
            │                             │     Dynamic Filters Builder: {n_nationkey}
            │                             └─ Filter est. 1 rows
            │                                │     Condition: n_name = 'GERMANY'
            │                                └─ TableScan tpch.nation est. 25 rows
            │                                         Outputs: [n_name, n_nationkey]
            └─ Broadcast Exchange est. 1 rows
               └─ Projection est. 1 rows
                  │     Expressions: expr#multiply(sum(multiply(ps_supplycost, ps_availqty)), CAST('0.0001', 'Decimal(18, 4)')):=`expr#sum(multiply(ps_supplycost, ps_availqty))_1` * '0.0001'
                  └─ MergingAggregated est. 1 rows
                     └─ Gather Exchange est. 1 rows
                        └─ Aggregating est. 1 rows
                           │     Group by: {}
                           │     Aggregates: expr#sum(multiply(ps_supplycost, ps_availqty))_1:=AggNull(sum)(expr#multiply(ps_supplycost, ps_availqty)_1)
                           └─ Projection est. 32000 rows
                              │     Expressions: expr#multiply(ps_supplycost, ps_availqty)_1:=ps_supplycost_1 * ps_availqty_1
                              └─ Inner Join est. 31990 rows
                                 │     Condition: ps_suppkey_1 == s_suppkey_1
                                 ├─ Local Exchange est. 800000 rows
                                 │  └─ Filter est. 800000 rows
                                 │     │     Dynamic Filters: {ps_suppkey_1:bloomfilter,ps_suppkey_1:range}
                                 │     └─ TableScan tpch.partsupp est. 800000 rows
                                 │              Outputs: ps_availqty_1:=ps_availqty, ps_suppkey_1:=ps_suppkey, ps_supplycost_1:=ps_supplycost
                                 └─ Broadcast Exchange est. 400 rows
                                    └─ Projection est. 400 rows
                                       │     Expressions: [s_suppkey_1]
                                       │     Dynamic Filters Builder: {s_suppkey_1}
                                       └─ Inner Join est. 400 rows
                                          │     Condition: s_nationkey_1 == n_nationkey_1
                                          ├─ Local Exchange est. 10000 rows
                                          │  └─ Filter est. 10000 rows
                                          │     │     Dynamic Filters: {s_nationkey_1:bloomfilter,s_nationkey_1:range}
                                          │     └─ TableScan tpch.supplier est. 10000 rows
                                          │              Outputs: s_nationkey_1:=s_nationkey, s_suppkey_1:=s_suppkey
                                          └─ Broadcast Exchange est. 1 rows
                                             └─ Projection est. 1 rows
                                                │     Expressions: [n_name_1, n_nationkey_1]
                                                │     Dynamic Filters Builder: {n_nationkey_1}
                                                └─ Filter est. 1 rows
                                                   │     Condition: n_name_1 = 'GERMANY'
                                                   └─ TableScan tpch.nation est. 25 rows
                                                            Outputs: n_name_1:=n_name, n_nationkey_1:=n_nationkey
note: Dynamic Filter is applied for 8 times.
