Projection est. 100 rows
│     Expressions: [i_category, i_class, i_current_price, i_item_desc, i_item_id], itemrevenue:=`expr#sum(ws_ext_sales_price)`, revenueratio:=`expr#divide(multiply(sum(ws_ext_sales_price), 100), sum(sum(ws_ext_sales_price)) OVER (PARTITION BY i_class))`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. 1690291 rows
      │     Order by: {i_category asc, i_class asc, i_item_id asc, i_item_desc asc, expr#divide(multiply(sum(ws_ext_sales_price), 100), sum(sum(ws_ext_sales_price)) OVER (PARTITION BY i_class)) asc}
      │     Limit: 100
      └─ Gather Exchange est. 1690291 rows
         └─ Sorting est. 1690291 rows
            │     Order by: {i_category asc, i_class asc, i_item_id asc, i_item_desc asc, expr#divide(multiply(sum(ws_ext_sales_price), 100), sum(sum(ws_ext_sales_price)) OVER (PARTITION BY i_class)) asc}
            │     Limit: 100
            └─ Projection est. 1690291 rows
               │     Expressions: [expr#sum(ws_ext_sales_price), i_category, i_class, i_current_price, i_item_desc, i_item_id], expr#divide(multiply(sum(ws_ext_sales_price), 100), sum(sum(ws_ext_sales_price)) OVER (PARTITION BY i_class)):=(`expr#sum(ws_ext_sales_price)` * 100) / `expr#sum(sum(ws_ext_sales_price)) OVER (PARTITION BY i_class)`
               └─ Window est. 1690291 rows
                  └─ Repartition Exchange est. 1690291 rows
                     │     Partition by: {i_class}
                     └─ MergingAggregated est. 1690291 rows
                        └─ Repartition Exchange est. 1690291 rows
                           │     Partition by: {i_category, i_class, i_current_price, i_item_desc, i_item_id}
                           └─ Aggregating est. 1690291 rows
                              │     Group by: {i_category, i_class, i_current_price, i_item_desc, i_item_id}
                              │     Aggregates: expr#sum(ws_ext_sales_price):=AggNull(sum)(ws_ext_sales_price)
                              └─ Inner Join est. 1690291 rows
                                 │     Condition: ws_item_sk == i_item_sk
                                 ├─ Repartition Exchange est. 5640197 rows
                                 │  │     Partition by: {ws_item_sk}
                                 │  └─ Inner Join est. 5640197 rows
                                 │     │     Condition: ws_sold_date_sk == d_date_sk
                                 │     ├─ Local Exchange est. 720000376 rows
                                 │     │  └─ Filter est. 720000376 rows
                                 │     │     │     Dynamic Filters: {ws_item_sk:bloomfilter,ws_item_sk:range,ws_sold_date_sk:bloomfilter,ws_sold_date_sk:range}
                                 │     │     └─ TableScan tpcds.web_sales est. 720000376 rows
                                 │     │              Outputs: [ws_ext_sales_price, ws_item_sk, ws_sold_date_sk]
                                 │     └─ Broadcast Exchange est. 29 rows
                                 │        └─ Projection est. 29 rows
                                 │           │     Expressions: [d_date, d_date_sk]
                                 │           │     Dynamic Filters Builder: {d_date_sk}
                                 │           └─ Filter est. 29 rows
                                 │              │     Condition: (d_date >= cast(10644, 'Date')) AND (d_date <= cast(10674, 'Date'))
                                 │              └─ TableScan tpcds.date_dim est. 73049 rows
                                 │                       Outputs: [d_date, d_date_sk]
                                 └─ Repartition Exchange est. 89906 rows
                                    │     Partition by: {i_item_sk}
                                    └─ Projection est. 89906 rows
                                       │     Expressions: [i_category, i_class, i_current_price, i_item_desc, i_item_id, i_item_sk]
                                       │     Dynamic Filters Builder: {i_item_sk}
                                       └─ Filter est. 89906 rows
                                          │     Condition: i_category IN ('Sports', 'Books', 'Home')
                                          └─ TableScan tpcds.item est. 300000 rows
                                                   Outputs: [i_category, i_class, i_current_price, i_item_desc, i_item_id, i_item_sk]
note: Dynamic Filter is applied for 4 times.
