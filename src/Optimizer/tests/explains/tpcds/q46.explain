Projection est. 100 rows
│     Expressions: [c_first_name, c_last_name, ss_ticket_number], amt:=`expr#sum(ss_coupon_amt)`, bought_city:=ca_city, ca_city:=ca_city_1, profit:=`expr#sum(ss_net_profit)`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. 8259929 rows
      │     Order by: {c_last_name asc, c_first_name asc, ca_city_1 asc, ca_city asc, ss_ticket_number asc}
      └─ Gather Exchange est. 8259929 rows
         └─ Sorting est. 8259929 rows
            │     Order by: {c_last_name asc, c_first_name asc, ca_city_1 asc, ca_city asc, ss_ticket_number asc}
            └─ Inner Join est. 8259929 rows
               │     Condition: c_current_addr_sk == ca_address_sk_1
               │     Filter: ca_city_1 != ca_city
               ├─ Repartition Exchange est. 8259929 rows
               │  │     Partition by: {c_current_addr_sk}
               │  └─ Inner Join est. 8259929 rows
               │     │     Condition: c_customer_sk == ss_customer_sk
               │     ├─ Repartition Exchange est. 12000000 rows
               │     │  │     Partition by: {c_customer_sk}
               │     │  └─ TableScan tpcds.customer est. 12000000 rows
               │     │           Outputs: [c_current_addr_sk, c_customer_sk, c_first_name, c_last_name]
               │     └─ Repartition Exchange est. 8591075 rows
               │        │     Partition by: {ss_customer_sk}
               │        └─ Aggregating est. 8591075 rows
               │           │     Group by: {ca_city, ss_addr_sk, ss_customer_sk, ss_ticket_number}
               │           │     Aggregates: expr#sum(ss_coupon_amt):=AggNull(sum)(ss_coupon_amt), expr#sum(ss_net_profit):=AggNull(sum)(ss_net_profit)
               │           └─ Inner Join est. 8591075 rows
               │              │     Condition: ss_addr_sk == ca_address_sk
               │              ├─ Repartition Exchange est. 8810987 rows
               │              │  │     Partition by: {ss_addr_sk}
               │              │  └─ Inner Join est. 8810987 rows
               │              │     │     Condition: ss_hdemo_sk == hd_demo_sk
               │              │     ├─ Inner Join est. 35346744 rows
               │              │     │  │     Condition: ss_sold_date_sk == d_date_sk
               │              │     │  ├─ Inner Join est. 209031387 rows
               │              │     │  │  │     Condition: ss_store_sk == s_store_sk
               │              │     │  │  ├─ Local Exchange est. 2879987999 rows
               │              │     │  │  │  └─ Filter est. 2879987999 rows
               │              │     │  │  │     │     Dynamic Filters: {ss_hdemo_sk:bloomfilter,ss_hdemo_sk:range,ss_sold_date_sk:bloomfilter,ss_sold_date_sk:range,ss_store_sk:bloomfilter,ss_store_sk:range}
               │              │     │  │  │     └─ TableScan tpcds.store_sales est. 2879987999 rows
               │              │     │  │  │              Outputs: [ss_addr_sk, ss_coupon_amt, ss_customer_sk, ss_hdemo_sk, ss_net_profit, ss_sold_date_sk, ss_store_sk, ss_ticket_number]
               │              │     │  │  └─ Broadcast Exchange est. 36 rows
               │              │     │  │     └─ Projection est. 36 rows
               │              │     │  │        │     Expressions: [s_city, s_store_sk]
               │              │     │  │        │     Dynamic Filters Builder: {s_store_sk}
               │              │     │  │        └─ Filter est. 36 rows
               │              │     │  │           │     Condition: s_city IN ('Fairview', 'Midway', ' Fairview')
               │              │     │  │           └─ TableScan tpcds.store est. 1002 rows
               │              │     │  │                    Outputs: [s_city, s_store_sk]
               │              │     │  └─ Broadcast Exchange est. 313 rows
               │              │     │     └─ Projection est. 313 rows
               │              │     │        │     Expressions: [d_date_sk, d_dow, d_year]
               │              │     │        │     Dynamic Filters Builder: {d_date_sk}
               │              │     │        └─ Filter est. 313 rows
               │              │     │           │     Condition: (d_year IN (1999, 2000, 2001)) AND (d_dow IN (6, 0))
               │              │     │           └─ TableScan tpcds.date_dim est. 73049 rows
               │              │     │                    Outputs: [d_date_sk, d_dow, d_year]
               │              │     └─ Broadcast Exchange est. 1800 rows
               │              │        └─ Projection est. 1800 rows
               │              │           │     Expressions: [hd_demo_sk, hd_dep_count, hd_vehicle_count]
               │              │           │     Dynamic Filters Builder: {hd_demo_sk}
               │              │           └─ Filter est. 1800 rows
               │              │              │     Condition: (hd_vehicle_count = 3) OR (hd_dep_count = 4)
               │              │              └─ TableScan tpcds.household_demographics est. 7200 rows
               │              │                       Outputs: [hd_demo_sk, hd_dep_count, hd_vehicle_count]
               │              └─ Repartition Exchange est. 6000000 rows
               │                 │     Partition by: {ca_address_sk}
               │                 └─ TableScan tpcds.customer_address est. 6000000 rows
               │                          Outputs: [ca_address_sk, ca_city]
               └─ Repartition Exchange est. 6000000 rows
                  │     Partition by: {ca_address_sk_1}
                  └─ TableScan tpcds.customer_address est. 6000000 rows
                           Outputs: ca_address_sk_1:=ca_address_sk, ca_city_1:=ca_city
note: Dynamic Filter is applied for 6 times.
