Projection est. 100 rows
│     Expressions: channel:=`expr#'web'_1`, currency_rank:=`expr#rank() OVER (ORDER BY currency_ratio ASC)_3`, item:=ws_item_sk_1, return_rank:=`expr#rank() OVER (ORDER BY return_ratio ASC)_3`, return_ratio:=`expr#divide(CAST(sum(coalesce(wr.wr_return_quantity, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(ws.ws_quantity, 0)), 'decimal(15, 4)'))_1`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. 276359 rows
      │     Order by: {expr#'web'_1 asc, expr#rank() OVER (ORDER BY return_ratio ASC)_3 asc, expr#rank() OVER (ORDER BY currency_ratio ASC)_3 asc, ws_item_sk_1 asc}
      └─ Distinct est. 276359 rows
         └─ Union est. 276359 rows
            └─ Union est. 276359 rows
               ├─ Projection est. 103708 rows
               │  │     Expressions: [expr#divide(CAST(sum(coalesce(wr.wr_return_quantity, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(ws.ws_quantity, 0)), 'decimal(15, 4)')), expr#rank() OVER (ORDER BY currency_ratio ASC), expr#rank() OVER (ORDER BY return_ratio ASC), ws_item_sk], expr#'web':='web'
               │  └─ Filter est. 103708 rows
               │     │     Condition: (`expr#rank() OVER (ORDER BY currency_ratio ASC)` <= 10) OR (`expr#rank() OVER (ORDER BY return_ratio ASC)` <= 10)
               │     └─ Window est. 115232 rows
               │        └─ Window est. 115232 rows
               │           └─ Gather Exchange est. 115232 rows
               │              └─ Projection est. 115232 rows
               │                 │     Expressions: [ws_item_sk], expr#divide(CAST(sum(coalesce(wr.wr_return_amt, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(ws.ws_net_paid, 0)), 'decimal(15, 4)')):=CAST(`expr#sum(coalesce(wr.wr_return_amt, 0))`, 'decimal(15, 4)') / CAST(`expr#sum(coalesce(ws.ws_net_paid, 0))`, 'decimal(15, 4)'), expr#divide(CAST(sum(coalesce(wr.wr_return_quantity, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(ws.ws_quantity, 0)), 'decimal(15, 4)')):=CAST(`expr#sum(coalesce(wr.wr_return_quantity, 0))`, 'decimal(15, 4)') / CAST(`expr#sum(coalesce(ws.ws_quantity, 0))`, 'decimal(15, 4)')
               │                 └─ MergingAggregated est. 115232 rows
               │                    └─ Repartition Exchange est. 115232 rows
               │                       │     Partition by: {ws_item_sk}
               │                       └─ Aggregating est. 115232 rows
               │                          │     Group by: {ws_item_sk}
               │                          │     Aggregates: expr#sum(coalesce(wr.wr_return_quantity, 0)):=AggNull(sum)(expr#coalesce(wr.wr_return_quantity, 0)), expr#sum(coalesce(ws.ws_quantity, 0)):=AggNull(sum)(expr#coalesce(ws.ws_quantity, 0)), expr#sum(coalesce(wr.wr_return_amt, 0)):=AggNull(sum)(expr#coalesce(wr.wr_return_amt, 0)), expr#sum(coalesce(ws.ws_net_paid, 0)):=AggNull(sum)(expr#coalesce(ws.ws_net_paid, 0))
               │                          └─ Projection est. 320737 rows
               │                             │     Expressions: [ws_item_sk], expr#coalesce(wr.wr_return_amt, 0):=coalesce(wr_return_amt, 0), expr#coalesce(wr.wr_return_quantity, 0):=coalesce(wr_return_quantity, 0), expr#coalesce(ws.ws_net_paid, 0):=coalesce(ws_net_paid, 0), expr#coalesce(ws.ws_quantity, 0):=coalesce(ws_quantity, 0)
               │                             └─ Inner Join est. 633592 rows
               │                                │     Condition: ws_item_sk == wr_item_sk, ws_order_number == wr_order_number
               │                                ├─ Repartition Exchange est. 11684952 rows
               │                                │  │     Partition by: {ws_item_sk, ws_order_number}
               │                                │  └─ Inner Join est. 11684952 rows
               │                                │     │     Condition: ws_sold_date_sk == d_date_sk
               │                                │     ├─ Local Exchange est. 276933386 rows
               │                                │     │  └─ Filter est. 276933386 rows
               │                                │     │     │     Condition: (ws_net_paid > 0.) AND (ws_quantity > 0) AND (ws_net_profit > 1.)
               │                                │     │     │     Dynamic Filters: {ws_item_sk:bloomfilter,ws_item_sk:range,ws_order_number:bloomfilter,ws_order_number:range,ws_sold_date_sk:bloomfilter,ws_sold_date_sk:range}
               │                                │     │     └─ TableScan tpcds.web_sales est. 720000376 rows
               │                                │     │              Outputs: [ws_item_sk, ws_net_paid, ws_net_profit, ws_order_number, ws_quantity, ws_sold_date_sk]
               │                                │     └─ Broadcast Exchange est. 30 rows
               │                                │        └─ Projection est. 30 rows
               │                                │           │     Expressions: [d_date_sk, d_moy, d_year]
               │                                │           │     Dynamic Filters Builder: {d_date_sk}
               │                                │           └─ Filter est. 30 rows
               │                                │              │     Condition: (d_year = 2001) AND (d_moy = 12)
               │                                │              └─ TableScan tpcds.date_dim est. 73049 rows
               │                                │                       Outputs: [d_date_sk, d_moy, d_year]
               │                                └─ Repartition Exchange est. 633592 rows
               │                                   │     Partition by: {wr_item_sk, wr_order_number}
               │                                   └─ Projection est. 633592 rows
               │                                      │     Expressions: [wr_item_sk, wr_order_number, wr_return_amt, wr_return_quantity]
               │                                      │     Dynamic Filters Builder: {wr_item_sk,wr_order_number}
               │                                      └─ Filter est. 633592 rows
               │                                         │     Condition: wr_return_amt > 10000.
               │                                         └─ TableScan tpcds.web_returns est. 71997522 rows
               │                                                  Outputs: [wr_item_sk, wr_order_number, wr_return_amt, wr_return_quantity]
               ├─ Projection est. 103715 rows
               │  │     Expressions: [cs_item_sk, expr#divide(CAST(sum(coalesce(cr.cr_return_quantity, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(cs.cs_quantity, 0)), 'decimal(15, 4)')), expr#rank() OVER (ORDER BY currency_ratio ASC)_1, expr#rank() OVER (ORDER BY return_ratio ASC)_1], expr#'catalog':='catalog'
               │  └─ Filter est. 103715 rows
               │     │     Condition: (`expr#rank() OVER (ORDER BY return_ratio ASC)_1` <= 10) OR (`expr#rank() OVER (ORDER BY currency_ratio ASC)_1` <= 10)
               │     └─ Window est. 115239 rows
               │        └─ Window est. 115239 rows
               │           └─ Gather Exchange est. 115239 rows
               │              └─ Projection est. 115239 rows
               │                 │     Expressions: [cs_item_sk], expr#divide(CAST(sum(coalesce(cr.cr_return_amount, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(cs.cs_net_paid, 0)), 'decimal(15, 4)')):=CAST(`expr#sum(coalesce(cr.cr_return_amount, 0))`, 'decimal(15, 4)') / CAST(`expr#sum(coalesce(cs.cs_net_paid, 0))`, 'decimal(15, 4)'), expr#divide(CAST(sum(coalesce(cr.cr_return_quantity, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(cs.cs_quantity, 0)), 'decimal(15, 4)')):=CAST(`expr#sum(coalesce(cr.cr_return_quantity, 0))`, 'decimal(15, 4)') / CAST(`expr#sum(coalesce(cs.cs_quantity, 0))`, 'decimal(15, 4)')
               │                 └─ MergingAggregated est. 115239 rows
               │                    └─ Repartition Exchange est. 115239 rows
               │                       │     Partition by: {cs_item_sk}
               │                       └─ Aggregating est. 115239 rows
               │                          │     Group by: {cs_item_sk}
               │                          │     Aggregates: expr#sum(coalesce(cr.cr_return_quantity, 0)):=AggNull(sum)(expr#coalesce(cr.cr_return_quantity, 0)), expr#sum(coalesce(cs.cs_quantity, 0)):=AggNull(sum)(expr#coalesce(cs.cs_quantity, 0)), expr#sum(coalesce(cr.cr_return_amount, 0)):=AggNull(sum)(expr#coalesce(cr.cr_return_amount, 0)), expr#sum(coalesce(cs.cs_net_paid, 0)):=AggNull(sum)(expr#coalesce(cs.cs_net_paid, 0))
               │                          └─ Projection est. 479808 rows
               │                             │     Expressions: [cs_item_sk], expr#coalesce(cr.cr_return_amount, 0):=coalesce(cr_return_amount, 0), expr#coalesce(cr.cr_return_quantity, 0):=coalesce(cr_return_quantity, 0), expr#coalesce(cs.cs_net_paid, 0):=coalesce(cs_net_paid, 0), expr#coalesce(cs.cs_quantity, 0):=coalesce(cs_quantity, 0)
               │                             └─ Inner Join est. 1272788 rows
               │                                │     Condition: cs_item_sk == cr_item_sk, cs_order_number == cr_order_number
               │                                ├─ Repartition Exchange est. 23207765 rows
               │                                │  │     Partition by: {cs_item_sk, cs_order_number}
               │                                │  └─ Inner Join est. 23207765 rows
               │                                │     │     Condition: cs_sold_date_sk == d_date_sk_1
               │                                │     ├─ Local Exchange est. 553892004 rows
               │                                │     │  └─ Filter est. 553892004 rows
               │                                │     │     │     Condition: (cs_net_paid > 0.) AND (cs_quantity > 0) AND (cs_net_profit > 1.)
               │                                │     │     │     Dynamic Filters: {cs_item_sk:bloomfilter,cs_item_sk:range,cs_order_number:bloomfilter,cs_order_number:range,cs_sold_date_sk:bloomfilter,cs_sold_date_sk:range}
               │                                │     │     └─ TableScan tpcds.catalog_sales est. 1439980416 rows
               │                                │     │              Outputs: [cs_item_sk, cs_net_paid, cs_net_profit, cs_order_number, cs_quantity, cs_sold_date_sk]
               │                                │     └─ Broadcast Exchange est. 30 rows
               │                                │        └─ Projection est. 30 rows
               │                                │           │     Expressions: [d_date_sk_1, d_moy_1, d_year_1]
               │                                │           │     Dynamic Filters Builder: {d_date_sk_1}
               │                                │           └─ Filter est. 30 rows
               │                                │              │     Condition: (d_moy_1 = 12) AND (d_year_1 = 2001)
               │                                │              └─ TableScan tpcds.date_dim est. 73049 rows
               │                                │                       Outputs: d_date_sk_1:=d_date_sk, d_moy_1:=d_moy, d_year_1:=d_year
               │                                └─ Repartition Exchange est. 1272788 rows
               │                                   │     Partition by: {cr_item_sk, cr_order_number}
               │                                   └─ Projection est. 1272788 rows
               │                                      │     Expressions: [cr_item_sk, cr_order_number, cr_return_amount, cr_return_quantity]
               │                                      │     Dynamic Filters Builder: {cr_item_sk,cr_order_number}
               │                                      └─ Filter est. 1272788 rows
               │                                         │     Condition: cr_return_amount > 10000.
               │                                         └─ TableScan tpcds.catalog_returns est. 143996756 rows
               │                                                  Outputs: [cr_item_sk, cr_order_number, cr_return_amount, cr_return_quantity]
               └─ Projection est. 68936 rows
                  │     Expressions: [expr#divide(CAST(sum(coalesce(sr.sr_return_quantity, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(sts.ss_quantity, 0)), 'decimal(15, 4)')), expr#rank() OVER (ORDER BY currency_ratio ASC)_2, expr#rank() OVER (ORDER BY return_ratio ASC)_2, ss_item_sk], expr#'store':='store'
                  └─ Filter est. 68936 rows
                     │     Condition: (`expr#rank() OVER (ORDER BY return_ratio ASC)_2` <= 10) OR (`expr#rank() OVER (ORDER BY currency_ratio ASC)_2` <= 10)
                     └─ Window est. 76596 rows
                        └─ Window est. 76596 rows
                           └─ Gather Exchange est. 76596 rows
                              └─ Projection est. 76596 rows
                                 │     Expressions: [ss_item_sk], expr#divide(CAST(sum(coalesce(sr.sr_return_amt, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(sts.ss_net_paid, 0)), 'decimal(15, 4)')):=CAST(`expr#sum(coalesce(sr.sr_return_amt, 0))`, 'decimal(15, 4)') / CAST(`expr#sum(coalesce(sts.ss_net_paid, 0))`, 'decimal(15, 4)'), expr#divide(CAST(sum(coalesce(sr.sr_return_quantity, 0)), 'decimal(15, 4)'), CAST(sum(coalesce(sts.ss_quantity, 0)), 'decimal(15, 4)')):=CAST(`expr#sum(coalesce(sr.sr_return_quantity, 0))`, 'decimal(15, 4)') / CAST(`expr#sum(coalesce(sts.ss_quantity, 0))`, 'decimal(15, 4)')
                                 └─ MergingAggregated est. 76596 rows
                                    └─ Repartition Exchange est. 76596 rows
                                       │     Partition by: {ss_item_sk}
                                       └─ Aggregating est. 76596 rows
                                          │     Group by: {ss_item_sk}
                                          │     Aggregates: expr#sum(coalesce(sr.sr_return_quantity, 0)):=AggNull(sum)(expr#coalesce(sr.sr_return_quantity, 0)), expr#sum(coalesce(sts.ss_quantity, 0)):=AggNull(sum)(expr#coalesce(sts.ss_quantity, 0)), expr#sum(coalesce(sr.sr_return_amt, 0)):=AggNull(sum)(expr#coalesce(sr.sr_return_amt, 0)), expr#sum(coalesce(sts.ss_net_paid, 0)):=AggNull(sum)(expr#coalesce(sts.ss_net_paid, 0))
                                          └─ Projection est. 557253 rows
                                             │     Expressions: [ss_item_sk], expr#coalesce(sr.sr_return_amt, 0):=coalesce(sr_return_amt, 0), expr#coalesce(sr.sr_return_quantity, 0):=coalesce(sr_return_quantity, 0), expr#coalesce(sts.ss_net_paid, 0):=coalesce(ss_net_paid, 0), expr#coalesce(sts.ss_quantity, 0):=coalesce(ss_quantity, 0)
                                             └─ Inner Join est. 732503 rows
                                                │     Condition: ss_item_sk == sr_item_sk, ss_ticket_number == sr_ticket_number
                                                ├─ Repartition Exchange est. 46701324 rows
                                                │  │     Partition by: {ss_item_sk, ss_ticket_number}
                                                │  └─ Inner Join est. 46701324 rows
                                                │     │     Condition: ss_sold_date_sk == d_date_sk_2
                                                │     ├─ Local Exchange est. 736324221 rows
                                                │     │  └─ Filter est. 736324221 rows
                                                │     │     │     Condition: (ss_net_paid > 0.) AND (ss_net_profit > 1.) AND (ss_quantity > 0)
                                                │     │     │     Dynamic Filters: {ss_item_sk:bloomfilter,ss_item_sk:range,ss_sold_date_sk:bloomfilter,ss_sold_date_sk:range,ss_ticket_number:bloomfilter,ss_ticket_number:range}
                                                │     │     └─ TableScan tpcds.store_sales est. 2879987999 rows
                                                │     │              Outputs: [ss_item_sk, ss_net_paid, ss_net_profit, ss_quantity, ss_sold_date_sk, ss_ticket_number]
                                                │     └─ Broadcast Exchange est. 30 rows
                                                │        └─ Projection est. 30 rows
                                                │           │     Expressions: [d_date_sk_2, d_moy_2, d_year_2]
                                                │           │     Dynamic Filters Builder: {d_date_sk_2}
                                                │           └─ Filter est. 30 rows
                                                │              │     Condition: (d_year_2 = 2001) AND (d_moy_2 = 12)
                                                │              └─ TableScan tpcds.date_dim est. 73049 rows
                                                │                       Outputs: d_date_sk_2:=d_date_sk, d_moy_2:=d_moy, d_year_2:=d_year
                                                └─ Repartition Exchange est. 732503 rows
                                                   │     Partition by: {sr_item_sk, sr_ticket_number}
                                                   └─ Projection est. 732503 rows
                                                      │     Expressions: [sr_item_sk, sr_return_amt, sr_return_quantity, sr_ticket_number]
                                                      │     Dynamic Filters Builder: {sr_item_sk,sr_ticket_number}
                                                      └─ Filter est. 732503 rows
                                                         │     Condition: sr_return_amt > 10000.
                                                         └─ TableScan tpcds.store_returns est. 287999764 rows
                                                                  Outputs: [sr_item_sk, sr_return_amt, sr_return_quantity, sr_ticket_number]
note: Dynamic Filter is applied for 18 times.
