Projection est. 100 rows
│     Expressions: multiply(divide(CAST(promotions, 'decimal(15, 4)'), CAST(total, 'decimal(15, 4)')), 100):=(CAST(`expr#sum(ss_ext_sales_price)`, 'decimal(15, 4)') / CAST(`expr#sum(ss_ext_sales_price)_1`, 'decimal(15, 4)')) * 100, promotions:=`expr#sum(ss_ext_sales_price)`, total:=`expr#sum(ss_ext_sales_price)_1`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. ? rows
      │     Order by: {expr#sum(ss_ext_sales_price) asc, expr#sum(ss_ext_sales_price)_1 asc}
      │     Limit: 100
      └─ Inner Join est. ? rows
         │     Condition: 
         ├─ MergingAggregated est. 1 rows
         │  └─ Gather Exchange est. 1 rows
         │     └─ Aggregating est. 1 rows
         │        │     Group by: {}
         │        │     Aggregates: expr#sum(ss_ext_sales_price):=AggNull(sum)(ss_ext_sales_price)
         │        └─ Inner Join est. 2236600 rows
         │           │     Condition: ss_store_sk == s_store_sk
         │           ├─ Inner Join est. 2236600 rows
         │           │  │     Condition: ca_address_sk == c_current_addr_sk
         │           │  ├─ Repartition Exchange est. 2256960 rows
         │           │  │  │     Partition by: {ca_address_sk}
         │           │  │  └─ Filter est. 2256960 rows
         │           │  │     │     Condition: ca_gmt_offset = -5.
         │           │  │     └─ TableScan tpcds.customer_address est. 6000000 rows
         │           │  │              Outputs: [ca_address_sk, ca_gmt_offset]
         │           │  └─ Repartition Exchange est. 2228365 rows
         │           │     │     Partition by: {c_current_addr_sk}
         │           │     └─ Inner Join est. 2247757 rows
         │           │        │     Condition: c_customer_sk == ss_customer_sk
         │           │        ├─ Repartition Exchange est. 12000000 rows
         │           │        │  │     Partition by: {c_customer_sk}
         │           │        │  └─ TableScan tpcds.customer est. 12000000 rows
         │           │        │           Outputs: [c_current_addr_sk, c_customer_sk]
         │           │        └─ Repartition Exchange est. 1168919 rows
         │           │           │     Partition by: {ss_customer_sk}
         │           │           └─ Inner Join est. 1168919 rows
         │           │              │     Condition: ss_promo_sk == p_promo_sk
         │           │              ├─ Inner Join est. 2256497 rows
         │           │              │  │     Condition: ss_item_sk == i_item_sk
         │           │              │  ├─ Inner Join est. 22560683 rows
         │           │              │  │  │     Condition: ss_sold_date_sk == d_date_sk
         │           │              │  │  ├─ Local Exchange est. 2879987999 rows
         │           │              │  │  │  └─ Filter est. 2879987999 rows
         │           │              │  │  │     │     Dynamic Filters: {ss_item_sk:bloomfilter,ss_item_sk:range,ss_promo_sk:bloomfilter,ss_promo_sk:range,ss_sold_date_sk:bloomfilter,ss_sold_date_sk:range}
         │           │              │  │  │     └─ TableScan tpcds.store_sales est. 2879987999 rows
         │           │              │  │  │              Outputs: [ss_customer_sk, ss_ext_sales_price, ss_item_sk, ss_promo_sk, ss_sold_date_sk, ss_store_sk]
         │           │              │  │  └─ Broadcast Exchange est. 29 rows
         │           │              │  │     └─ Projection est. 29 rows
         │           │              │  │        │     Expressions: [d_date_sk, d_moy, d_year]
         │           │              │  │        │     Dynamic Filters Builder: {d_date_sk}
         │           │              │  │        └─ Filter est. 29 rows
         │           │              │  │           │     Condition: (d_moy = 11) AND (d_year = 1998)
         │           │              │  │           └─ TableScan tpcds.date_dim est. 73049 rows
         │           │              │  │                    Outputs: [d_date_sk, d_moy, d_year]
         │           │              │  └─ Broadcast Exchange est. 30006 rows
         │           │              │     └─ Projection est. 30006 rows
         │           │              │        │     Expressions: [i_category, i_item_sk]
         │           │              │        │     Dynamic Filters Builder: {i_item_sk}
         │           │              │        └─ Filter est. 30006 rows
         │           │              │           │     Condition: i_category = 'Jewelry'
         │           │              │           └─ TableScan tpcds.item est. 300000 rows
         │           │              │                    Outputs: [i_category, i_item_sk]
         │           │              └─ Broadcast Exchange est. 777 rows
         │           │                 └─ Projection est. 777 rows
         │           │                    │     Expressions: [p_channel_dmail, p_channel_email, p_channel_tv, p_promo_sk]
         │           │                    │     Dynamic Filters Builder: {p_promo_sk}
         │           │                    └─ Filter est. 777 rows
         │           │                       │     Condition: (p_channel_tv = 'Y') OR (p_channel_dmail = 'Y') OR (p_channel_email = 'Y')
         │           │                       └─ TableScan tpcds.promotion est. 1500 rows
         │           │                                Outputs: [p_channel_dmail, p_channel_email, p_channel_tv, p_promo_sk]
         │           └─ Broadcast Exchange est. 523 rows
         │              └─ Filter est. 523 rows
         │                 │     Condition: s_gmt_offset = -5.
         │                 └─ TableScan tpcds.store est. 1002 rows
         │                          Outputs: [s_gmt_offset, s_store_sk]
         └─ Broadcast Exchange est. 1 rows
            └─ MergingAggregated est. 1 rows
               └─ Gather Exchange est. 1 rows
                  └─ Aggregating est. 1 rows
                     │     Group by: {}
                     │     Aggregates: expr#sum(ss_ext_sales_price)_1:=AggNull(sum)(ss_ext_sales_price_1)
                     └─ Inner Join est. 2233741 rows
                        │     Condition: ss_store_sk_1 == s_store_sk_1
                        ├─ Inner Join est. 2233741 rows
                        │  │     Condition: ca_address_sk_1 == c_current_addr_sk_1
                        │  ├─ Repartition Exchange est. 2256960 rows
                        │  │  │     Partition by: {ca_address_sk_1}
                        │  │  └─ Filter est. 2256960 rows
                        │  │     │     Condition: ca_gmt_offset_1 = -5.
                        │  │     └─ TableScan tpcds.customer_address est. 6000000 rows
                        │  │              Outputs: ca_address_sk_1:=ca_address_sk, ca_gmt_offset_1:=ca_gmt_offset
                        │  └─ Repartition Exchange est. 2224889 rows
                        │     │     Partition by: {c_current_addr_sk_1}
                        │     └─ Inner Join est. 4339049 rows
                        │        │     Condition: c_customer_sk_1 == ss_customer_sk_1
                        │        ├─ Repartition Exchange est. 12000000 rows
                        │        │  │     Partition by: {c_customer_sk_1}
                        │        │  └─ TableScan tpcds.customer est. 12000000 rows
                        │        │           Outputs: c_current_addr_sk_1:=c_current_addr_sk, c_customer_sk_1:=c_customer_sk
                        │        └─ Repartition Exchange est. 2256497 rows
                        │           │     Partition by: {ss_customer_sk_1}
                        │           └─ Inner Join est. 2256497 rows
                        │              │     Condition: ss_item_sk_1 == i_item_sk_1
                        │              ├─ Inner Join est. 22560683 rows
                        │              │  │     Condition: ss_sold_date_sk_1 == d_date_sk_1
                        │              │  ├─ Local Exchange est. 2879987999 rows
                        │              │  │  └─ Filter est. 2879987999 rows
                        │              │  │     │     Dynamic Filters: {ss_item_sk_1:bloomfilter,ss_item_sk_1:range,ss_sold_date_sk_1:bloomfilter,ss_sold_date_sk_1:range}
                        │              │  │     └─ TableScan tpcds.store_sales est. 2879987999 rows
                        │              │  │              Outputs: ss_customer_sk_1:=ss_customer_sk, ss_ext_sales_price_1:=ss_ext_sales_price, ss_item_sk_1:=ss_item_sk, ss_sold_date_sk_1:=ss_sold_date_sk, ss_store_sk_1:=ss_store_sk
                        │              │  └─ Broadcast Exchange est. 29 rows
                        │              │     └─ Projection est. 29 rows
                        │              │        │     Expressions: [d_date_sk_1, d_moy_1, d_year_1]
                        │              │        │     Dynamic Filters Builder: {d_date_sk_1}
                        │              │        └─ Filter est. 29 rows
                        │              │           │     Condition: (d_moy_1 = 11) AND (d_year_1 = 1998)
                        │              │           └─ TableScan tpcds.date_dim est. 73049 rows
                        │              │                    Outputs: d_date_sk_1:=d_date_sk, d_moy_1:=d_moy, d_year_1:=d_year
                        │              └─ Broadcast Exchange est. 30006 rows
                        │                 └─ Projection est. 30006 rows
                        │                    │     Expressions: [i_category_1, i_item_sk_1]
                        │                    │     Dynamic Filters Builder: {i_item_sk_1}
                        │                    └─ Filter est. 30006 rows
                        │                       │     Condition: i_category_1 = 'Jewelry'
                        │                       └─ TableScan tpcds.item est. 300000 rows
                        │                                Outputs: i_category_1:=i_category, i_item_sk_1:=i_item_sk
                        └─ Broadcast Exchange est. 523 rows
                           └─ Filter est. 523 rows
                              │     Condition: s_gmt_offset_1 = -5.
                              └─ TableScan tpcds.store est. 1002 rows
                                       Outputs: s_gmt_offset_1:=s_gmt_offset, s_store_sk_1:=s_store_sk
note: Dynamic Filter is applied for 10 times.
