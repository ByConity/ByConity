Projection est. 100 rows
│     Expressions: [i_manufact, i_manufact_id], brand:=i_brand, brand_id:=i_brand_id, ext_price:=`expr#sum(ss_ext_sales_price)`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. 71604 rows
      │     Order by: {expr#sum(ss_ext_sales_price) desc nulls_last, i_brand asc, i_brand_id asc, i_manufact_id asc, i_manufact asc}
      └─ Gather Exchange est. 71604 rows
         └─ Sorting est. 71604 rows
            │     Order by: {expr#sum(ss_ext_sales_price) desc nulls_last, i_brand asc, i_brand_id asc, i_manufact_id asc, i_manufact asc}
            └─ MergingAggregated est. 71604 rows
               └─ Repartition Exchange est. 71604 rows
                  │     Partition by: {i_brand, i_brand_id, i_manufact, i_manufact_id}
                  └─ Aggregating est. 71604 rows
                     │     Group by: {i_brand, i_brand_id, i_manufact, i_manufact_id}
                     │     Aggregates: expr#sum(ss_ext_sales_price):=AggNull(sum)(ss_ext_sales_price)
                     └─ Inner Join est. 790913 rows
                        │     Condition: ca_address_sk == c_current_addr_sk
                        │     Filter: substring(ca_zip, 1, 5) != substring(s_zip, 1, 5)
                        ├─ Repartition Exchange est. 6000000 rows
                        │  │     Partition by: {ca_address_sk}
                        │  └─ TableScan tpcds.customer_address est. 6000000 rows
                        │           Outputs: [ca_address_sk, ca_zip]
                        └─ Repartition Exchange est. 786736 rows
                           │     Partition by: {c_current_addr_sk}
                           └─ Inner Join est. 786736 rows
                              │     Condition: ss_store_sk == s_store_sk
                              ├─ Inner Join est. 786736 rows
                              │  │     Condition: c_customer_sk == ss_customer_sk
                              │  ├─ Repartition Exchange est. 12000000 rows
                              │  │  │     Partition by: {c_customer_sk}
                              │  │  └─ TableScan tpcds.customer est. 12000000 rows
                              │  │           Outputs: [c_current_addr_sk, c_customer_sk]
                              │  └─ Repartition Exchange est. 818258 rows
                              │     │     Partition by: {ss_customer_sk}
                              │     └─ Inner Join est. 818258 rows
                              │        │     Condition: ss_item_sk == i_item_sk
                              │        ├─ Inner Join est. 45121367 rows
                              │        │  │     Condition: ss_sold_date_sk == d_date_sk
                              │        │  ├─ Local Exchange est. 2879987999 rows
                              │        │  │  └─ Filter est. 2879987999 rows
                              │        │  │     │     Dynamic Filters: {ss_item_sk:bloomfilter,ss_item_sk:range,ss_sold_date_sk:bloomfilter,ss_sold_date_sk:range}
                              │        │  │     └─ TableScan tpcds.store_sales est. 2879987999 rows
                              │        │  │              Outputs: [ss_customer_sk, ss_ext_sales_price, ss_item_sk, ss_sold_date_sk, ss_store_sk]
                              │        │  └─ Broadcast Exchange est. 29 rows
                              │        │     └─ Projection est. 29 rows
                              │        │        │     Expressions: [d_date_sk, d_moy, d_year]
                              │        │        │     Dynamic Filters Builder: {d_date_sk}
                              │        │        └─ Filter est. 29 rows
                              │        │           │     Condition: (d_moy = 11) AND (d_year = 1998)
                              │        │           └─ TableScan tpcds.date_dim est. 73049 rows
                              │        │                    Outputs: [d_date_sk, d_moy, d_year]
                              │        └─ Broadcast Exchange est. 5440 rows
                              │           └─ Projection est. 5440 rows
                              │              │     Expressions: [i_brand, i_brand_id, i_item_sk, i_manager_id, i_manufact, i_manufact_id]
                              │              │     Dynamic Filters Builder: {i_item_sk}
                              │              └─ Filter est. 5440 rows
                              │                 │     Condition: i_manager_id = 8
                              │                 └─ TableScan tpcds.item est. 300000 rows
                              │                          Outputs: [i_brand, i_brand_id, i_item_sk, i_manager_id, i_manufact, i_manufact_id]
                              └─ Broadcast Exchange est. 1002 rows
                                 └─ TableScan tpcds.store est. 1002 rows
                                          Outputs: [s_store_sk, s_zip]
note: Dynamic Filter is applied for 4 times.
