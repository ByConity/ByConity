Projection
│     Expressions: curr_yr_cnt:=`expr#sum(sales_cnt)_1`, i_brand_id:=i_brand_id_4, i_category_id:=i_category_id_4, i_class_id:=i_class_id_4, i_manufact_id:=i_manufact_id_4, prev_year:=d_year_5, prev_yr_cnt:=`expr#sum(sales_cnt)_2`, sales_amt_diff:=`expr#minus(curr_yr.sales_amt, prev_yr.sales_amt)`, sales_cnt_diff:=`expr#minus(curr_yr.sales_cnt, prev_yr.sales_cnt)`, year:=d_year_4
└─ Limit
   │     Limit: 100
   └─ Sorting
      │     Order by: {expr#minus(curr_yr.sales_cnt, prev_yr.sales_cnt) asc, expr#minus(curr_yr.sales_amt, prev_yr.sales_amt) asc}
      │     Limit: 100
      └─ Gather Exchange
         └─ Sorting
            │     Order by: {expr#minus(curr_yr.sales_cnt, prev_yr.sales_cnt) asc, expr#minus(curr_yr.sales_amt, prev_yr.sales_amt) asc}
            │     Limit: 100
            └─ Projection
               │     Expressions: [d_year_4, d_year_5, expr#sum(sales_cnt)_1, expr#sum(sales_cnt)_2, i_brand_id_4, i_category_id_4, i_class_id_4, i_manufact_id_4], expr#minus(curr_yr.sales_amt, prev_yr.sales_amt):=`expr#sum(sales_amt)_1` - `expr#sum(sales_amt)_2`, expr#minus(curr_yr.sales_cnt, prev_yr.sales_cnt):=`expr#sum(sales_cnt)_1` - `expr#sum(sales_cnt)_2`
               └─ Inner (PARALLEL_HASH) Join
                  │     Condition: i_brand_id_4 == i_brand_id_5, i_category_id_4 == i_category_id_5, i_class_id_4 == i_class_id_5, i_manufact_id_4 == i_manufact_id_5
                  │     Filter: (CAST(`expr#sum(sales_cnt)_1`, 'DECIMAL(17, 2)') / CAST(`expr#sum(sales_cnt)_2`, 'DECIMAL(17, 2)')) < '0.9'
                  │     Runtime Filters Builder: {i_brand_id_5,i_category_id_5,i_class_id_5,i_manufact_id_5}
                  ├─ Repartition Exchange
                  │  │     Partition by: {i_brand_id_4, i_category_id_4, i_class_id_4, i_manufact_id_4}
                  │  └─ MergingAggregated
                  │     └─ Repartition Exchange
                  │        │     Partition by: {d_year_4, i_brand_id_4, i_category_id_4, i_class_id_4, i_manufact_id_4}
                  │        └─ Aggregating
                  │           │     Group by: {d_year_4, i_brand_id_4, i_category_id_4, i_class_id_4, i_manufact_id_4}
                  │           │     Aggregates: expr#sum(sales_cnt)_1:=AggNull(sum)(expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_2), expr#sum(sales_amt)_1:=AggNull(sum)(expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_2)
                  │           └─ MergingAggregated
                  │              └─ Repartition Exchange
                  │                 │     Partition by: {d_year_4, expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_2, expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_2, i_brand_id_4, i_category_id_4, i_class_id_4, i_manufact_id_4}
                  │                 └─ Union
                  │                    │     OutputToInputs: expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_2 = [expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_3,expr#minus(ss_ext_sales_price, coalesce(sr_return_amt, '0.0'))_1,expr#minus(ws_ext_sales_price, coalesce(wr_return_amt, '0.0'))_1], expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_2 = [expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_3,expr#minus(ss_quantity, coalesce(sr_return_quantity, 0))_1,expr#minus(ws_quantity, coalesce(wr_return_quantity, 0))_1], i_category_id_4 = [i_category_id_7,i_category_id_8,i_category_id_9], i_class_id_4 = [i_class_id_7,i_class_id_8,i_class_id_9], i_brand_id_4 = [i_brand_id_7,i_brand_id_8,i_brand_id_9], i_manufact_id_4 = [i_manufact_id_7,i_manufact_id_8,i_manufact_id_9], d_year_4 = [d_year_7,d_year_8,d_year_9]
                  │                    ├─ Aggregating
                  │                    │  │     Group by: {d_year_7, expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_3, expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_3, i_brand_id_7, i_category_id_7, i_class_id_7, i_manufact_id_7}
                  │                    │  └─ Projection
                  │                    │     │     Expressions: [d_year_7, i_brand_id_7, i_category_id_7, i_class_id_7, i_manufact_id_7], expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_3:=cs_ext_sales_price_1 - coalesce(cr_return_amount_1, '0.0'), expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_3:=cs_quantity_1 - coalesce(cr_return_quantity_1, 0)
                  │                    │     └─ Right (PARALLEL_HASH) Join
                  │                    │        │     Condition: cr_item_sk_1 == cs_item_sk_1, cr_order_number_1 == cs_order_number_1
                  │                    │        │     Runtime Filters Builder: {cs_item_sk_1,cs_order_number_1}
                  │                    │        ├─ Repartition Exchange
                  │                    │        │  │     Partition by: {cr_item_sk_1, cr_order_number_1}
                  │                    │        │  └─ Filter
                  │                    │        │     │     Condition: Runtime Filters: {cr_item_sk_1, cr_order_number_1}
                  │                    │        │     └─ TableScan tpcds1000.catalog_returns
                  │                    │        │              Where: Runtime Filters: {cr_item_sk, cr_order_number}
                  │                    │        │              Outputs: cr_item_sk_1:=cr_item_sk, cr_order_number_1:=cr_order_number, cr_return_amount_1:=cr_return_amount, cr_return_quantity_1:=cr_return_quantity
                  │                    │        └─ Repartition Exchange
                  │                    │           │     Partition by: {cs_item_sk_1, cs_order_number_1}
                  │                    │           └─ Inner Join
                  │                    │              │     Condition: cs_sold_date_sk_1 == d_date_sk_3
                  │                    │              │     Runtime Filters Builder: {d_date_sk_3}
                  │                    │              ├─ Inner Join
                  │                    │              │  │     Condition: cs_item_sk_1 == i_item_sk_3
                  │                    │              │  │     Runtime Filters Builder: {i_item_sk_3}
                  │                    │              │  ├─ Filter
                  │                    │              │  │  │     Condition: Runtime Filters: {cs_item_sk_1, cs_sold_date_sk_1}
                  │                    │              │  │  └─ TableScan tpcds1000.catalog_sales
                  │                    │              │  │           Where: Runtime Filters: {cs_item_sk, cs_sold_date_sk}
                  │                    │              │  │           Outputs: cs_ext_sales_price_1:=cs_ext_sales_price, cs_item_sk_1:=cs_item_sk, cs_order_number_1:=cs_order_number, cs_quantity_1:=cs_quantity, cs_sold_date_sk_1:=cs_sold_date_sk
                  │                    │              │  └─ Broadcast Exchange
                  │                    │              │     └─ Filter
                  │                    │              │        │     Condition: i_category_3 = 'Books' Runtime Filters: {i_brand_id_7, i_category_id_7, i_class_id_7, i_manufact_id_7}
                  │                    │              │        └─ TableScan tpcds1000.item
                  │                    │              │                 Where: i_category = 'Books' Runtime Filters: {i_brand_id, i_category_id, i_class_id, i_manufact_id}
                  │                    │              │                 Outputs: i_brand_id_7:=i_brand_id, i_category_3:=i_category, i_category_id_7:=i_category_id, i_class_id_7:=i_class_id, i_item_sk_3:=i_item_sk, i_manufact_id_7:=i_manufact_id
                  │                    │              └─ Broadcast Exchange
                  │                    │                 └─ Filter
                  │                    │                    │     Condition: d_year_7 = 2002
                  │                    │                    └─ TableScan tpcds1000.date_dim
                  │                    │                             Where: d_year = 2002
                  │                    │                             Outputs: d_date_sk_3:=d_date_sk, d_year_7:=d_year
                  │                    ├─ Aggregating
                  │                    │  │     Group by: {d_year_8, expr#minus(ss_ext_sales_price, coalesce(sr_return_amt, '0.0'))_1, expr#minus(ss_quantity, coalesce(sr_return_quantity, 0))_1, i_brand_id_8, i_category_id_8, i_class_id_8, i_manufact_id_8}
                  │                    │  └─ Projection
                  │                    │     │     Expressions: [d_year_8, i_brand_id_8, i_category_id_8, i_class_id_8, i_manufact_id_8], expr#minus(ss_ext_sales_price, coalesce(sr_return_amt, '0.0'))_1:=ss_ext_sales_price_1 - coalesce(sr_return_amt_1, '0.0'), expr#minus(ss_quantity, coalesce(sr_return_quantity, 0))_1:=ss_quantity_1 - coalesce(sr_return_quantity_1, 0)
                  │                    │     └─ Right (PARALLEL_HASH) Join
                  │                    │        │     Condition: sr_item_sk_1 == ss_item_sk_1, sr_ticket_number_1 == ss_ticket_number_1
                  │                    │        │     Runtime Filters Builder: {ss_item_sk_1,ss_ticket_number_1}
                  │                    │        ├─ Repartition Exchange
                  │                    │        │  │     Partition by: {sr_item_sk_1, sr_ticket_number_1}
                  │                    │        │  └─ Filter
                  │                    │        │     │     Condition: Runtime Filters: {sr_item_sk_1, sr_ticket_number_1}
                  │                    │        │     └─ TableScan tpcds1000.store_returns
                  │                    │        │              Where: Runtime Filters: {sr_item_sk, sr_ticket_number}
                  │                    │        │              Outputs: sr_item_sk_1:=sr_item_sk, sr_return_amt_1:=sr_return_amt, sr_return_quantity_1:=sr_return_quantity, sr_ticket_number_1:=sr_ticket_number
                  │                    │        └─ Repartition Exchange
                  │                    │           │     Partition by: {ss_item_sk_1, ss_ticket_number_1}
                  │                    │           └─ Inner Join
                  │                    │              │     Condition: ss_sold_date_sk_1 == d_date_sk_4
                  │                    │              │     Runtime Filters Builder: {d_date_sk_4}
                  │                    │              ├─ Inner Join
                  │                    │              │  │     Condition: ss_item_sk_1 == i_item_sk_4
                  │                    │              │  │     Runtime Filters Builder: {i_item_sk_4}
                  │                    │              │  ├─ Filter
                  │                    │              │  │  │     Condition: Runtime Filters: {ss_item_sk_1, ss_sold_date_sk_1}
                  │                    │              │  │  └─ TableScan tpcds1000.store_sales
                  │                    │              │  │           Where: Runtime Filters: {ss_item_sk, ss_sold_date_sk}
                  │                    │              │  │           Outputs: ss_ext_sales_price_1:=ss_ext_sales_price, ss_item_sk_1:=ss_item_sk, ss_quantity_1:=ss_quantity, ss_sold_date_sk_1:=ss_sold_date_sk, ss_ticket_number_1:=ss_ticket_number
                  │                    │              │  └─ Broadcast Exchange
                  │                    │              │     └─ Filter
                  │                    │              │        │     Condition: i_category_4 = 'Books' Runtime Filters: {i_brand_id_8, i_category_id_8, i_class_id_8, i_manufact_id_8}
                  │                    │              │        └─ TableScan tpcds1000.item
                  │                    │              │                 Where: i_category = 'Books' Runtime Filters: {i_brand_id, i_category_id, i_class_id, i_manufact_id}
                  │                    │              │                 Outputs: i_brand_id_8:=i_brand_id, i_category_4:=i_category, i_category_id_8:=i_category_id, i_class_id_8:=i_class_id, i_item_sk_4:=i_item_sk, i_manufact_id_8:=i_manufact_id
                  │                    │              └─ Broadcast Exchange
                  │                    │                 └─ Filter
                  │                    │                    │     Condition: d_year_8 = 2002
                  │                    │                    └─ TableScan tpcds1000.date_dim
                  │                    │                             Where: d_year = 2002
                  │                    │                             Outputs: d_date_sk_4:=d_date_sk, d_year_8:=d_year
                  │                    └─ Aggregating
                  │                       │     Group by: {d_year_9, expr#minus(ws_ext_sales_price, coalesce(wr_return_amt, '0.0'))_1, expr#minus(ws_quantity, coalesce(wr_return_quantity, 0))_1, i_brand_id_9, i_category_id_9, i_class_id_9, i_manufact_id_9}
                  │                       └─ Projection
                  │                          │     Expressions: [d_year_9, i_brand_id_9, i_category_id_9, i_class_id_9, i_manufact_id_9], expr#minus(ws_ext_sales_price, coalesce(wr_return_amt, '0.0'))_1:=ws_ext_sales_price_1 - coalesce(wr_return_amt_1, '0.0'), expr#minus(ws_quantity, coalesce(wr_return_quantity, 0))_1:=ws_quantity_1 - coalesce(wr_return_quantity_1, 0)
                  │                          └─ Right (PARALLEL_HASH) Join
                  │                             │     Condition: wr_item_sk_1 == ws_item_sk_1, wr_order_number_1 == ws_order_number_1
                  │                             │     Runtime Filters Builder: {ws_item_sk_1,ws_order_number_1}
                  │                             ├─ Repartition Exchange
                  │                             │  │     Partition by: {wr_item_sk_1, wr_order_number_1}
                  │                             │  └─ Filter
                  │                             │     │     Condition: Runtime Filters: {wr_item_sk_1, wr_order_number_1}
                  │                             │     └─ TableScan tpcds1000.web_returns
                  │                             │              Where: Runtime Filters: {wr_item_sk, wr_order_number}
                  │                             │              Outputs: wr_item_sk_1:=wr_item_sk, wr_order_number_1:=wr_order_number, wr_return_amt_1:=wr_return_amt, wr_return_quantity_1:=wr_return_quantity
                  │                             └─ Repartition Exchange
                  │                                │     Partition by: {ws_item_sk_1, ws_order_number_1}
                  │                                └─ Inner Join
                  │                                   │     Condition: ws_sold_date_sk_1 == d_date_sk_5
                  │                                   │     Runtime Filters Builder: {d_date_sk_5}
                  │                                   ├─ Inner Join
                  │                                   │  │     Condition: ws_item_sk_1 == i_item_sk_5
                  │                                   │  │     Runtime Filters Builder: {i_item_sk_5}
                  │                                   │  ├─ Filter
                  │                                   │  │  │     Condition: Runtime Filters: {ws_item_sk_1, ws_sold_date_sk_1}
                  │                                   │  │  └─ TableScan tpcds1000.web_sales
                  │                                   │  │           Where: Runtime Filters: {ws_item_sk, ws_sold_date_sk}
                  │                                   │  │           Outputs: ws_ext_sales_price_1:=ws_ext_sales_price, ws_item_sk_1:=ws_item_sk, ws_order_number_1:=ws_order_number, ws_quantity_1:=ws_quantity, ws_sold_date_sk_1:=ws_sold_date_sk
                  │                                   │  └─ Broadcast Exchange
                  │                                   │     └─ Filter
                  │                                   │        │     Condition: i_category_5 = 'Books' Runtime Filters: {i_brand_id_9, i_category_id_9, i_class_id_9, i_manufact_id_9}
                  │                                   │        └─ TableScan tpcds1000.item
                  │                                   │                 Where: i_category = 'Books' Runtime Filters: {i_brand_id, i_category_id, i_class_id, i_manufact_id}
                  │                                   │                 Outputs: i_brand_id_9:=i_brand_id, i_category_5:=i_category, i_category_id_9:=i_category_id, i_class_id_9:=i_class_id, i_item_sk_5:=i_item_sk, i_manufact_id_9:=i_manufact_id
                  │                                   └─ Broadcast Exchange
                  │                                      └─ Filter
                  │                                         │     Condition: d_year_9 = 2002
                  │                                         └─ TableScan tpcds1000.date_dim
                  │                                                  Where: d_year = 2002
                  │                                                  Outputs: d_date_sk_5:=d_date_sk, d_year_9:=d_year
                  └─ Repartition Exchange
                     │     Partition by: {i_brand_id_5, i_category_id_5, i_class_id_5, i_manufact_id_5}
                     └─ MergingAggregated
                        └─ Repartition Exchange
                           │     Partition by: {d_year_5, i_brand_id_5, i_category_id_5, i_class_id_5, i_manufact_id_5}
                           └─ Aggregating
                              │     Group by: {d_year_5, i_brand_id_5, i_category_id_5, i_class_id_5, i_manufact_id_5}
                              │     Aggregates: expr#sum(sales_cnt)_2:=AggNull(sum)(expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_4), expr#sum(sales_amt)_2:=AggNull(sum)(expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_4)
                              └─ MergingAggregated
                                 └─ Repartition Exchange
                                    │     Partition by: {d_year_5, expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_4, expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_4, i_brand_id_5, i_category_id_5, i_class_id_5, i_manufact_id_5}
                                    └─ Union
                                       │     OutputToInputs: expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_4 = [expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_5,expr#minus(ss_ext_sales_price, coalesce(sr_return_amt, '0.0'))_2,expr#minus(ws_ext_sales_price, coalesce(wr_return_amt, '0.0'))_2], i_manufact_id_5 = [i_manufact_id_11,i_manufact_id_12,i_manufact_id_13], expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_4 = [expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_5,expr#minus(ss_quantity, coalesce(sr_return_quantity, 0))_2,expr#minus(ws_quantity, coalesce(wr_return_quantity, 0))_2], d_year_5 = [d_year_11,d_year_12,d_year_13], i_category_id_5 = [i_category_id_11,i_category_id_12,i_category_id_13], i_class_id_5 = [i_class_id_11,i_class_id_12,i_class_id_13], i_brand_id_5 = [i_brand_id_11,i_brand_id_12,i_brand_id_13]
                                       ├─ Aggregating
                                       │  │     Group by: {d_year_11, expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_5, expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_5, i_brand_id_11, i_category_id_11, i_class_id_11, i_manufact_id_11}
                                       │  └─ Projection
                                       │     │     Expressions: [d_year_11, i_brand_id_11, i_category_id_11, i_class_id_11, i_manufact_id_11], expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0'))_5:=cs_ext_sales_price_2 - coalesce(cr_return_amount_2, '0.0'), expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))_5:=cs_quantity_2 - coalesce(cr_return_quantity_2, 0)
                                       │     └─ Right (PARALLEL_HASH) Join
                                       │        │     Condition: cr_item_sk_2 == cs_item_sk_2, cr_order_number_2 == cs_order_number_2
                                       │        │     Runtime Filters Builder: {cs_item_sk_2,cs_order_number_2}
                                       │        ├─ Repartition Exchange
                                       │        │  │     Partition by: {cr_item_sk_2, cr_order_number_2}
                                       │        │  └─ Filter
                                       │        │     │     Condition: Runtime Filters: {cr_item_sk_2, cr_order_number_2}
                                       │        │     └─ TableScan tpcds1000.catalog_returns
                                       │        │              Where: Runtime Filters: {cr_item_sk, cr_order_number}
                                       │        │              Outputs: cr_item_sk_2:=cr_item_sk, cr_order_number_2:=cr_order_number, cr_return_amount_2:=cr_return_amount, cr_return_quantity_2:=cr_return_quantity
                                       │        └─ Repartition Exchange
                                       │           │     Partition by: {cs_item_sk_2, cs_order_number_2}
                                       │           └─ Inner Join
                                       │              │     Condition: cs_sold_date_sk_2 == d_date_sk_6
                                       │              │     Runtime Filters Builder: {d_date_sk_6}
                                       │              ├─ Inner Join
                                       │              │  │     Condition: cs_item_sk_2 == i_item_sk_6
                                       │              │  │     Runtime Filters Builder: {i_item_sk_6}
                                       │              │  ├─ Filter
                                       │              │  │  │     Condition: Runtime Filters: {cs_item_sk_2, cs_sold_date_sk_2}
                                       │              │  │  └─ TableScan tpcds1000.catalog_sales
                                       │              │  │           Where: Runtime Filters: {cs_item_sk, cs_sold_date_sk}
                                       │              │  │           Outputs: cs_ext_sales_price_2:=cs_ext_sales_price, cs_item_sk_2:=cs_item_sk, cs_order_number_2:=cs_order_number, cs_quantity_2:=cs_quantity, cs_sold_date_sk_2:=cs_sold_date_sk
                                       │              │  └─ Broadcast Exchange
                                       │              │     └─ Filter
                                       │              │        │     Condition: i_category_6 = 'Books'
                                       │              │        └─ TableScan tpcds1000.item
                                       │              │                 Where: i_category = 'Books'
                                       │              │                 Outputs: i_brand_id_11:=i_brand_id, i_category_6:=i_category, i_category_id_11:=i_category_id, i_class_id_11:=i_class_id, i_item_sk_6:=i_item_sk, i_manufact_id_11:=i_manufact_id
                                       │              └─ Broadcast Exchange
                                       │                 └─ Filter
                                       │                    │     Condition: d_year_11 = 2001
                                       │                    └─ TableScan tpcds1000.date_dim
                                       │                             Where: d_year = 2001
                                       │                             Outputs: d_date_sk_6:=d_date_sk, d_year_11:=d_year
                                       ├─ Aggregating
                                       │  │     Group by: {d_year_12, expr#minus(ss_ext_sales_price, coalesce(sr_return_amt, '0.0'))_2, expr#minus(ss_quantity, coalesce(sr_return_quantity, 0))_2, i_brand_id_12, i_category_id_12, i_class_id_12, i_manufact_id_12}
                                       │  └─ Projection
                                       │     │     Expressions: [d_year_12, i_brand_id_12, i_category_id_12, i_class_id_12, i_manufact_id_12], expr#minus(ss_ext_sales_price, coalesce(sr_return_amt, '0.0'))_2:=ss_ext_sales_price_2 - coalesce(sr_return_amt_2, '0.0'), expr#minus(ss_quantity, coalesce(sr_return_quantity, 0))_2:=ss_quantity_2 - coalesce(sr_return_quantity_2, 0)
                                       │     └─ Right (PARALLEL_HASH) Join
                                       │        │     Condition: sr_item_sk_2 == ss_item_sk_2, sr_ticket_number_2 == ss_ticket_number_2
                                       │        │     Runtime Filters Builder: {ss_item_sk_2,ss_ticket_number_2}
                                       │        ├─ Repartition Exchange
                                       │        │  │     Partition by: {sr_item_sk_2, sr_ticket_number_2}
                                       │        │  └─ Filter
                                       │        │     │     Condition: Runtime Filters: {sr_item_sk_2, sr_ticket_number_2}
                                       │        │     └─ TableScan tpcds1000.store_returns
                                       │        │              Where: Runtime Filters: {sr_item_sk, sr_ticket_number}
                                       │        │              Outputs: sr_item_sk_2:=sr_item_sk, sr_return_amt_2:=sr_return_amt, sr_return_quantity_2:=sr_return_quantity, sr_ticket_number_2:=sr_ticket_number
                                       │        └─ Repartition Exchange
                                       │           │     Partition by: {ss_item_sk_2, ss_ticket_number_2}
                                       │           └─ Inner Join
                                       │              │     Condition: ss_sold_date_sk_2 == d_date_sk_7
                                       │              │     Runtime Filters Builder: {d_date_sk_7}
                                       │              ├─ Inner Join
                                       │              │  │     Condition: ss_item_sk_2 == i_item_sk_7
                                       │              │  │     Runtime Filters Builder: {i_item_sk_7}
                                       │              │  ├─ Filter
                                       │              │  │  │     Condition: Runtime Filters: {ss_item_sk_2, ss_sold_date_sk_2}
                                       │              │  │  └─ TableScan tpcds1000.store_sales
                                       │              │  │           Where: Runtime Filters: {ss_item_sk, ss_sold_date_sk}
                                       │              │  │           Outputs: ss_ext_sales_price_2:=ss_ext_sales_price, ss_item_sk_2:=ss_item_sk, ss_quantity_2:=ss_quantity, ss_sold_date_sk_2:=ss_sold_date_sk, ss_ticket_number_2:=ss_ticket_number
                                       │              │  └─ Broadcast Exchange
                                       │              │     └─ Filter
                                       │              │        │     Condition: i_category_7 = 'Books'
                                       │              │        └─ TableScan tpcds1000.item
                                       │              │                 Where: i_category = 'Books'
                                       │              │                 Outputs: i_brand_id_12:=i_brand_id, i_category_7:=i_category, i_category_id_12:=i_category_id, i_class_id_12:=i_class_id, i_item_sk_7:=i_item_sk, i_manufact_id_12:=i_manufact_id
                                       │              └─ Broadcast Exchange
                                       │                 └─ Filter
                                       │                    │     Condition: d_year_12 = 2001
                                       │                    └─ TableScan tpcds1000.date_dim
                                       │                             Where: d_year = 2001
                                       │                             Outputs: d_date_sk_7:=d_date_sk, d_year_12:=d_year
                                       └─ Aggregating
                                          │     Group by: {d_year_13, expr#minus(ws_ext_sales_price, coalesce(wr_return_amt, '0.0'))_2, expr#minus(ws_quantity, coalesce(wr_return_quantity, 0))_2, i_brand_id_13, i_category_id_13, i_class_id_13, i_manufact_id_13}
                                          └─ Projection
                                             │     Expressions: [d_year_13, i_brand_id_13, i_category_id_13, i_class_id_13, i_manufact_id_13], expr#minus(ws_ext_sales_price, coalesce(wr_return_amt, '0.0'))_2:=ws_ext_sales_price_2 - coalesce(wr_return_amt_2, '0.0'), expr#minus(ws_quantity, coalesce(wr_return_quantity, 0))_2:=ws_quantity_2 - coalesce(wr_return_quantity_2, 0)
                                             └─ Right (PARALLEL_HASH) Join
                                                │     Condition: wr_item_sk_2 == ws_item_sk_2, wr_order_number_2 == ws_order_number_2
                                                │     Runtime Filters Builder: {ws_item_sk_2,ws_order_number_2}
                                                ├─ Repartition Exchange
                                                │  │     Partition by: {wr_item_sk_2, wr_order_number_2}
                                                │  └─ Filter
                                                │     │     Condition: Runtime Filters: {wr_item_sk_2, wr_order_number_2}
                                                │     └─ TableScan tpcds1000.web_returns
                                                │              Where: Runtime Filters: {wr_item_sk, wr_order_number}
                                                │              Outputs: wr_item_sk_2:=wr_item_sk, wr_order_number_2:=wr_order_number, wr_return_amt_2:=wr_return_amt, wr_return_quantity_2:=wr_return_quantity
                                                └─ Repartition Exchange
                                                   │     Partition by: {ws_item_sk_2, ws_order_number_2}
                                                   └─ Inner Join
                                                      │     Condition: ws_sold_date_sk_2 == d_date_sk_8
                                                      │     Runtime Filters Builder: {d_date_sk_8}
                                                      ├─ Inner Join
                                                      │  │     Condition: ws_item_sk_2 == i_item_sk_8
                                                      │  │     Runtime Filters Builder: {i_item_sk_8}
                                                      │  ├─ Filter
                                                      │  │  │     Condition: Runtime Filters: {ws_item_sk_2, ws_sold_date_sk_2}
                                                      │  │  └─ TableScan tpcds1000.web_sales
                                                      │  │           Where: Runtime Filters: {ws_item_sk, ws_sold_date_sk}
                                                      │  │           Outputs: ws_ext_sales_price_2:=ws_ext_sales_price, ws_item_sk_2:=ws_item_sk, ws_order_number_2:=ws_order_number, ws_quantity_2:=ws_quantity, ws_sold_date_sk_2:=ws_sold_date_sk
                                                      │  └─ Broadcast Exchange
                                                      │     └─ Filter
                                                      │        │     Condition: i_category_8 = 'Books'
                                                      │        └─ TableScan tpcds1000.item
                                                      │                 Where: i_category = 'Books'
                                                      │                 Outputs: i_brand_id_13:=i_brand_id, i_category_8:=i_category, i_category_id_13:=i_category_id, i_class_id_13:=i_class_id, i_item_sk_8:=i_item_sk, i_manufact_id_13:=i_manufact_id
                                                      └─ Broadcast Exchange
                                                         └─ Filter
                                                            │     Condition: d_year_13 = 2001
                                                            └─ TableScan tpcds1000.date_dim
                                                                     Where: d_year = 2001
                                                                     Outputs: d_date_sk_8:=d_date_sk, d_year_13:=d_year
note: Runtime Filter is applied for 36 times.
