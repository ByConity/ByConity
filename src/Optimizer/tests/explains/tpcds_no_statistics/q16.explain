Projection Est. 100 rows
│     Expressions: order count:=`expr#uniqExact(cs_order_number)`, total net profit:=`expr#sum(cs_net_profit)`, total shipping cost:=`expr#sum(cs_ext_ship_cost)`
└─ Limit Est. 100 rows
   │     Limit: 100
   └─ Sorting Est. 100 rows
      │     Order by: {expr#uniqExact(cs_order_number) asc}
      │     Limit: 100
      └─ MergingAggregated Est. ? rows
         └─ Gather Exchange Est. ? rows
            └─ Aggregating Est. ? rows
               │     Group by: {}
               │     Aggregates: expr#uniqExact(cs_order_number):=AggNull(uniqExact)(cs_order_number), expr#sum(cs_ext_ship_cost):=AggNull(sum)(cs_ext_ship_cost), expr#sum(cs_net_profit):=AggNull(sum)(cs_net_profit)
               └─ Projection Est. ? rows
                  │     Expressions: [cs_ext_ship_cost, cs_net_profit, cs_order_number]
                  └─ Filter Est. ? rows
                     │     Condition: NOT cast(coalesce(build_side_non_null_symbol_1, 0), 'UInt8')
                     └─ Left Join Est. ? rows
                        │     Condition: cs_order_number == cr_order_number
                        ├─ Filter Est. ? rows
                        │  │     Condition: count_non_null_value > 0
                        │  └─ Aggregating Est. ? rows
                        │     │     Group by: {assign_unique_id_symbol, ca_address_sk, ca_state, cc_call_center_sk, cc_county, cs_call_center_sk, cs_ext_ship_cost, cs_net_profit, cs_order_number, cs_ship_addr_sk, cs_ship_date_sk, cs_warehouse_sk, d_date, d_date_sk}
                        │     │     Aggregates: count_non_null_value:=AggNull(countIf)(build_side_non_null_symbol)
                        │     └─ Projection Est. ? rows
                        │        │     Expressions: [assign_unique_id_symbol, ca_address_sk, ca_state, cc_call_center_sk, cc_county, cs_call_center_sk, cs_ext_ship_cost, cs_net_profit, cs_order_number, cs_ship_addr_sk, cs_ship_date_sk, cs_warehouse_sk, d_date, d_date_sk], build_side_non_null_symbol:=cast(multiIf(if((cs_warehouse_sk != cs_warehouse_sk_1) AND (build_side_non_null_symbol = 1), 1, NULL) = 1, 1, if((cs_warehouse_sk != cs_warehouse_sk_1) AND (build_side_non_null_symbol = 1), 1, NULL) = NULL, 0, 0), 'UInt8')
                        │        └─ Left Join Est. ? rows
                        │           │     Condition: cs_order_number == cs_order_number_1
                        │           ├─ AssignUniqueId Est. ? rows
                        │           │  └─ Repartition Exchange Est. ? rows
                        │           │     │     Partition by: {cs_order_number}
                        │           │     └─ Inner Join Est. ? rows
                        │           │        │     Condition: cs_call_center_sk == cc_call_center_sk
                        │           │        ├─ Repartition Exchange Est. ? rows
                        │           │        │  │     Partition by: {cs_call_center_sk}
                        │           │        │  └─ Inner Join Est. ? rows
                        │           │        │     │     Condition: cs_ship_addr_sk == ca_address_sk
                        │           │        │     ├─ Repartition Exchange Est. ? rows
                        │           │        │     │  │     Partition by: {cs_ship_addr_sk}
                        │           │        │     │  └─ Inner Join Est. ? rows
                        │           │        │     │     │     Condition: cs_ship_date_sk == d_date_sk
                        │           │        │     │     ├─ Repartition Exchange Est. ? rows
                        │           │        │     │     │  │     Partition by: {cs_ship_date_sk}
                        │           │        │     │     │  └─ TableScan tpcds.catalog_sales Est. ? rows
                        │           │        │     │     │           Outputs: [cs_call_center_sk, cs_ext_ship_cost, cs_net_profit, cs_order_number, cs_ship_addr_sk, cs_ship_date_sk, cs_warehouse_sk]
                        │           │        │     │     └─ Repartition Exchange Est. ? rows
                        │           │        │     │        │     Partition by: {d_date_sk}
                        │           │        │     │        └─ Filter Est. ? rows
                        │           │        │     │           │     Condition: (d_date >= cast(11719, 'Date')) AND (d_date <= cast(11779, 'Date'))
                        │           │        │     │           └─ TableScan tpcds.date_dim Est. ? rows
                        │           │        │     │                    Condition : (d_date >= cast(11719, 'Date')) AND (d_date <= cast(11779, 'Date')).
                        │           │        │     │                    Outputs: [d_date, d_date_sk]
                        │           │        │     └─ Repartition Exchange Est. ? rows
                        │           │        │        │     Partition by: {ca_address_sk}
                        │           │        │        └─ Filter Est. ? rows
                        │           │        │           │     Condition: ca_state = 'GA'
                        │           │        │           └─ TableScan tpcds.customer_address Est. ? rows
                        │           │        │                    Condition : ca_state = 'GA'.
                        │           │        │                    Outputs: [ca_address_sk, ca_state]
                        │           │        └─ Repartition Exchange Est. ? rows
                        │           │           │     Partition by: {cc_call_center_sk}
                        │           │           └─ Filter Est. ? rows
                        │           │              │     Condition: cc_county = 'Williamson County'
                        │           │              └─ TableScan tpcds.call_center Est. ? rows
                        │           │                       Condition : cc_county = 'Williamson County'.
                        │           │                       Outputs: [cc_call_center_sk, cc_county]
                        │           └─ Repartition Exchange Est. ? rows
                        │              │     Partition by: {cs_order_number_1}
                        │              └─ Projection Est. ? rows
                        │                 │     Expressions: [cs_order_number_1, cs_warehouse_sk_1], build_side_non_null_symbol:=1
                        │                 └─ TableScan tpcds.catalog_sales Est. ? rows
                        │                          Outputs: cs_order_number_1:=cs_order_number, cs_warehouse_sk_1:=cs_warehouse_sk
                        └─ Projection Est. ? rows
                           │     Expressions: [cr_order_number], build_side_non_null_symbol_1:=1
                           └─ MergingAggregated Est. ? rows
                              └─ Repartition Exchange Est. ? rows
                                 │     Partition by: {cr_order_number}
                                 └─ Aggregating Est. ? rows
                                    │     Group by: {cr_order_number}
                                    └─ TableScan tpcds.catalog_returns Est. ? rows
                                             Outputs: [cr_order_number]
