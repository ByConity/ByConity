Projection Est. 100 rows
│     Expressions: curr_yr_cnt:=`expr#sum(sales_cnt)_1`, i_brand_id:=i_brand_id_4, i_category_id:=i_category_id_4, i_class_id:=i_class_id_4, i_manufact_id:=i_manufact_id_4, prev_year:=d_year_5, prev_yr_cnt:=`expr#sum(sales_cnt)_2`, sales_amt_diff:=`expr#minus(curr_yr.sales_amt, prev_yr.sales_amt)`, sales_cnt_diff:=`expr#minus(curr_yr.sales_cnt, prev_yr.sales_cnt)`, year1:=d_year_4
└─ Limit Est. 100 rows
   │     Limit: 100
   └─ Sorting Est. 100 rows
      │     Order by: {expr#minus(curr_yr.sales_cnt, prev_yr.sales_cnt) asc}
      │     Limit: 100
      └─ Gather Exchange Est. ? rows
         └─ Sorting Est. 100 rows
            │     Order by: {expr#minus(curr_yr.sales_cnt, prev_yr.sales_cnt) asc}
            │     Limit: 100
            └─ Projection Est. ? rows
               │     Expressions: [d_year_4, d_year_5, expr#sum(sales_cnt)_1, expr#sum(sales_cnt)_2, i_brand_id_4, i_category_id_4, i_class_id_4, i_manufact_id_4], expr#minus(curr_yr.sales_amt, prev_yr.sales_amt):=`expr#sum(sales_amt)_1` - `expr#sum(sales_amt)_2`, expr#minus(curr_yr.sales_cnt, prev_yr.sales_cnt):=`expr#sum(sales_cnt)_1` - `expr#sum(sales_cnt)_2`
               └─ Inner Join Est. ? rows
                  │     Condition: i_brand_id_4 == i_brand_id_5, i_category_id_4 == i_category_id_5, i_class_id_4 == i_class_id_5, i_manufact_id_4 == i_manufact_id_5
                  │     Filter: (`expr#sum(sales_cnt)_1` / `expr#sum(sales_cnt)_2`) < '0.9'
                  ├─ Repartition Exchange Est. ? rows
                  │  │     Partition by: {i_brand_id_4, i_category_id_4, i_class_id_4, i_manufact_id_4}
                  │  └─ Filter Est. ? rows
                  │     │     Condition: d_year_4 = 2002
                  │     └─ CTERef[0] Est. ? rows
                  └─ Repartition Exchange Est. ? rows
                     │     Partition by: {i_brand_id_5, i_category_id_5, i_class_id_5, i_manufact_id_5}
                     └─ Filter Est. ? rows
                        │     Condition: d_year_5 = 2001
                        └─ CTERef[0] Est. ? rows
CTEDef [0]
   MergingAggregated Est. ? rows
   └─ Repartition Exchange Est. ? rows
      │     Partition by: {d_year_3, i_brand_id_3, i_category_id_3, i_class_id_3, i_manufact_id_3}
      └─ Union Est. ? rows
         ├─ Aggregating Est. ? rows
         │  │     Group by: {d_year, i_brand_id, i_category_id, i_class_id, i_manufact_id}
         │  │     Aggregates: expr#sum(sales_cnt):=AggNull(sum)(expr#minus(cs_quantity, coalesce(cr_return_quantity, 0))), expr#sum(sales_amt):=AggNull(sum)(expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0')))
         │  └─ Projection Est. ? rows
         │     │     Expressions: [d_year, i_brand_id, i_category_id, i_class_id, i_manufact_id], expr#minus(cs_ext_sales_price, coalesce(cr_return_amount, '0.0')):=cs_ext_sales_price - coalesce(cr_return_amount, '0.0'), expr#minus(cs_quantity, coalesce(cr_return_quantity, 0)):=cs_quantity - coalesce(cr_return_quantity, 0)
         │     └─ Left Join Est. ? rows
         │        │     Condition: cs_item_sk == cr_item_sk, cs_order_number == cr_order_number
         │        ├─ Repartition Exchange Est. ? rows
         │        │  │     Partition by: {cs_item_sk, cs_order_number}
         │        │  └─ Inner Join Est. ? rows
         │        │     │     Condition: cs_sold_date_sk == d_date_sk
         │        │     ├─ Repartition Exchange Est. ? rows
         │        │     │  │     Partition by: {cs_sold_date_sk}
         │        │     │  └─ Inner Join Est. ? rows
         │        │     │     │     Condition: cs_item_sk == i_item_sk
         │        │     │     ├─ Repartition Exchange Est. ? rows
         │        │     │     │  │     Partition by: {cs_item_sk}
         │        │     │     │  └─ TableScan tpcds.catalog_sales Est. ? rows
         │        │     │     │           Outputs: [cs_ext_sales_price, cs_item_sk, cs_order_number, cs_quantity, cs_sold_date_sk]
         │        │     │     └─ Repartition Exchange Est. ? rows
         │        │     │        │     Partition by: {i_item_sk}
         │        │     │        └─ Projection Est. ? rows
         │        │     │           │     Expressions: [i_brand_id, i_category_id, i_class_id, i_item_sk, i_manufact_id]
         │        │     │           └─ Filter Est. ? rows
         │        │     │              │     Condition: i_category = 'Men'
         │        │     │              └─ TableScan tpcds.item Est. ? rows
         │        │     │                       Condition : i_category = 'Men'.
         │        │     │                       Outputs: [i_brand_id, i_category, i_category_id, i_class_id, i_item_sk, i_manufact_id]
         │        │     └─ Repartition Exchange Est. ? rows
         │        │        │     Partition by: {d_date_sk}
         │        │        └─ Filter Est. ? rows
         │        │           │     Condition: d_year IN (2001, 2002)
         │        │           └─ TableScan tpcds.date_dim Est. ? rows
         │        │                    Condition : d_year IN (2001, 2002).
         │        │                    Outputs: [d_date_sk, d_year]
         │        └─ Repartition Exchange Est. ? rows
         │           │     Partition by: {cr_item_sk, cr_order_number}
         │           └─ TableScan tpcds.catalog_returns Est. ? rows
         │                    Outputs: [cr_item_sk, cr_order_number, cr_return_amount, cr_return_quantity]
         ├─ Aggregating Est. ? rows
         │  │     Group by: {d_year_1, i_brand_id_1, i_category_id_1, i_class_id_1, i_manufact_id_1}
         │  │     Aggregates: expr#sum(sales_cnt):=AggNull(sum)(expr#minus(ss_quantity, coalesce(sr_return_quantity, 0))), expr#sum(sales_amt):=AggNull(sum)(expr#minus(ss_ext_sales_price, coalesce(sr_return_amt, '0.0')))
         │  └─ Projection Est. ? rows
         │     │     Expressions: [d_year_1, i_brand_id_1, i_category_id_1, i_class_id_1, i_manufact_id_1], expr#minus(ss_ext_sales_price, coalesce(sr_return_amt, '0.0')):=ss_ext_sales_price - coalesce(sr_return_amt, '0.0'), expr#minus(ss_quantity, coalesce(sr_return_quantity, 0)):=ss_quantity - coalesce(sr_return_quantity, 0)
         │     └─ Left Join Est. ? rows
         │        │     Condition: ss_item_sk == sr_item_sk, ss_ticket_number == sr_ticket_number
         │        ├─ Repartition Exchange Est. ? rows
         │        │  │     Partition by: {ss_item_sk, ss_ticket_number}
         │        │  └─ Inner Join Est. ? rows
         │        │     │     Condition: ss_sold_date_sk == d_date_sk_1
         │        │     ├─ Repartition Exchange Est. ? rows
         │        │     │  │     Partition by: {ss_sold_date_sk}
         │        │     │  └─ Inner Join Est. ? rows
         │        │     │     │     Condition: ss_item_sk == i_item_sk_1
         │        │     │     ├─ Repartition Exchange Est. ? rows
         │        │     │     │  │     Partition by: {ss_item_sk}
         │        │     │     │  └─ TableScan tpcds.store_sales Est. ? rows
         │        │     │     │           Outputs: [ss_ext_sales_price, ss_item_sk, ss_quantity, ss_sold_date_sk, ss_ticket_number]
         │        │     │     └─ Repartition Exchange Est. ? rows
         │        │     │        │     Partition by: {i_item_sk_1}
         │        │     │        └─ Projection Est. ? rows
         │        │     │           │     Expressions: [i_brand_id_1, i_category_id_1, i_class_id_1, i_item_sk_1, i_manufact_id_1]
         │        │     │           └─ Filter Est. ? rows
         │        │     │              │     Condition: i_category_1 = 'Men'
         │        │     │              └─ TableScan tpcds.item Est. ? rows
         │        │     │                       Condition : i_category = 'Men'.
         │        │     │                       Outputs: i_brand_id_1:=i_brand_id, i_category_1:=i_category, i_category_id_1:=i_category_id, i_class_id_1:=i_class_id, i_item_sk_1:=i_item_sk, i_manufact_id_1:=i_manufact_id
         │        │     └─ Repartition Exchange Est. ? rows
         │        │        │     Partition by: {d_date_sk_1}
         │        │        └─ Filter Est. ? rows
         │        │           │     Condition: d_year_1 IN (2001, 2002)
         │        │           └─ TableScan tpcds.date_dim Est. ? rows
         │        │                    Condition : d_year IN (2001, 2002).
         │        │                    Outputs: d_date_sk_1:=d_date_sk, d_year_1:=d_year
         │        └─ Repartition Exchange Est. ? rows
         │           │     Partition by: {sr_item_sk, sr_ticket_number}
         │           └─ TableScan tpcds.store_returns Est. ? rows
         │                    Outputs: [sr_item_sk, sr_return_amt, sr_return_quantity, sr_ticket_number]
         └─ Aggregating Est. ? rows
            │     Group by: {d_year_2, i_brand_id_2, i_category_id_2, i_class_id_2, i_manufact_id_2}
            │     Aggregates: expr#sum(sales_cnt):=AggNull(sum)(expr#minus(ws_quantity, coalesce(wr_return_quantity, 0))), expr#sum(sales_amt):=AggNull(sum)(expr#minus(ws_ext_sales_price, coalesce(wr_return_amt, '0.0')))
            └─ Projection Est. ? rows
               │     Expressions: [d_year_2, i_brand_id_2, i_category_id_2, i_class_id_2, i_manufact_id_2], expr#minus(ws_ext_sales_price, coalesce(wr_return_amt, '0.0')):=ws_ext_sales_price - coalesce(wr_return_amt, '0.0'), expr#minus(ws_quantity, coalesce(wr_return_quantity, 0)):=ws_quantity - coalesce(wr_return_quantity, 0)
               └─ Left Join Est. ? rows
                  │     Condition: ws_item_sk == wr_item_sk, ws_order_number == wr_order_number
                  ├─ Repartition Exchange Est. ? rows
                  │  │     Partition by: {ws_item_sk, ws_order_number}
                  │  └─ Inner Join Est. ? rows
                  │     │     Condition: ws_sold_date_sk == d_date_sk_2
                  │     ├─ Repartition Exchange Est. ? rows
                  │     │  │     Partition by: {ws_sold_date_sk}
                  │     │  └─ Inner Join Est. ? rows
                  │     │     │     Condition: ws_item_sk == i_item_sk_2
                  │     │     ├─ Repartition Exchange Est. ? rows
                  │     │     │  │     Partition by: {ws_item_sk}
                  │     │     │  └─ TableScan tpcds.web_sales Est. ? rows
                  │     │     │           Outputs: [ws_ext_sales_price, ws_item_sk, ws_order_number, ws_quantity, ws_sold_date_sk]
                  │     │     └─ Repartition Exchange Est. ? rows
                  │     │        │     Partition by: {i_item_sk_2}
                  │     │        └─ Projection Est. ? rows
                  │     │           │     Expressions: [i_brand_id_2, i_category_id_2, i_class_id_2, i_item_sk_2, i_manufact_id_2]
                  │     │           └─ Filter Est. ? rows
                  │     │              │     Condition: i_category_2 = 'Men'
                  │     │              └─ TableScan tpcds.item Est. ? rows
                  │     │                       Condition : i_category = 'Men'.
                  │     │                       Outputs: i_brand_id_2:=i_brand_id, i_category_2:=i_category, i_category_id_2:=i_category_id, i_class_id_2:=i_class_id, i_item_sk_2:=i_item_sk, i_manufact_id_2:=i_manufact_id
                  │     └─ Repartition Exchange Est. ? rows
                  │        │     Partition by: {d_date_sk_2}
                  │        └─ Filter Est. ? rows
                  │           │     Condition: d_year_2 IN (2001, 2002)
                  │           └─ TableScan tpcds.date_dim Est. ? rows
                  │                    Condition : d_year IN (2001, 2002).
                  │                    Outputs: d_date_sk_2:=d_date_sk, d_year_2:=d_year
                  └─ Repartition Exchange Est. ? rows
                     │     Partition by: {wr_item_sk, wr_order_number}
                     └─ TableScan tpcds.web_returns Est. ? rows
                              Outputs: [wr_item_sk, wr_order_number, wr_return_amt, wr_return_quantity]
note: CTE(Common Table Expression) is applied for 2 times.
