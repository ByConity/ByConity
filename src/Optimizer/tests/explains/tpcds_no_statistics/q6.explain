Projection Est. 100 rows
│     Expressions: cnt:=`expr#count()`, state:=ca_state
└─ Limit Est. 100 rows
   │     Limit: 100
   └─ Sorting Est. 100 rows
      │     Order by: {expr#count() asc, ca_state asc}
      │     Limit: 100
      └─ Gather Exchange Est. ? rows
         └─ Sorting Est. 100 rows
            │     Order by: {expr#count() asc, ca_state asc}
            │     Limit: 100
            └─ Filter Est. ? rows
               │     Condition: `expr#count()` >= 10
               └─ MergingAggregated Est. ? rows
                  └─ Repartition Exchange Est. ? rows
                     │     Partition by: {ca_state}
                     └─ Aggregating Est. ? rows
                        │     Group by: {ca_state}
                        │     Aggregates: expr#count():=AggNull(count)()
                        └─ Inner Join Est. ? rows
                           │     Condition: i_category == i_category_1
                           │     Filter: i_current_price > ('1.2' * `expr#avg(j.i_current_price)`)
                           ├─ Repartition Exchange Est. ? rows
                           │  │     Partition by: {i_category}
                           │  └─ Inner Join Est. ? rows
                           │     │     Condition: d_month_seq == d_month_seq_1
                           │     ├─ Repartition Exchange Est. ? rows
                           │     │  │     Partition by: {d_month_seq}
                           │     │  └─ Inner Join Est. ? rows
                           │     │     │     Condition: ss_item_sk == i_item_sk
                           │     │     ├─ Repartition Exchange Est. ? rows
                           │     │     │  │     Partition by: {ss_item_sk}
                           │     │     │  └─ Inner Join Est. ? rows
                           │     │     │     │     Condition: ss_sold_date_sk == d_date_sk
                           │     │     │     ├─ Repartition Exchange Est. ? rows
                           │     │     │     │  │     Partition by: {ss_sold_date_sk}
                           │     │     │     │  └─ Inner Join Est. ? rows
                           │     │     │     │     │     Condition: c_customer_sk == ss_customer_sk
                           │     │     │     │     ├─ Repartition Exchange Est. ? rows
                           │     │     │     │     │  │     Partition by: {c_customer_sk}
                           │     │     │     │     │  └─ Inner Join Est. ? rows
                           │     │     │     │     │     │     Condition: ca_address_sk == c_current_addr_sk
                           │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
                           │     │     │     │     │     │  │     Partition by: {ca_address_sk}
                           │     │     │     │     │     │  └─ TableScan tpcds.customer_address Est. ? rows
                           │     │     │     │     │     │           Outputs: [ca_address_sk, ca_state]
                           │     │     │     │     │     └─ Repartition Exchange Est. ? rows
                           │     │     │     │     │        │     Partition by: {c_current_addr_sk}
                           │     │     │     │     │        └─ TableScan tpcds.customer Est. ? rows
                           │     │     │     │     │                 Outputs: [c_current_addr_sk, c_customer_sk]
                           │     │     │     │     └─ Repartition Exchange Est. ? rows
                           │     │     │     │        │     Partition by: {ss_customer_sk}
                           │     │     │     │        └─ TableScan tpcds.store_sales Est. ? rows
                           │     │     │     │                 Outputs: [ss_customer_sk, ss_item_sk, ss_sold_date_sk]
                           │     │     │     └─ Repartition Exchange Est. ? rows
                           │     │     │        │     Partition by: {d_date_sk}
                           │     │     │        └─ TableScan tpcds.date_dim Est. ? rows
                           │     │     │                 Outputs: [d_date_sk, d_month_seq]
                           │     │     └─ Repartition Exchange Est. ? rows
                           │     │        │     Partition by: {i_item_sk}
                           │     │        └─ TableScan tpcds.item Est. ? rows
                           │     │                 Outputs: [i_category, i_current_price, i_item_sk]
                           │     └─ Repartition Exchange Est. ? rows
                           │        │     Partition by: {d_month_seq_1}
                           │        └─ EnforceSingleRow Est. ? rows
                           │           └─ Union Est. ? rows
                           │              └─ Gather Exchange Est. ? rows
                           │                 └─ MergingAggregated Est. ? rows
                           │                    └─ Repartition Exchange Est. ? rows
                           │                       │     Partition by: {d_month_seq_1}
                           │                       └─ Aggregating Est. ? rows
                           │                          │     Group by: {d_month_seq_1}
                           │                          └─ Filter Est. ? rows
                           │                             │     Condition: (d_year = 2001) AND (d_moy = 1)
                           │                             └─ TableScan tpcds.date_dim Est. ? rows
                           │                                      Condition : (d_year = 2001) AND (d_moy = 1).
                           │                                      Outputs: [d_moy, d_year], d_month_seq_1:=d_month_seq
                           └─ MergingAggregated Est. ? rows
                              └─ Repartition Exchange Est. ? rows
                                 │     Partition by: {i_category_1}
                                 └─ Aggregating Est. ? rows
                                    │     Group by: {i_category_1}
                                    │     Aggregates: expr#avg(j.i_current_price):=AggNull(avgIf)(i_current_price_1,build_side_non_null_symbol)
                                    └─ Projection Est. ? rows
                                       │     Expressions: [i_category_1, i_current_price_1], build_side_non_null_symbol:=1
                                       └─ TableScan tpcds.item Est. ? rows
                                                Outputs: i_category_1:=i_category, i_current_price_1:=i_current_price
