Projection est. 100 rows
│     Expressions: [d_week_seq, i_item_desc, w_warehouse_name], no_promo:=`expr#sum(multiIf(isNull(p_promo_sk), 1, 0))`, promo:=`expr#sum(multiIf(isNotNull(p_promo_sk), 1, 0))`, total_cnt:=`expr#count()`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. ? rows
      │     Order by: {expr#count() desc nulls_last, i_item_desc asc, w_warehouse_name asc, d_week_seq asc}
      └─ Gather Exchange est. ? rows
         └─ Sorting est. ? rows
            │     Order by: {expr#count() desc nulls_last, i_item_desc asc, w_warehouse_name asc, d_week_seq asc}
            └─ MergingAggregated est. ? rows
               └─ Repartition Exchange est. ? rows
                  │     Partition by: {d_week_seq, i_item_desc, w_warehouse_name}
                  └─ Aggregating est. ? rows
                     │     Group by: {d_week_seq, i_item_desc, w_warehouse_name}
                     │     Aggregates: expr#sum(multiIf(isNull(p_promo_sk), 1, 0)):=AggNull(sum)(expr#multiIf(isNull(p_promo_sk), 1, 0)), expr#sum(multiIf(isNotNull(p_promo_sk), 1, 0)):=AggNull(sum)(expr#multiIf(isNotNull(p_promo_sk), 1, 0)), expr#count():=AggNull(count)()
                     └─ Projection est. ? rows
                        │     Expressions: [d_week_seq, i_item_desc, w_warehouse_name], expr#multiIf(isNotNull(p_promo_sk), 1, 0):=multiIf(isNotNull(p_promo_sk), 1, 0), expr#multiIf(isNull(p_promo_sk), 1, 0):=multiIf(isNull(p_promo_sk), 1, 0)
                        └─ Left Join est. ? rows
                           │     Condition: cs_item_sk == cr_item_sk, cs_order_number == cr_order_number
                           ├─ Repartition Exchange est. ? rows
                           │  │     Partition by: {cs_item_sk, cs_order_number}
                           │  └─ Left Join est. ? rows
                           │     │     Condition: cs_promo_sk == p_promo_sk
                           │     ├─ Repartition Exchange est. ? rows
                           │     │  │     Partition by: {cs_promo_sk}
                           │     │  └─ Inner Join est. ? rows
                           │     │     │     Condition: cs_ship_date_sk == d_date_sk_2
                           │     │     │     Filter: d_date_2 > (d_date + toIntervalDay(5))
                           │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │  │     Partition by: {cs_ship_date_sk}
                           │     │     │  └─ Inner Join est. ? rows
                           │     │     │     │     Condition: d_week_seq == d_week_seq_1, inv_date_sk == d_date_sk_1
                           │     │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │     │  │     Partition by: {d_week_seq, inv_date_sk}
                           │     │     │     │  └─ Inner Join est. ? rows
                           │     │     │     │     │     Condition: cs_sold_date_sk == d_date_sk
                           │     │     │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │     │     │  │     Partition by: {cs_sold_date_sk}
                           │     │     │     │     │  └─ Inner Join est. ? rows
                           │     │     │     │     │     │     Condition: cs_bill_hdemo_sk == hd_demo_sk
                           │     │     │     │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │     │     │     │  │     Partition by: {cs_bill_hdemo_sk}
                           │     │     │     │     │     │  └─ Inner Join est. ? rows
                           │     │     │     │     │     │     │     Condition: cs_bill_cdemo_sk == cd_demo_sk
                           │     │     │     │     │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │     │     │     │     │  │     Partition by: {cs_bill_cdemo_sk}
                           │     │     │     │     │     │     │  └─ Inner Join est. ? rows
                           │     │     │     │     │     │     │     │     Condition: cs_item_sk == i_item_sk
                           │     │     │     │     │     │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │     │     │     │     │     │  │     Partition by: {cs_item_sk}
                           │     │     │     │     │     │     │     │  └─ Inner Join est. ? rows
                           │     │     │     │     │     │     │     │     │     Condition: inv_warehouse_sk == w_warehouse_sk
                           │     │     │     │     │     │     │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │     │     │     │     │     │     │  │     Partition by: {inv_warehouse_sk}
                           │     │     │     │     │     │     │     │     │  └─ Inner Join est. ? rows
                           │     │     │     │     │     │     │     │     │     │     Condition: cs_item_sk == inv_item_sk
                           │     │     │     │     │     │     │     │     │     │     Filter: inv_quantity_on_hand < cs_quantity
                           │     │     │     │     │     │     │     │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │     │     │     │     │     │     │     │  │     Partition by: {cs_item_sk}
                           │     │     │     │     │     │     │     │     │     │  └─ TableScan tpcds.catalog_sales est. ? rows
                           │     │     │     │     │     │     │     │     │     │           Outputs: [cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_item_sk, cs_order_number, cs_promo_sk, cs_quantity, cs_ship_date_sk, cs_sold_date_sk]
                           │     │     │     │     │     │     │     │     │     └─ Repartition Exchange est. ? rows
                           │     │     │     │     │     │     │     │     │        │     Partition by: {inv_item_sk}
                           │     │     │     │     │     │     │     │     │        └─ TableScan tpcds.inventory est. ? rows
                           │     │     │     │     │     │     │     │     │                 Outputs: [inv_date_sk, inv_item_sk, inv_quantity_on_hand, inv_warehouse_sk]
                           │     │     │     │     │     │     │     │     └─ Repartition Exchange est. ? rows
                           │     │     │     │     │     │     │     │        │     Partition by: {w_warehouse_sk}
                           │     │     │     │     │     │     │     │        └─ TableScan tpcds.warehouse est. ? rows
                           │     │     │     │     │     │     │     │                 Outputs: [w_warehouse_name, w_warehouse_sk]
                           │     │     │     │     │     │     │     └─ Repartition Exchange est. ? rows
                           │     │     │     │     │     │     │        │     Partition by: {i_item_sk}
                           │     │     │     │     │     │     │        └─ TableScan tpcds.item est. ? rows
                           │     │     │     │     │     │     │                 Outputs: [i_item_desc, i_item_sk]
                           │     │     │     │     │     │     └─ Repartition Exchange est. ? rows
                           │     │     │     │     │     │        │     Partition by: {cd_demo_sk}
                           │     │     │     │     │     │        └─ Filter est. ? rows
                           │     │     │     │     │     │           │     Condition: cd_marital_status = 'D'
                           │     │     │     │     │     │           └─ TableScan tpcds.customer_demographics est. ? rows
                           │     │     │     │     │     │                    Outputs: [cd_demo_sk, cd_marital_status]
                           │     │     │     │     │     └─ Repartition Exchange est. ? rows
                           │     │     │     │     │        │     Partition by: {hd_demo_sk}
                           │     │     │     │     │        └─ Filter est. ? rows
                           │     │     │     │     │           │     Condition: hd_buy_potential = '>10000'
                           │     │     │     │     │           └─ TableScan tpcds.household_demographics est. ? rows
                           │     │     │     │     │                    Outputs: [hd_buy_potential, hd_demo_sk]
                           │     │     │     │     └─ Repartition Exchange est. ? rows
                           │     │     │     │        │     Partition by: {d_date_sk}
                           │     │     │     │        └─ Filter est. ? rows
                           │     │     │     │           │     Condition: d_year = 1999
                           │     │     │     │           └─ TableScan tpcds.date_dim est. ? rows
                           │     │     │     │                    Outputs: [d_date, d_date_sk, d_week_seq, d_year]
                           │     │     │     └─ Repartition Exchange est. ? rows
                           │     │     │        │     Partition by: {d_date_sk_1, d_week_seq_1}
                           │     │     │        └─ TableScan tpcds.date_dim est. ? rows
                           │     │     │                 Outputs: d_date_sk_1:=d_date_sk, d_week_seq_1:=d_week_seq
                           │     │     └─ Repartition Exchange est. ? rows
                           │     │        │     Partition by: {d_date_sk_2}
                           │     │        └─ TableScan tpcds.date_dim est. ? rows
                           │     │                 Outputs: d_date_2:=d_date, d_date_sk_2:=d_date_sk
                           │     └─ Repartition Exchange est. ? rows
                           │        │     Partition by: {p_promo_sk}
                           │        └─ TableScan tpcds.promotion est. ? rows
                           │                 Outputs: [p_promo_sk]
                           └─ Repartition Exchange est. ? rows
                              │     Partition by: {cr_item_sk, cr_order_number}
                              └─ TableScan tpcds.catalog_returns est. ? rows
                                       Outputs: [cr_item_sk, cr_order_number]
