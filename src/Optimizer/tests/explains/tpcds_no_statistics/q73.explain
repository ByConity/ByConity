Projection Est. ? rows
│     Expressions: [c_first_name, c_last_name, c_preferred_cust_flag, c_salutation, ss_ticket_number], cnt:=`expr#count()`
└─ Sorting Est. ? rows
   │     Order by: {expr#count() desc nulls_last, c_last_name asc}
   └─ Gather Exchange Est. ? rows
      └─ Sorting Est. ? rows
         │     Order by: {expr#count() desc nulls_last, c_last_name asc}
         └─ Inner Join Est. ? rows
            │     Condition: ss_customer_sk == c_customer_sk
            ├─ Repartition Exchange Est. ? rows
            │  │     Partition by: {ss_customer_sk}
            │  └─ Filter Est. ? rows
            │     │     Condition: (`expr#count()` >= 1) AND (`expr#count()` <= 5)
            │     └─ MergingAggregated Est. ? rows
            │        └─ Repartition Exchange Est. ? rows
            │           │     Partition by: {ss_customer_sk, ss_ticket_number}
            │           └─ Aggregating Est. ? rows
            │              │     Group by: {ss_customer_sk, ss_ticket_number}
            │              │     Aggregates: expr#count():=AggNull(count)()
            │              └─ Inner Join Est. ? rows
            │                 │     Condition: ss_hdemo_sk == hd_demo_sk
            │                 ├─ Repartition Exchange Est. ? rows
            │                 │  │     Partition by: {ss_hdemo_sk}
            │                 │  └─ Inner Join Est. ? rows
            │                 │     │     Condition: ss_store_sk == s_store_sk
            │                 │     ├─ Repartition Exchange Est. ? rows
            │                 │     │  │     Partition by: {ss_store_sk}
            │                 │     │  └─ Inner Join Est. ? rows
            │                 │     │     │     Condition: ss_sold_date_sk == d_date_sk
            │                 │     │     ├─ Repartition Exchange Est. ? rows
            │                 │     │     │  │     Partition by: {ss_sold_date_sk}
            │                 │     │     │  └─ TableScan tpcds.store_sales Est. ? rows
            │                 │     │     │           Outputs: [ss_customer_sk, ss_hdemo_sk, ss_sold_date_sk, ss_store_sk, ss_ticket_number]
            │                 │     │     └─ Repartition Exchange Est. ? rows
            │                 │     │        │     Partition by: {d_date_sk}
            │                 │     │        └─ Filter Est. ? rows
            │                 │     │           │     Condition: (d_dom >= 1) AND (d_dom <= 2) AND (d_year IN (1999, 2000, 2001))
            │                 │     │           └─ TableScan tpcds.date_dim Est. ? rows
            │                 │     │                    Condition : (d_dom >= 1) AND (d_dom <= 2) AND (d_year IN (1999, 2000, 2001)).
            │                 │     │                    Outputs: [d_date_sk, d_dom, d_year]
            │                 │     └─ Repartition Exchange Est. ? rows
            │                 │        │     Partition by: {s_store_sk}
            │                 │        └─ Filter Est. ? rows
            │                 │           │     Condition: s_county IN ('Bronx County', 'Franklin Parish', 'Orange County', 'Williamson County')
            │                 │           └─ TableScan tpcds.store Est. ? rows
            │                 │                    Condition : s_county IN ('Bronx County', 'Franklin Parish', 'Orange County', 'Williamson County').
            │                 │                    Outputs: [s_county, s_store_sk]
            │                 └─ Repartition Exchange Est. ? rows
            │                    │     Partition by: {hd_demo_sk}
            │                    └─ Filter Est. ? rows
            │                       │     Condition: (hd_buy_potential IN ('>10000', 'Unknown')) AND (hd_vehicle_count > 0) AND (multiIf(hd_vehicle_count > 0, hd_dep_count / hd_vehicle_count, NULL) > 1)
            │                       └─ TableScan tpcds.household_demographics Est. ? rows
            │                                Condition : (hd_buy_potential IN ('>10000', 'Unknown')) AND (hd_vehicle_count > 0) AND (multiIf(hd_vehicle_count > 0, hd_dep_count / hd_vehicle_count, NULL) > 1).
            │                                Outputs: [hd_buy_potential, hd_demo_sk, hd_dep_count, hd_vehicle_count]
            └─ Repartition Exchange Est. ? rows
               │     Partition by: {c_customer_sk}
               └─ TableScan tpcds.customer Est. ? rows
                        Outputs: [c_customer_sk, c_first_name, c_last_name, c_preferred_cust_flag, c_salutation]
