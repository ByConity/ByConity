Projection Est. ? rows
│     Expressions: c_first_name:=c_first_name_1, c_last_name:=c_last_name_1, paid:=`expr#sum(netpaid)`, s_store_name:=s_store_name_1
└─ Sorting Est. ? rows
   │     Order by: {c_last_name_1 asc, c_first_name_1 asc, s_store_name_1 asc}
   └─ Gather Exchange Est. ? rows
      └─ Sorting Est. ? rows
         │     Order by: {c_last_name_1 asc, c_first_name_1 asc, s_store_name_1 asc}
         └─ Inner Join Est. ? rows
            │     Condition: 
            │     Filter: `expr#sum(netpaid)` > `expr#multiply('0.05', avg(netpaid))`
            ├─ MergingAggregated Est. ? rows
            │  └─ Repartition Exchange Est. ? rows
            │     │     Partition by: {c_first_name_1, c_last_name_1, s_store_name_1}
            │     └─ Aggregating Est. ? rows
            │        │     Group by: {c_first_name_1, c_last_name_1, s_store_name_1}
            │        │     Aggregates: expr#sum(netpaid):=AggNull(sum)(expr#sum(ss_net_paid)_1)
            │        └─ Filter Est. ? rows
            │           │     Condition: i_color_1 = 'peach'
            │           └─ CTERef[0] Est. ? rows
            └─ Broadcast Exchange Est. ? rows
               └─ Projection Est. ? rows
                  │     Expressions: expr#multiply('0.05', avg(netpaid)):='0.05' * `expr#avg(netpaid)`
                  └─ MergingAggregated Est. ? rows
                     └─ Gather Exchange Est. ? rows
                        └─ Aggregating Est. ? rows
                           │     Group by: {}
                           │     Aggregates: expr#avg(netpaid):=AggNull(avg)(expr#sum(ss_net_paid)_2)
                           └─ CTERef[0] Est. ? rows
CTEDef [0]
   Projection Est. ? rows
   │     Expressions: [c_first_name, c_last_name, expr#sum(ss_net_paid), i_color, s_store_name]
   └─ MergingAggregated Est. ? rows
      └─ Repartition Exchange Est. ? rows
         │     Partition by: {c_first_name, c_last_name, ca_state, i_color, i_current_price, i_manager_id, i_size, i_units, s_state, s_store_name}
         └─ Aggregating Est. ? rows
            │     Group by: {c_first_name, c_last_name, ca_state, i_color, i_current_price, i_manager_id, i_size, i_units, s_state, s_store_name}
            │     Aggregates: expr#sum(ss_net_paid):=AggNull(sum)(ss_net_paid)
            └─ Inner Join Est. ? rows
               │     Condition: c_current_addr_sk == ca_address_sk, s_zip == ca_zip
               │     Filter: c_birth_country != upper(ca_country)
               ├─ Repartition Exchange Est. ? rows
               │  │     Partition by: {c_current_addr_sk, s_zip}
               │  └─ Inner Join Est. ? rows
               │     │     Condition: ss_customer_sk == c_customer_sk
               │     ├─ Repartition Exchange Est. ? rows
               │     │  │     Partition by: {ss_customer_sk}
               │     │  └─ Inner Join Est. ? rows
               │     │     │     Condition: sr_item_sk == i_item_sk
               │     │     ├─ Repartition Exchange Est. ? rows
               │     │     │  │     Partition by: {sr_item_sk}
               │     │     │  └─ Inner Join Est. ? rows
               │     │     │     │     Condition: ss_store_sk == s_store_sk
               │     │     │     ├─ Repartition Exchange Est. ? rows
               │     │     │     │  │     Partition by: {ss_store_sk}
               │     │     │     │  └─ Inner Join Est. ? rows
               │     │     │     │     │     Condition: ss_item_sk == sr_item_sk, ss_ticket_number == sr_ticket_number
               │     │     │     │     ├─ Repartition Exchange Est. ? rows
               │     │     │     │     │  │     Partition by: {ss_item_sk, ss_ticket_number}
               │     │     │     │     │  └─ TableScan tpcds.store_sales Est. ? rows
               │     │     │     │     │           Outputs: [ss_customer_sk, ss_item_sk, ss_net_paid, ss_store_sk, ss_ticket_number]
               │     │     │     │     └─ Repartition Exchange Est. ? rows
               │     │     │     │        │     Partition by: {sr_item_sk, sr_ticket_number}
               │     │     │     │        └─ TableScan tpcds.store_returns Est. ? rows
               │     │     │     │                 Outputs: [sr_item_sk, sr_ticket_number]
               │     │     │     └─ Repartition Exchange Est. ? rows
               │     │     │        │     Partition by: {s_store_sk}
               │     │     │        └─ Filter Est. ? rows
               │     │     │           │     Condition: s_market_id = 8
               │     │     │           └─ TableScan tpcds.store Est. ? rows
               │     │     │                    Condition : s_market_id = 8.
               │     │     │                    Outputs: [s_market_id, s_state, s_store_name, s_store_sk, s_zip]
               │     │     └─ Repartition Exchange Est. ? rows
               │     │        │     Partition by: {i_item_sk}
               │     │        └─ TableScan tpcds.item Est. ? rows
               │     │                 Outputs: [i_color, i_current_price, i_item_sk, i_manager_id, i_size, i_units]
               │     └─ Repartition Exchange Est. ? rows
               │        │     Partition by: {c_customer_sk}
               │        └─ TableScan tpcds.customer Est. ? rows
               │                 Outputs: [c_birth_country, c_current_addr_sk, c_customer_sk, c_first_name, c_last_name]
               └─ Repartition Exchange Est. ? rows
                  │     Partition by: {ca_address_sk, ca_zip}
                  └─ TableScan tpcds.customer_address Est. ? rows
                           Outputs: [ca_address_sk, ca_country, ca_state, ca_zip]
note: CTE(Common Table Expression) is applied for 2 times.
Projection Est. ? rows
│     Expressions: c_first_name:=c_first_name_5, c_last_name:=c_last_name_5, paid:=`expr#sum(netpaid)_1`, s_store_name:=s_store_name_5
└─ Sorting Est. ? rows
   │     Order by: {c_last_name_5 asc, c_first_name_5 asc, s_store_name_5 asc}
   └─ Gather Exchange Est. ? rows
      └─ Sorting Est. ? rows
         │     Order by: {c_last_name_5 asc, c_first_name_5 asc, s_store_name_5 asc}
         └─ Inner Join Est. ? rows
            │     Condition: 
            │     Filter: `expr#sum(netpaid)_1` > `expr#multiply('0.05', avg(netpaid))_1`
            ├─ MergingAggregated Est. ? rows
            │  └─ Repartition Exchange Est. ? rows
            │     │     Partition by: {c_first_name_5, c_last_name_5, s_store_name_5}
            │     └─ Aggregating Est. ? rows
            │        │     Group by: {c_first_name_5, c_last_name_5, s_store_name_5}
            │        │     Aggregates: expr#sum(netpaid)_1:=AggNull(sum)(expr#sum(ss_net_paid)_5)
            │        └─ Filter Est. ? rows
            │           │     Condition: i_color_5 = 'saddle'
            │           └─ CTERef[0] Est. ? rows
            └─ Broadcast Exchange Est. ? rows
               └─ Projection Est. ? rows
                  │     Expressions: expr#multiply('0.05', avg(netpaid))_1:='0.05' * `expr#avg(netpaid)_1`
                  └─ MergingAggregated Est. ? rows
                     └─ Gather Exchange Est. ? rows
                        └─ Aggregating Est. ? rows
                           │     Group by: {}
                           │     Aggregates: expr#avg(netpaid)_1:=AggNull(avg)(expr#sum(ss_net_paid)_6)
                           └─ CTERef[0] Est. ? rows
CTEDef [0]
   Projection Est. ? rows
   │     Expressions: [c_first_name_4, c_last_name_4, expr#sum(ss_net_paid)_4, i_color_4, s_store_name_4]
   └─ MergingAggregated Est. ? rows
      └─ Repartition Exchange Est. ? rows
         │     Partition by: {c_first_name_4, c_last_name_4, ca_state_4, i_color_4, i_current_price_4, i_manager_id_4, i_size_4, i_units_4, s_state_4, s_store_name_4}
         └─ Aggregating Est. ? rows
            │     Group by: {c_first_name_4, c_last_name_4, ca_state_4, i_color_4, i_current_price_4, i_manager_id_4, i_size_4, i_units_4, s_state_4, s_store_name_4}
            │     Aggregates: expr#sum(ss_net_paid)_4:=AggNull(sum)(ss_net_paid_2)
            └─ Inner Join Est. ? rows
               │     Condition: c_current_addr_sk_2 == ca_address_sk_2, s_zip_2 == ca_zip_2
               │     Filter: c_birth_country_2 != upper(ca_country_2)
               ├─ Repartition Exchange Est. ? rows
               │  │     Partition by: {c_current_addr_sk_2, s_zip_2}
               │  └─ Inner Join Est. ? rows
               │     │     Condition: ss_customer_sk_2 == c_customer_sk_2
               │     ├─ Repartition Exchange Est. ? rows
               │     │  │     Partition by: {ss_customer_sk_2}
               │     │  └─ Inner Join Est. ? rows
               │     │     │     Condition: sr_item_sk_2 == i_item_sk_2
               │     │     ├─ Repartition Exchange Est. ? rows
               │     │     │  │     Partition by: {sr_item_sk_2}
               │     │     │  └─ Inner Join Est. ? rows
               │     │     │     │     Condition: ss_store_sk_2 == s_store_sk_2
               │     │     │     ├─ Repartition Exchange Est. ? rows
               │     │     │     │  │     Partition by: {ss_store_sk_2}
               │     │     │     │  └─ Inner Join Est. ? rows
               │     │     │     │     │     Condition: ss_item_sk_2 == sr_item_sk_2, ss_ticket_number_2 == sr_ticket_number_2
               │     │     │     │     ├─ Repartition Exchange Est. ? rows
               │     │     │     │     │  │     Partition by: {ss_item_sk_2, ss_ticket_number_2}
               │     │     │     │     │  └─ TableScan tpcds.store_sales Est. ? rows
               │     │     │     │     │           Outputs: ss_customer_sk_2:=ss_customer_sk, ss_item_sk_2:=ss_item_sk, ss_net_paid_2:=ss_net_paid, ss_store_sk_2:=ss_store_sk, ss_ticket_number_2:=ss_ticket_number
               │     │     │     │     └─ Repartition Exchange Est. ? rows
               │     │     │     │        │     Partition by: {sr_item_sk_2, sr_ticket_number_2}
               │     │     │     │        └─ TableScan tpcds.store_returns Est. ? rows
               │     │     │     │                 Outputs: sr_item_sk_2:=sr_item_sk, sr_ticket_number_2:=sr_ticket_number
               │     │     │     └─ Repartition Exchange Est. ? rows
               │     │     │        │     Partition by: {s_store_sk_2}
               │     │     │        └─ Filter Est. ? rows
               │     │     │           │     Condition: s_market_id_2 = 8
               │     │     │           └─ TableScan tpcds.store Est. ? rows
               │     │     │                    Condition : s_market_id = 8.
               │     │     │                    Outputs: s_market_id_2:=s_market_id, s_state_4:=s_state, s_store_name_4:=s_store_name, s_store_sk_2:=s_store_sk, s_zip_2:=s_zip
               │     │     └─ Repartition Exchange Est. ? rows
               │     │        │     Partition by: {i_item_sk_2}
               │     │        └─ TableScan tpcds.item Est. ? rows
               │     │                 Outputs: i_color_4:=i_color, i_current_price_4:=i_current_price, i_item_sk_2:=i_item_sk, i_manager_id_4:=i_manager_id, i_size_4:=i_size, i_units_4:=i_units
               │     └─ Repartition Exchange Est. ? rows
               │        │     Partition by: {c_customer_sk_2}
               │        └─ TableScan tpcds.customer Est. ? rows
               │                 Outputs: c_birth_country_2:=c_birth_country, c_current_addr_sk_2:=c_current_addr_sk, c_customer_sk_2:=c_customer_sk, c_first_name_4:=c_first_name, c_last_name_4:=c_last_name
               └─ Repartition Exchange Est. ? rows
                  │     Partition by: {ca_address_sk_2, ca_zip_2}
                  └─ TableScan tpcds.customer_address Est. ? rows
                           Outputs: ca_address_sk_2:=ca_address_sk, ca_country_2:=ca_country, ca_state_4:=ca_state, ca_zip_2:=ca_zip
note: CTE(Common Table Expression) is applied for 2 times.
