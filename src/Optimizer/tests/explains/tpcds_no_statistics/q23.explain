Projection est. 100 rows
│     Expressions: sum(sales):=`expr#sum(sales)`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ MergingAggregated est. ? rows
      └─ Gather Exchange est. ? rows
         └─ Aggregating est. ? rows
            │     Group by: {}
            │     Aggregates: expr#sum(sales):=AggNull(sum)(expr#multiply(cs_quantity, cs_list_price)_1)
            └─ Union est. ? rows
               ├─ Projection est. ? rows
               │  │     Expressions: expr#multiply(cs_quantity, cs_list_price):=cs_quantity * cs_list_price
               │  └─ Inner Join est. ? rows
               │     │     Condition: cs_bill_customer_sk == c_customer_sk
               │     ├─ Repartition Exchange est. ? rows
               │     │  │     Partition by: {cs_bill_customer_sk}
               │     │  └─ Inner Join est. ? rows
               │     │     │     Condition: cs_item_sk == i_item_sk
               │     │     ├─ Repartition Exchange est. ? rows
               │     │     │  │     Partition by: {cs_item_sk}
               │     │     │  └─ Inner Join est. ? rows
               │     │     │     │     Condition: cs_sold_date_sk == d_date_sk
               │     │     │     ├─ Repartition Exchange est. ? rows
               │     │     │     │  │     Partition by: {cs_sold_date_sk}
               │     │     │     │  └─ Filter est. ? rows
               │     │     │     │     │     Condition: isNotNull(cs_item_sk) AND isNotNull(cs_bill_customer_sk)
               │     │     │     │     └─ TableScan tpcds.catalog_sales est. ? rows
               │     │     │     │              Outputs: [cs_bill_customer_sk, cs_item_sk, cs_list_price, cs_quantity, cs_sold_date_sk]
               │     │     │     └─ Repartition Exchange est. ? rows
               │     │     │        │     Partition by: {d_date_sk}
               │     │     │        └─ Filter est. ? rows
               │     │     │           │     Condition: (d_moy = 2) AND (d_year = 2000)
               │     │     │           └─ TableScan tpcds.date_dim est. ? rows
               │     │     │                    Outputs: [d_date_sk, d_moy, d_year]
               │     │     └─ MergingAggregated est. ? rows
               │     │        └─ Repartition Exchange est. ? rows
               │     │           │     Partition by: {i_item_sk}
               │     │           └─ Aggregating est. ? rows
               │     │              │     Group by: {i_item_sk}
               │     │              └─ Projection est. ? rows
               │     │                 │     Expressions: [i_item_sk]
               │     │                 └─ Filter est. ? rows
               │     │                    │     Condition: `expr#count()` > 4
               │     │                    └─ MergingAggregated est. ? rows
               │     │                       └─ Repartition Exchange est. ? rows
               │     │                          │     Partition by: {d_date_1, expr#substring(i_item_desc, 1, 30), i_item_sk}
               │     │                          └─ Aggregating est. ? rows
               │     │                             │     Group by: {d_date_1, expr#substring(i_item_desc, 1, 30), i_item_sk}
               │     │                             │     Aggregates: expr#count():=AggNull(count)()
               │     │                             └─ Projection est. ? rows
               │     │                                │     Expressions: [d_date_1, i_item_sk], expr#substring(i_item_desc, 1, 30):=substring(i_item_desc, 1, 30)
               │     │                                └─ Inner Join est. ? rows
               │     │                                   │     Condition: ss_item_sk == i_item_sk
               │     │                                   ├─ Repartition Exchange est. ? rows
               │     │                                   │  │     Partition by: {ss_item_sk}
               │     │                                   │  └─ Inner Join est. ? rows
               │     │                                   │     │     Condition: ss_sold_date_sk == d_date_sk_1
               │     │                                   │     ├─ Repartition Exchange est. ? rows
               │     │                                   │     │  │     Partition by: {ss_sold_date_sk}
               │     │                                   │     │  └─ Filter est. ? rows
               │     │                                   │     │     │     Condition: isNotNull(ss_item_sk)
               │     │                                   │     │     └─ TableScan tpcds.store_sales est. ? rows
               │     │                                   │     │              Outputs: [ss_item_sk, ss_sold_date_sk]
               │     │                                   │     └─ Repartition Exchange est. ? rows
               │     │                                   │        │     Partition by: {d_date_sk_1}
               │     │                                   │        └─ Filter est. ? rows
               │     │                                   │           │     Condition: d_year_1 IN (2000, 2001, 2002, 2003)
               │     │                                   │           └─ TableScan tpcds.date_dim est. ? rows
               │     │                                   │                    Outputs: d_date_1:=d_date, d_date_sk_1:=d_date_sk, d_year_1:=d_year
               │     │                                   └─ Repartition Exchange est. ? rows
               │     │                                      │     Partition by: {i_item_sk}
               │     │                                      └─ Filter est. ? rows
               │     │                                         │     Condition: isNotNull(i_item_sk)
               │     │                                         └─ TableScan tpcds.item est. ? rows
               │     │                                                  Outputs: [i_item_desc, i_item_sk]
               │     └─ Aggregating est. ? rows
               │        │     Group by: {c_customer_sk}
               │        └─ Inner Join est. ? rows
               │           │     Condition: 
               │           │     Filter: `expr#sum(multiply(ss_quantity, ss_sales_price))` > ('0.500000' * `expr#max(csales)`)
               │           ├─ MergingAggregated est. ? rows
               │           │  └─ Repartition Exchange est. ? rows
               │           │     │     Partition by: {c_customer_sk}
               │           │     └─ Aggregating est. ? rows
               │           │        │     Group by: {c_customer_sk}
               │           │        │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price)):=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price))
               │           │        └─ Projection est. ? rows
               │           │           │     Expressions: [c_customer_sk], expr#multiply(ss_quantity, ss_sales_price):=ss_quantity_1 * ss_sales_price_1
               │           │           └─ Inner Join est. ? rows
               │           │              │     Condition: ss_customer_sk_1 == c_customer_sk
               │           │              ├─ Repartition Exchange est. ? rows
               │           │              │  │     Partition by: {ss_customer_sk_1}
               │           │              │  └─ Filter est. ? rows
               │           │              │     │     Condition: isNotNull(ss_customer_sk_1)
               │           │              │     └─ TableScan tpcds.store_sales est. ? rows
               │           │              │              Outputs: ss_customer_sk_1:=ss_customer_sk, ss_quantity_1:=ss_quantity, ss_sales_price_1:=ss_sales_price
               │           │              └─ Repartition Exchange est. ? rows
               │           │                 │     Partition by: {c_customer_sk}
               │           │                 └─ Filter est. ? rows
               │           │                    │     Condition: isNotNull(c_customer_sk)
               │           │                    └─ TableScan tpcds.customer est. ? rows
               │           │                             Outputs: [c_customer_sk]
               │           └─ Broadcast Exchange est. ? rows
               │              └─ MergingAggregated est. ? rows
               │                 └─ Gather Exchange est. ? rows
               │                    └─ Aggregating est. ? rows
               │                       │     Group by: {}
               │                       │     Aggregates: expr#max(csales):=AggNull(max)(expr#sum(multiply(ss_quantity, ss_sales_price))_1)
               │                       └─ Projection est. ? rows
               │                          │     Expressions: [expr#sum(multiply(ss_quantity, ss_sales_price))_1]
               │                          └─ MergingAggregated est. ? rows
               │                             └─ Repartition Exchange est. ? rows
               │                                │     Partition by: {c_customer_sk_1}
               │                                └─ Aggregating est. ? rows
               │                                   │     Group by: {c_customer_sk_1}
               │                                   │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_1:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_1)
               │                                   └─ Projection est. ? rows
               │                                      │     Expressions: [c_customer_sk_1], expr#multiply(ss_quantity, ss_sales_price)_1:=ss_quantity_2 * ss_sales_price_2
               │                                      └─ Inner Join est. ? rows
               │                                         │     Condition: ss_sold_date_sk_2 == d_date_sk_2
               │                                         ├─ Repartition Exchange est. ? rows
               │                                         │  │     Partition by: {ss_sold_date_sk_2}
               │                                         │  └─ Inner Join est. ? rows
               │                                         │     │     Condition: ss_customer_sk_2 == c_customer_sk_1
               │                                         │     ├─ Repartition Exchange est. ? rows
               │                                         │     │  │     Partition by: {ss_customer_sk_2}
               │                                         │     │  └─ TableScan tpcds.store_sales est. ? rows
               │                                         │     │           Outputs: ss_customer_sk_2:=ss_customer_sk, ss_quantity_2:=ss_quantity, ss_sales_price_2:=ss_sales_price, ss_sold_date_sk_2:=ss_sold_date_sk
               │                                         │     └─ Repartition Exchange est. ? rows
               │                                         │        │     Partition by: {c_customer_sk_1}
               │                                         │        └─ TableScan tpcds.customer est. ? rows
               │                                         │                 Outputs: c_customer_sk_1:=c_customer_sk
               │                                         └─ Repartition Exchange est. ? rows
               │                                            │     Partition by: {d_date_sk_2}
               │                                            └─ Filter est. ? rows
               │                                               │     Condition: d_year_2 IN (2000, 2001, 2002, 2003)
               │                                               └─ TableScan tpcds.date_dim est. ? rows
               │                                                        Outputs: d_date_sk_2:=d_date_sk, d_year_2:=d_year
               └─ Projection est. ? rows
                  │     Expressions: expr#multiply(ws_quantity, ws_list_price):=ws_quantity * ws_list_price
                  └─ Inner Join est. ? rows
                     │     Condition: ws_bill_customer_sk == c_customer_sk_2
                     ├─ Repartition Exchange est. ? rows
                     │  │     Partition by: {ws_bill_customer_sk}
                     │  └─ Inner Join est. ? rows
                     │     │     Condition: ws_item_sk == i_item_sk_1
                     │     ├─ Repartition Exchange est. ? rows
                     │     │  │     Partition by: {ws_item_sk}
                     │     │  └─ Inner Join est. ? rows
                     │     │     │     Condition: ws_sold_date_sk == d_date_sk_3
                     │     │     ├─ Repartition Exchange est. ? rows
                     │     │     │  │     Partition by: {ws_sold_date_sk}
                     │     │     │  └─ Filter est. ? rows
                     │     │     │     │     Condition: isNotNull(ws_bill_customer_sk) AND isNotNull(ws_item_sk)
                     │     │     │     └─ TableScan tpcds.web_sales est. ? rows
                     │     │     │              Outputs: [ws_bill_customer_sk, ws_item_sk, ws_list_price, ws_quantity, ws_sold_date_sk]
                     │     │     └─ Repartition Exchange est. ? rows
                     │     │        │     Partition by: {d_date_sk_3}
                     │     │        └─ Filter est. ? rows
                     │     │           │     Condition: (d_year_3 = 2000) AND (d_moy_3 = 2)
                     │     │           └─ TableScan tpcds.date_dim est. ? rows
                     │     │                    Outputs: d_date_sk_3:=d_date_sk, d_moy_3:=d_moy, d_year_3:=d_year
                     │     └─ MergingAggregated est. ? rows
                     │        └─ Repartition Exchange est. ? rows
                     │           │     Partition by: {i_item_sk_1}
                     │           └─ Aggregating est. ? rows
                     │              │     Group by: {i_item_sk_1}
                     │              └─ Projection est. ? rows
                     │                 │     Expressions: [i_item_sk_1]
                     │                 └─ Filter est. ? rows
                     │                    │     Condition: `expr#count()_1` > 4
                     │                    └─ MergingAggregated est. ? rows
                     │                       └─ Repartition Exchange est. ? rows
                     │                          │     Partition by: {d_date_4, expr#substring(i_item_desc, 1, 30)_1, i_item_sk_1}
                     │                          └─ Aggregating est. ? rows
                     │                             │     Group by: {d_date_4, expr#substring(i_item_desc, 1, 30)_1, i_item_sk_1}
                     │                             │     Aggregates: expr#count()_1:=AggNull(count)()
                     │                             └─ Projection est. ? rows
                     │                                │     Expressions: [d_date_4, i_item_sk_1], expr#substring(i_item_desc, 1, 30)_1:=substring(i_item_desc_1, 1, 30)
                     │                                └─ Inner Join est. ? rows
                     │                                   │     Condition: ss_item_sk_3 == i_item_sk_1
                     │                                   ├─ Repartition Exchange est. ? rows
                     │                                   │  │     Partition by: {ss_item_sk_3}
                     │                                   │  └─ Inner Join est. ? rows
                     │                                   │     │     Condition: ss_sold_date_sk_3 == d_date_sk_4
                     │                                   │     ├─ Repartition Exchange est. ? rows
                     │                                   │     │  │     Partition by: {ss_sold_date_sk_3}
                     │                                   │     │  └─ Filter est. ? rows
                     │                                   │     │     │     Condition: isNotNull(ss_item_sk_3)
                     │                                   │     │     └─ TableScan tpcds.store_sales est. ? rows
                     │                                   │     │              Outputs: ss_item_sk_3:=ss_item_sk, ss_sold_date_sk_3:=ss_sold_date_sk
                     │                                   │     └─ Repartition Exchange est. ? rows
                     │                                   │        │     Partition by: {d_date_sk_4}
                     │                                   │        └─ Filter est. ? rows
                     │                                   │           │     Condition: d_year_4 IN (2000, 2001, 2002, 2003)
                     │                                   │           └─ TableScan tpcds.date_dim est. ? rows
                     │                                   │                    Outputs: d_date_4:=d_date, d_date_sk_4:=d_date_sk, d_year_4:=d_year
                     │                                   └─ Repartition Exchange est. ? rows
                     │                                      │     Partition by: {i_item_sk_1}
                     │                                      └─ Filter est. ? rows
                     │                                         │     Condition: isNotNull(i_item_sk_1)
                     │                                         └─ TableScan tpcds.item est. ? rows
                     │                                                  Outputs: i_item_desc_1:=i_item_desc, i_item_sk_1:=i_item_sk
                     └─ Aggregating est. ? rows
                        │     Group by: {c_customer_sk_2}
                        └─ Inner Join est. ? rows
                           │     Condition: 
                           │     Filter: `expr#sum(multiply(ss_quantity, ss_sales_price))_2` > ('0.500000' * `expr#max(csales)_1`)
                           ├─ MergingAggregated est. ? rows
                           │  └─ Repartition Exchange est. ? rows
                           │     │     Partition by: {c_customer_sk_2}
                           │     └─ Aggregating est. ? rows
                           │        │     Group by: {c_customer_sk_2}
                           │        │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_2:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_2)
                           │        └─ Projection est. ? rows
                           │           │     Expressions: [c_customer_sk_2], expr#multiply(ss_quantity, ss_sales_price)_2:=ss_quantity_4 * ss_sales_price_4
                           │           └─ Inner Join est. ? rows
                           │              │     Condition: ss_customer_sk_4 == c_customer_sk_2
                           │              ├─ Repartition Exchange est. ? rows
                           │              │  │     Partition by: {ss_customer_sk_4}
                           │              │  └─ Filter est. ? rows
                           │              │     │     Condition: isNotNull(ss_customer_sk_4)
                           │              │     └─ TableScan tpcds.store_sales est. ? rows
                           │              │              Outputs: ss_customer_sk_4:=ss_customer_sk, ss_quantity_4:=ss_quantity, ss_sales_price_4:=ss_sales_price
                           │              └─ Repartition Exchange est. ? rows
                           │                 │     Partition by: {c_customer_sk_2}
                           │                 └─ Filter est. ? rows
                           │                    │     Condition: isNotNull(c_customer_sk_2)
                           │                    └─ TableScan tpcds.customer est. ? rows
                           │                             Outputs: c_customer_sk_2:=c_customer_sk
                           └─ Broadcast Exchange est. ? rows
                              └─ MergingAggregated est. ? rows
                                 └─ Gather Exchange est. ? rows
                                    └─ Aggregating est. ? rows
                                       │     Group by: {}
                                       │     Aggregates: expr#max(csales)_1:=AggNull(max)(expr#sum(multiply(ss_quantity, ss_sales_price))_3)
                                       └─ Projection est. ? rows
                                          │     Expressions: [expr#sum(multiply(ss_quantity, ss_sales_price))_3]
                                          └─ MergingAggregated est. ? rows
                                             └─ Repartition Exchange est. ? rows
                                                │     Partition by: {c_customer_sk_3}
                                                └─ Aggregating est. ? rows
                                                   │     Group by: {c_customer_sk_3}
                                                   │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_3:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_3)
                                                   └─ Projection est. ? rows
                                                      │     Expressions: [c_customer_sk_3], expr#multiply(ss_quantity, ss_sales_price)_3:=ss_quantity_5 * ss_sales_price_5
                                                      └─ Inner Join est. ? rows
                                                         │     Condition: ss_sold_date_sk_5 == d_date_sk_5
                                                         ├─ Repartition Exchange est. ? rows
                                                         │  │     Partition by: {ss_sold_date_sk_5}
                                                         │  └─ Inner Join est. ? rows
                                                         │     │     Condition: ss_customer_sk_5 == c_customer_sk_3
                                                         │     ├─ Repartition Exchange est. ? rows
                                                         │     │  │     Partition by: {ss_customer_sk_5}
                                                         │     │  └─ TableScan tpcds.store_sales est. ? rows
                                                         │     │           Outputs: ss_customer_sk_5:=ss_customer_sk, ss_quantity_5:=ss_quantity, ss_sales_price_5:=ss_sales_price, ss_sold_date_sk_5:=ss_sold_date_sk
                                                         │     └─ Repartition Exchange est. ? rows
                                                         │        │     Partition by: {c_customer_sk_3}
                                                         │        └─ TableScan tpcds.customer est. ? rows
                                                         │                 Outputs: c_customer_sk_3:=c_customer_sk
                                                         └─ Repartition Exchange est. ? rows
                                                            │     Partition by: {d_date_sk_5}
                                                            └─ Filter est. ? rows
                                                               │     Condition: d_year_5 IN (2000, 2001, 2002, 2003)
                                                               └─ TableScan tpcds.date_dim est. ? rows
                                                                        Outputs: d_date_sk_5:=d_date_sk, d_year_5:=d_year
Projection est. 100 rows
│     Expressions: c_first_name:=c_first_name_10, c_last_name:=c_last_name_10, sales:=`expr#sum(multiply(cs_quantity, cs_list_price))_1`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. ? rows
      │     Order by: {c_last_name_10 asc, c_first_name_10 asc, expr#sum(multiply(cs_quantity, cs_list_price))_1 asc}
      │     Limit: 100
      └─ Gather Exchange est. ? rows
         └─ Sorting est. ? rows
            │     Order by: {c_last_name_10 asc, c_first_name_10 asc, expr#sum(multiply(cs_quantity, cs_list_price))_1 asc}
            │     Limit: 100
            └─ Union est. ? rows
               ├─ MergingAggregated est. ? rows
               │  └─ Repartition Exchange est. ? rows
               │     │     Partition by: {c_first_name_4, c_last_name_4}
               │     └─ Aggregating est. ? rows
               │        │     Group by: {c_first_name_4, c_last_name_4}
               │        │     Aggregates: expr#sum(multiply(cs_quantity, cs_list_price)):=AggNull(sum)(expr#multiply(cs_quantity, cs_list_price)_2)
               │        └─ Projection est. ? rows
               │           │     Expressions: [c_first_name_4, c_last_name_4], expr#multiply(cs_quantity, cs_list_price)_2:=cs_quantity_1 * cs_list_price_1
               │           └─ Inner Join est. ? rows
               │              │     Condition: c_customer_sk_4 == c_customer_sk_5
               │              ├─ Repartition Exchange est. ? rows
               │              │  │     Partition by: {c_customer_sk_4}
               │              │  └─ Inner Join est. ? rows
               │              │     │     Condition: cs_item_sk_1 == i_item_sk_2
               │              │     ├─ Repartition Exchange est. ? rows
               │              │     │  │     Partition by: {cs_item_sk_1}
               │              │     │  └─ Inner Join est. ? rows
               │              │     │     │     Condition: cs_sold_date_sk_1 == d_date_sk_6
               │              │     │     ├─ Repartition Exchange est. ? rows
               │              │     │     │  │     Partition by: {cs_sold_date_sk_1}
               │              │     │     │  └─ Inner Join est. ? rows
               │              │     │     │     │     Condition: cs_bill_customer_sk_1 == c_customer_sk_4
               │              │     │     │     ├─ Repartition Exchange est. ? rows
               │              │     │     │     │  │     Partition by: {cs_bill_customer_sk_1}
               │              │     │     │     │  └─ Filter est. ? rows
               │              │     │     │     │     │     Condition: isNotNull(cs_item_sk_1) AND isNotNull(cs_bill_customer_sk_1)
               │              │     │     │     │     └─ TableScan tpcds.catalog_sales est. ? rows
               │              │     │     │     │              Outputs: cs_bill_customer_sk_1:=cs_bill_customer_sk, cs_item_sk_1:=cs_item_sk, cs_list_price_1:=cs_list_price, cs_quantity_1:=cs_quantity, cs_sold_date_sk_1:=cs_sold_date_sk
               │              │     │     │     └─ Repartition Exchange est. ? rows
               │              │     │     │        │     Partition by: {c_customer_sk_4}
               │              │     │     │        └─ Filter est. ? rows
               │              │     │     │           │     Condition: isNotNull(c_customer_sk_4)
               │              │     │     │           └─ TableScan tpcds.customer est. ? rows
               │              │     │     │                    Outputs: c_customer_sk_4:=c_customer_sk, c_first_name_4:=c_first_name, c_last_name_4:=c_last_name
               │              │     │     └─ Repartition Exchange est. ? rows
               │              │     │        │     Partition by: {d_date_sk_6}
               │              │     │        └─ Filter est. ? rows
               │              │     │           │     Condition: (d_year_6 = 2000) AND (d_moy_6 = 2)
               │              │     │           └─ TableScan tpcds.date_dim est. ? rows
               │              │     │                    Outputs: d_date_sk_6:=d_date_sk, d_moy_6:=d_moy, d_year_6:=d_year
               │              │     └─ MergingAggregated est. ? rows
               │              │        └─ Repartition Exchange est. ? rows
               │              │           │     Partition by: {i_item_sk_2}
               │              │           └─ Aggregating est. ? rows
               │              │              │     Group by: {i_item_sk_2}
               │              │              └─ Projection est. ? rows
               │              │                 │     Expressions: [i_item_sk_2]
               │              │                 └─ Filter est. ? rows
               │              │                    │     Condition: `expr#count()_2` > 4
               │              │                    └─ MergingAggregated est. ? rows
               │              │                       └─ Repartition Exchange est. ? rows
               │              │                          │     Partition by: {d_date_7, expr#substring(i_item_desc, 1, 30)_2, i_item_sk_2}
               │              │                          └─ Aggregating est. ? rows
               │              │                             │     Group by: {d_date_7, expr#substring(i_item_desc, 1, 30)_2, i_item_sk_2}
               │              │                             │     Aggregates: expr#count()_2:=AggNull(count)()
               │              │                             └─ Projection est. ? rows
               │              │                                │     Expressions: [d_date_7, i_item_sk_2], expr#substring(i_item_desc, 1, 30)_2:=substring(i_item_desc_2, 1, 30)
               │              │                                └─ Inner Join est. ? rows
               │              │                                   │     Condition: ss_item_sk_6 == i_item_sk_2
               │              │                                   ├─ Repartition Exchange est. ? rows
               │              │                                   │  │     Partition by: {ss_item_sk_6}
               │              │                                   │  └─ Inner Join est. ? rows
               │              │                                   │     │     Condition: ss_sold_date_sk_6 == d_date_sk_7
               │              │                                   │     ├─ Repartition Exchange est. ? rows
               │              │                                   │     │  │     Partition by: {ss_sold_date_sk_6}
               │              │                                   │     │  └─ Filter est. ? rows
               │              │                                   │     │     │     Condition: isNotNull(ss_item_sk_6)
               │              │                                   │     │     └─ TableScan tpcds.store_sales est. ? rows
               │              │                                   │     │              Outputs: ss_item_sk_6:=ss_item_sk, ss_sold_date_sk_6:=ss_sold_date_sk
               │              │                                   │     └─ Repartition Exchange est. ? rows
               │              │                                   │        │     Partition by: {d_date_sk_7}
               │              │                                   │        └─ Filter est. ? rows
               │              │                                   │           │     Condition: d_year_7 IN (2000, 2001, 2002, 2003)
               │              │                                   │           └─ TableScan tpcds.date_dim est. ? rows
               │              │                                   │                    Outputs: d_date_7:=d_date, d_date_sk_7:=d_date_sk, d_year_7:=d_year
               │              │                                   └─ Repartition Exchange est. ? rows
               │              │                                      │     Partition by: {i_item_sk_2}
               │              │                                      └─ Filter est. ? rows
               │              │                                         │     Condition: isNotNull(i_item_sk_2)
               │              │                                         └─ TableScan tpcds.item est. ? rows
               │              │                                                  Outputs: i_item_desc_2:=i_item_desc, i_item_sk_2:=i_item_sk
               │              └─ Aggregating est. ? rows
               │                 │     Group by: {c_customer_sk_5}
               │                 └─ Inner Join est. ? rows
               │                    │     Condition: 
               │                    │     Filter: `expr#sum(multiply(ss_quantity, ss_sales_price))_4` > ('0.500000' * `expr#max(csales)_2`)
               │                    ├─ MergingAggregated est. ? rows
               │                    │  └─ Repartition Exchange est. ? rows
               │                    │     │     Partition by: {c_customer_sk_5}
               │                    │     └─ Aggregating est. ? rows
               │                    │        │     Group by: {c_customer_sk_5}
               │                    │        │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_4:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_4)
               │                    │        └─ Projection est. ? rows
               │                    │           │     Expressions: [c_customer_sk_5], expr#multiply(ss_quantity, ss_sales_price)_4:=ss_quantity_7 * ss_sales_price_7
               │                    │           └─ Inner Join est. ? rows
               │                    │              │     Condition: ss_customer_sk_7 == c_customer_sk_5
               │                    │              ├─ Repartition Exchange est. ? rows
               │                    │              │  │     Partition by: {ss_customer_sk_7}
               │                    │              │  └─ Filter est. ? rows
               │                    │              │     │     Condition: isNotNull(ss_customer_sk_7)
               │                    │              │     └─ TableScan tpcds.store_sales est. ? rows
               │                    │              │              Outputs: ss_customer_sk_7:=ss_customer_sk, ss_quantity_7:=ss_quantity, ss_sales_price_7:=ss_sales_price
               │                    │              └─ Repartition Exchange est. ? rows
               │                    │                 │     Partition by: {c_customer_sk_5}
               │                    │                 └─ Filter est. ? rows
               │                    │                    │     Condition: isNotNull(c_customer_sk_5)
               │                    │                    └─ TableScan tpcds.customer est. ? rows
               │                    │                             Outputs: c_customer_sk_5:=c_customer_sk
               │                    └─ Broadcast Exchange est. ? rows
               │                       └─ MergingAggregated est. ? rows
               │                          └─ Gather Exchange est. ? rows
               │                             └─ Aggregating est. ? rows
               │                                │     Group by: {}
               │                                │     Aggregates: expr#max(csales)_2:=AggNull(max)(expr#sum(multiply(ss_quantity, ss_sales_price))_5)
               │                                └─ Projection est. ? rows
               │                                   │     Expressions: [expr#sum(multiply(ss_quantity, ss_sales_price))_5]
               │                                   └─ MergingAggregated est. ? rows
               │                                      └─ Repartition Exchange est. ? rows
               │                                         │     Partition by: {c_customer_sk_6}
               │                                         └─ Aggregating est. ? rows
               │                                            │     Group by: {c_customer_sk_6}
               │                                            │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_5:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_5)
               │                                            └─ Projection est. ? rows
               │                                               │     Expressions: [c_customer_sk_6], expr#multiply(ss_quantity, ss_sales_price)_5:=ss_quantity_8 * ss_sales_price_8
               │                                               └─ Inner Join est. ? rows
               │                                                  │     Condition: ss_sold_date_sk_8 == d_date_sk_8
               │                                                  ├─ Repartition Exchange est. ? rows
               │                                                  │  │     Partition by: {ss_sold_date_sk_8}
               │                                                  │  └─ Inner Join est. ? rows
               │                                                  │     │     Condition: ss_customer_sk_8 == c_customer_sk_6
               │                                                  │     ├─ Repartition Exchange est. ? rows
               │                                                  │     │  │     Partition by: {ss_customer_sk_8}
               │                                                  │     │  └─ TableScan tpcds.store_sales est. ? rows
               │                                                  │     │           Outputs: ss_customer_sk_8:=ss_customer_sk, ss_quantity_8:=ss_quantity, ss_sales_price_8:=ss_sales_price, ss_sold_date_sk_8:=ss_sold_date_sk
               │                                                  │     └─ Repartition Exchange est. ? rows
               │                                                  │        │     Partition by: {c_customer_sk_6}
               │                                                  │        └─ TableScan tpcds.customer est. ? rows
               │                                                  │                 Outputs: c_customer_sk_6:=c_customer_sk
               │                                                  └─ Repartition Exchange est. ? rows
               │                                                     │     Partition by: {d_date_sk_8}
               │                                                     └─ Filter est. ? rows
               │                                                        │     Condition: d_year_8 IN (2000, 2001, 2002, 2003)
               │                                                        └─ TableScan tpcds.date_dim est. ? rows
               │                                                                 Outputs: d_date_sk_8:=d_date_sk, d_year_8:=d_year
               └─ MergingAggregated est. ? rows
                  └─ Repartition Exchange est. ? rows
                     │     Partition by: {c_first_name_7, c_last_name_7}
                     └─ Aggregating est. ? rows
                        │     Group by: {c_first_name_7, c_last_name_7}
                        │     Aggregates: expr#sum(multiply(ws_quantity, ws_list_price)):=AggNull(sum)(expr#multiply(ws_quantity, ws_list_price)_1)
                        └─ Projection est. ? rows
                           │     Expressions: [c_first_name_7, c_last_name_7], expr#multiply(ws_quantity, ws_list_price)_1:=ws_quantity_1 * ws_list_price_1
                           └─ Inner Join est. ? rows
                              │     Condition: c_customer_sk_7 == c_customer_sk_8
                              ├─ Repartition Exchange est. ? rows
                              │  │     Partition by: {c_customer_sk_7}
                              │  └─ Inner Join est. ? rows
                              │     │     Condition: ws_item_sk_1 == i_item_sk_3
                              │     ├─ Repartition Exchange est. ? rows
                              │     │  │     Partition by: {ws_item_sk_1}
                              │     │  └─ Inner Join est. ? rows
                              │     │     │     Condition: ws_sold_date_sk_1 == d_date_sk_9
                              │     │     ├─ Repartition Exchange est. ? rows
                              │     │     │  │     Partition by: {ws_sold_date_sk_1}
                              │     │     │  └─ Inner Join est. ? rows
                              │     │     │     │     Condition: ws_bill_customer_sk_1 == c_customer_sk_7
                              │     │     │     ├─ Repartition Exchange est. ? rows
                              │     │     │     │  │     Partition by: {ws_bill_customer_sk_1}
                              │     │     │     │  └─ Filter est. ? rows
                              │     │     │     │     │     Condition: isNotNull(ws_item_sk_1) AND isNotNull(ws_bill_customer_sk_1)
                              │     │     │     │     └─ TableScan tpcds.web_sales est. ? rows
                              │     │     │     │              Outputs: ws_bill_customer_sk_1:=ws_bill_customer_sk, ws_item_sk_1:=ws_item_sk, ws_list_price_1:=ws_list_price, ws_quantity_1:=ws_quantity, ws_sold_date_sk_1:=ws_sold_date_sk
                              │     │     │     └─ Repartition Exchange est. ? rows
                              │     │     │        │     Partition by: {c_customer_sk_7}
                              │     │     │        └─ Filter est. ? rows
                              │     │     │           │     Condition: isNotNull(c_customer_sk_7)
                              │     │     │           └─ TableScan tpcds.customer est. ? rows
                              │     │     │                    Outputs: c_customer_sk_7:=c_customer_sk, c_first_name_7:=c_first_name, c_last_name_7:=c_last_name
                              │     │     └─ Repartition Exchange est. ? rows
                              │     │        │     Partition by: {d_date_sk_9}
                              │     │        └─ Filter est. ? rows
                              │     │           │     Condition: (d_moy_9 = 2) AND (d_year_9 = 2000)
                              │     │           └─ TableScan tpcds.date_dim est. ? rows
                              │     │                    Outputs: d_date_sk_9:=d_date_sk, d_moy_9:=d_moy, d_year_9:=d_year
                              │     └─ MergingAggregated est. ? rows
                              │        └─ Repartition Exchange est. ? rows
                              │           │     Partition by: {i_item_sk_3}
                              │           └─ Aggregating est. ? rows
                              │              │     Group by: {i_item_sk_3}
                              │              └─ Projection est. ? rows
                              │                 │     Expressions: [i_item_sk_3]
                              │                 └─ Filter est. ? rows
                              │                    │     Condition: `expr#count()_3` > 4
                              │                    └─ MergingAggregated est. ? rows
                              │                       └─ Repartition Exchange est. ? rows
                              │                          │     Partition by: {d_date_10, expr#substring(i_item_desc, 1, 30)_3, i_item_sk_3}
                              │                          └─ Aggregating est. ? rows
                              │                             │     Group by: {d_date_10, expr#substring(i_item_desc, 1, 30)_3, i_item_sk_3}
                              │                             │     Aggregates: expr#count()_3:=AggNull(count)()
                              │                             └─ Projection est. ? rows
                              │                                │     Expressions: [d_date_10, i_item_sk_3], expr#substring(i_item_desc, 1, 30)_3:=substring(i_item_desc_3, 1, 30)
                              │                                └─ Inner Join est. ? rows
                              │                                   │     Condition: ss_item_sk_9 == i_item_sk_3
                              │                                   ├─ Repartition Exchange est. ? rows
                              │                                   │  │     Partition by: {ss_item_sk_9}
                              │                                   │  └─ Inner Join est. ? rows
                              │                                   │     │     Condition: ss_sold_date_sk_9 == d_date_sk_10
                              │                                   │     ├─ Repartition Exchange est. ? rows
                              │                                   │     │  │     Partition by: {ss_sold_date_sk_9}
                              │                                   │     │  └─ Filter est. ? rows
                              │                                   │     │     │     Condition: isNotNull(ss_item_sk_9)
                              │                                   │     │     └─ TableScan tpcds.store_sales est. ? rows
                              │                                   │     │              Outputs: ss_item_sk_9:=ss_item_sk, ss_sold_date_sk_9:=ss_sold_date_sk
                              │                                   │     └─ Repartition Exchange est. ? rows
                              │                                   │        │     Partition by: {d_date_sk_10}
                              │                                   │        └─ Filter est. ? rows
                              │                                   │           │     Condition: d_year_10 IN (2000, 2001, 2002, 2003)
                              │                                   │           └─ TableScan tpcds.date_dim est. ? rows
                              │                                   │                    Outputs: d_date_10:=d_date, d_date_sk_10:=d_date_sk, d_year_10:=d_year
                              │                                   └─ Repartition Exchange est. ? rows
                              │                                      │     Partition by: {i_item_sk_3}
                              │                                      └─ Filter est. ? rows
                              │                                         │     Condition: isNotNull(i_item_sk_3)
                              │                                         └─ TableScan tpcds.item est. ? rows
                              │                                                  Outputs: i_item_desc_3:=i_item_desc, i_item_sk_3:=i_item_sk
                              └─ Aggregating est. ? rows
                                 │     Group by: {c_customer_sk_8}
                                 └─ Inner Join est. ? rows
                                    │     Condition: 
                                    │     Filter: `expr#sum(multiply(ss_quantity, ss_sales_price))_6` > ('0.500000' * `expr#max(csales)_3`)
                                    ├─ MergingAggregated est. ? rows
                                    │  └─ Repartition Exchange est. ? rows
                                    │     │     Partition by: {c_customer_sk_8}
                                    │     └─ Aggregating est. ? rows
                                    │        │     Group by: {c_customer_sk_8}
                                    │        │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_6:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_6)
                                    │        └─ Projection est. ? rows
                                    │           │     Expressions: [c_customer_sk_8], expr#multiply(ss_quantity, ss_sales_price)_6:=ss_quantity_10 * ss_sales_price_10
                                    │           └─ Inner Join est. ? rows
                                    │              │     Condition: ss_customer_sk_10 == c_customer_sk_8
                                    │              ├─ Repartition Exchange est. ? rows
                                    │              │  │     Partition by: {ss_customer_sk_10}
                                    │              │  └─ Filter est. ? rows
                                    │              │     │     Condition: isNotNull(ss_customer_sk_10)
                                    │              │     └─ TableScan tpcds.store_sales est. ? rows
                                    │              │              Outputs: ss_customer_sk_10:=ss_customer_sk, ss_quantity_10:=ss_quantity, ss_sales_price_10:=ss_sales_price
                                    │              └─ Repartition Exchange est. ? rows
                                    │                 │     Partition by: {c_customer_sk_8}
                                    │                 └─ Filter est. ? rows
                                    │                    │     Condition: isNotNull(c_customer_sk_8)
                                    │                    └─ TableScan tpcds.customer est. ? rows
                                    │                             Outputs: c_customer_sk_8:=c_customer_sk
                                    └─ Broadcast Exchange est. ? rows
                                       └─ MergingAggregated est. ? rows
                                          └─ Gather Exchange est. ? rows
                                             └─ Aggregating est. ? rows
                                                │     Group by: {}
                                                │     Aggregates: expr#max(csales)_3:=AggNull(max)(expr#sum(multiply(ss_quantity, ss_sales_price))_7)
                                                └─ Projection est. ? rows
                                                   │     Expressions: [expr#sum(multiply(ss_quantity, ss_sales_price))_7]
                                                   └─ MergingAggregated est. ? rows
                                                      └─ Repartition Exchange est. ? rows
                                                         │     Partition by: {c_customer_sk_9}
                                                         └─ Aggregating est. ? rows
                                                            │     Group by: {c_customer_sk_9}
                                                            │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_7:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_7)
                                                            └─ Projection est. ? rows
                                                               │     Expressions: [c_customer_sk_9], expr#multiply(ss_quantity, ss_sales_price)_7:=ss_quantity_11 * ss_sales_price_11
                                                               └─ Inner Join est. ? rows
                                                                  │     Condition: ss_sold_date_sk_11 == d_date_sk_11
                                                                  ├─ Repartition Exchange est. ? rows
                                                                  │  │     Partition by: {ss_sold_date_sk_11}
                                                                  │  └─ Inner Join est. ? rows
                                                                  │     │     Condition: ss_customer_sk_11 == c_customer_sk_9
                                                                  │     ├─ Repartition Exchange est. ? rows
                                                                  │     │  │     Partition by: {ss_customer_sk_11}
                                                                  │     │  └─ TableScan tpcds.store_sales est. ? rows
                                                                  │     │           Outputs: ss_customer_sk_11:=ss_customer_sk, ss_quantity_11:=ss_quantity, ss_sales_price_11:=ss_sales_price, ss_sold_date_sk_11:=ss_sold_date_sk
                                                                  │     └─ Repartition Exchange est. ? rows
                                                                  │        │     Partition by: {c_customer_sk_9}
                                                                  │        └─ TableScan tpcds.customer est. ? rows
                                                                  │                 Outputs: c_customer_sk_9:=c_customer_sk
                                                                  └─ Repartition Exchange est. ? rows
                                                                     │     Partition by: {d_date_sk_11}
                                                                     └─ Filter est. ? rows
                                                                        │     Condition: d_year_11 IN (2000, 2001, 2002, 2003)
                                                                        └─ TableScan tpcds.date_dim est. ? rows
                                                                                 Outputs: d_date_sk_11:=d_date_sk, d_year_11:=d_year
