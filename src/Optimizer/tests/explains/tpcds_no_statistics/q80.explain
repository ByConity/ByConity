Projection Est. 100 rows
│     Expressions: channel:=`expr#'store channel'_1`, id:=`expr#concat('store', store_id)_1`, profit:=`expr#sum(profit)`, returns:=`expr#sum(returns)`, sales:=`expr#sum(sales)`
└─ Limit Est. 100 rows
   │     Limit: 100
   └─ Sorting Est. 100 rows
      │     Order by: {expr#'store channel'_1 asc, expr#concat('store', store_id)_1 asc}
      │     Limit: 100
      └─ Gather Exchange Est. ? rows
         └─ Sorting Est. 100 rows
            │     Order by: {expr#'store channel'_1 asc, expr#concat('store', store_id)_1 asc}
            │     Limit: 100
            └─ MergingAggregated Est. ? rows
               └─ Repartition Exchange Est. ? rows
                  │     Partition by: {__grouping_set, expr#'store channel'_1, expr#concat('store', store_id)_1}
                  └─ Union Est. ? rows
                     ├─ Aggregating Est. ? rows
                     │  │     Group by: {expr#'store channel', expr#concat('store', store_id)}
                     │  │     Aggregates: expr#sum(sales):=AggNull(sum)(expr#sum(ss_ext_sales_price)), expr#sum(returns):=AggNull(sum)(expr#sum(coalesce(sr_return_amt, 0))), expr#sum(profit):=AggNull(sum)(expr#sum(minus(ss_net_profit, coalesce(sr_net_loss, 0))))
                     │  └─ Projection Est. ? rows
                     │     │     Expressions: [expr#sum(coalesce(sr_return_amt, 0)), expr#sum(minus(ss_net_profit, coalesce(sr_net_loss, 0))), expr#sum(ss_ext_sales_price)], expr#'store channel':='store channel', expr#concat('store', store_id):=concat('store', s_store_id)
                     │     └─ MergingAggregated Est. ? rows
                     │        └─ Repartition Exchange Est. ? rows
                     │           │     Partition by: {s_store_id}
                     │           └─ Aggregating Est. ? rows
                     │              │     Group by: {s_store_id}
                     │              │     Aggregates: expr#sum(ss_ext_sales_price):=AggNull(sum)(ss_ext_sales_price), expr#sum(coalesce(sr_return_amt, 0)):=AggNull(sum)(expr#coalesce(sr_return_amt, 0)), expr#sum(minus(ss_net_profit, coalesce(sr_net_loss, 0))):=AggNull(sum)(expr#minus(ss_net_profit, coalesce(sr_net_loss, 0)))
                     │              └─ Projection Est. ? rows
                     │                 │     Expressions: [s_store_id, ss_ext_sales_price], expr#coalesce(sr_return_amt, 0):=coalesce(sr_return_amt, 0), expr#minus(ss_net_profit, coalesce(sr_net_loss, 0)):=ss_net_profit - coalesce(sr_net_loss, 0)
                     │                 └─ Inner Join Est. ? rows
                     │                    │     Condition: ss_promo_sk == p_promo_sk
                     │                    ├─ Repartition Exchange Est. ? rows
                     │                    │  │     Partition by: {ss_promo_sk}
                     │                    │  └─ Inner Join Est. ? rows
                     │                    │     │     Condition: ss_item_sk == i_item_sk
                     │                    │     ├─ Repartition Exchange Est. ? rows
                     │                    │     │  │     Partition by: {ss_item_sk}
                     │                    │     │  └─ Inner Join Est. ? rows
                     │                    │     │     │     Condition: ss_store_sk == s_store_sk
                     │                    │     │     ├─ Repartition Exchange Est. ? rows
                     │                    │     │     │  │     Partition by: {ss_store_sk}
                     │                    │     │     │  └─ Inner Join Est. ? rows
                     │                    │     │     │     │     Condition: ss_sold_date_sk == d_date_sk
                     │                    │     │     │     ├─ Repartition Exchange Est. ? rows
                     │                    │     │     │     │  │     Partition by: {ss_sold_date_sk}
                     │                    │     │     │     │  └─ Left Join Est. ? rows
                     │                    │     │     │     │     │     Condition: ss_item_sk == sr_item_sk, ss_ticket_number == sr_ticket_number
                     │                    │     │     │     │     ├─ Repartition Exchange Est. ? rows
                     │                    │     │     │     │     │  │     Partition by: {ss_item_sk, ss_ticket_number}
                     │                    │     │     │     │     │  └─ TableScan tpcds.store_sales Est. ? rows
                     │                    │     │     │     │     │           Outputs: [ss_ext_sales_price, ss_item_sk, ss_net_profit, ss_promo_sk, ss_sold_date_sk, ss_store_sk, ss_ticket_number]
                     │                    │     │     │     │     └─ Repartition Exchange Est. ? rows
                     │                    │     │     │     │        │     Partition by: {sr_item_sk, sr_ticket_number}
                     │                    │     │     │     │        └─ TableScan tpcds.store_returns Est. ? rows
                     │                    │     │     │     │                 Outputs: [sr_item_sk, sr_net_loss, sr_return_amt, sr_ticket_number]
                     │                    │     │     │     └─ Repartition Exchange Est. ? rows
                     │                    │     │     │        │     Partition by: {d_date_sk}
                     │                    │     │     │        └─ Filter Est. ? rows
                     │                    │     │     │           │     Condition: (d_date >= cast(11192, 'Date')) AND (d_date <= cast(11222, 'Date'))
                     │                    │     │     │           └─ TableScan tpcds.date_dim Est. ? rows
                     │                    │     │     │                    Condition : (d_date >= cast(11192, 'Date')) AND (d_date <= cast(11222, 'Date')).
                     │                    │     │     │                    Outputs: [d_date, d_date_sk]
                     │                    │     │     └─ Repartition Exchange Est. ? rows
                     │                    │     │        │     Partition by: {s_store_sk}
                     │                    │     │        └─ TableScan tpcds.store Est. ? rows
                     │                    │     │                 Outputs: [s_store_id, s_store_sk]
                     │                    │     └─ Repartition Exchange Est. ? rows
                     │                    │        │     Partition by: {i_item_sk}
                     │                    │        └─ Filter Est. ? rows
                     │                    │           │     Condition: i_current_price > 50.
                     │                    │           └─ TableScan tpcds.item Est. ? rows
                     │                    │                    Condition : i_current_price > 50..
                     │                    │                    Outputs: [i_current_price, i_item_sk]
                     │                    └─ Repartition Exchange Est. ? rows
                     │                       │     Partition by: {p_promo_sk}
                     │                       └─ Filter Est. ? rows
                     │                          │     Condition: p_channel_tv = 'N'
                     │                          └─ TableScan tpcds.promotion Est. ? rows
                     │                                   Condition : p_channel_tv = 'N'.
                     │                                   Outputs: [p_channel_tv, p_promo_sk]
                     ├─ Aggregating Est. ? rows
                     │  │     Group by: {expr#'catalog channel', expr#concat('catalog_page', catalog_page_id)}
                     │  │     Aggregates: expr#sum(sales):=AggNull(sum)(expr#sum(cs_ext_sales_price)), expr#sum(returns):=AggNull(sum)(expr#sum(coalesce(cr_return_amount, 0))), expr#sum(profit):=AggNull(sum)(expr#sum(minus(cs_net_profit, coalesce(cr_net_loss, 0))))
                     │  └─ Projection Est. ? rows
                     │     │     Expressions: [expr#sum(coalesce(cr_return_amount, 0)), expr#sum(cs_ext_sales_price), expr#sum(minus(cs_net_profit, coalesce(cr_net_loss, 0)))], expr#'catalog channel':='catalog channel', expr#concat('catalog_page', catalog_page_id):=concat('catalog_page', cp_catalog_page_id)
                     │     └─ MergingAggregated Est. ? rows
                     │        └─ Repartition Exchange Est. ? rows
                     │           │     Partition by: {cp_catalog_page_id}
                     │           └─ Aggregating Est. ? rows
                     │              │     Group by: {cp_catalog_page_id}
                     │              │     Aggregates: expr#sum(cs_ext_sales_price):=AggNull(sum)(cs_ext_sales_price), expr#sum(coalesce(cr_return_amount, 0)):=AggNull(sum)(expr#coalesce(cr_return_amount, 0)), expr#sum(minus(cs_net_profit, coalesce(cr_net_loss, 0))):=AggNull(sum)(expr#minus(cs_net_profit, coalesce(cr_net_loss, 0)))
                     │              └─ Projection Est. ? rows
                     │                 │     Expressions: [cp_catalog_page_id, cs_ext_sales_price], expr#coalesce(cr_return_amount, 0):=coalesce(cr_return_amount, 0), expr#minus(cs_net_profit, coalesce(cr_net_loss, 0)):=cs_net_profit - coalesce(cr_net_loss, 0)
                     │                 └─ Inner Join Est. ? rows
                     │                    │     Condition: cs_promo_sk == p_promo_sk_1
                     │                    ├─ Repartition Exchange Est. ? rows
                     │                    │  │     Partition by: {cs_promo_sk}
                     │                    │  └─ Inner Join Est. ? rows
                     │                    │     │     Condition: cs_item_sk == i_item_sk_1
                     │                    │     ├─ Repartition Exchange Est. ? rows
                     │                    │     │  │     Partition by: {cs_item_sk}
                     │                    │     │  └─ Inner Join Est. ? rows
                     │                    │     │     │     Condition: cs_catalog_page_sk == cp_catalog_page_sk
                     │                    │     │     ├─ Repartition Exchange Est. ? rows
                     │                    │     │     │  │     Partition by: {cs_catalog_page_sk}
                     │                    │     │     │  └─ Inner Join Est. ? rows
                     │                    │     │     │     │     Condition: cs_sold_date_sk == d_date_sk_1
                     │                    │     │     │     ├─ Repartition Exchange Est. ? rows
                     │                    │     │     │     │  │     Partition by: {cs_sold_date_sk}
                     │                    │     │     │     │  └─ Left Join Est. ? rows
                     │                    │     │     │     │     │     Condition: cs_item_sk == cr_item_sk, cs_order_number == cr_order_number
                     │                    │     │     │     │     ├─ Repartition Exchange Est. ? rows
                     │                    │     │     │     │     │  │     Partition by: {cs_item_sk, cs_order_number}
                     │                    │     │     │     │     │  └─ TableScan tpcds.catalog_sales Est. ? rows
                     │                    │     │     │     │     │           Outputs: [cs_catalog_page_sk, cs_ext_sales_price, cs_item_sk, cs_net_profit, cs_order_number, cs_promo_sk, cs_sold_date_sk]
                     │                    │     │     │     │     └─ Repartition Exchange Est. ? rows
                     │                    │     │     │     │        │     Partition by: {cr_item_sk, cr_order_number}
                     │                    │     │     │     │        └─ TableScan tpcds.catalog_returns Est. ? rows
                     │                    │     │     │     │                 Outputs: [cr_item_sk, cr_net_loss, cr_order_number, cr_return_amount]
                     │                    │     │     │     └─ Repartition Exchange Est. ? rows
                     │                    │     │     │        │     Partition by: {d_date_sk_1}
                     │                    │     │     │        └─ Filter Est. ? rows
                     │                    │     │     │           │     Condition: (d_date_1 >= cast(11192, 'Date')) AND (d_date_1 <= cast(11222, 'Date'))
                     │                    │     │     │           └─ TableScan tpcds.date_dim Est. ? rows
                     │                    │     │     │                    Condition : (d_date >= cast(11192, 'Date')) AND (d_date <= cast(11222, 'Date')).
                     │                    │     │     │                    Outputs: d_date_1:=d_date, d_date_sk_1:=d_date_sk
                     │                    │     │     └─ Repartition Exchange Est. ? rows
                     │                    │     │        │     Partition by: {cp_catalog_page_sk}
                     │                    │     │        └─ TableScan tpcds.catalog_page Est. ? rows
                     │                    │     │                 Outputs: [cp_catalog_page_id, cp_catalog_page_sk]
                     │                    │     └─ Repartition Exchange Est. ? rows
                     │                    │        │     Partition by: {i_item_sk_1}
                     │                    │        └─ Filter Est. ? rows
                     │                    │           │     Condition: i_current_price_1 > 50.
                     │                    │           └─ TableScan tpcds.item Est. ? rows
                     │                    │                    Condition : i_current_price > 50..
                     │                    │                    Outputs: i_current_price_1:=i_current_price, i_item_sk_1:=i_item_sk
                     │                    └─ Repartition Exchange Est. ? rows
                     │                       │     Partition by: {p_promo_sk_1}
                     │                       └─ Filter Est. ? rows
                     │                          │     Condition: p_channel_tv_1 = 'N'
                     │                          └─ TableScan tpcds.promotion Est. ? rows
                     │                                   Condition : p_channel_tv = 'N'.
                     │                                   Outputs: p_channel_tv_1:=p_channel_tv, p_promo_sk_1:=p_promo_sk
                     └─ Aggregating Est. ? rows
                        │     Group by: {expr#'web channel', expr#concat('web_site', web_site_id)}
                        │     Aggregates: expr#sum(sales):=AggNull(sum)(expr#sum(ws_ext_sales_price)), expr#sum(returns):=AggNull(sum)(expr#sum(coalesce(wr_return_amt, 0))), expr#sum(profit):=AggNull(sum)(expr#sum(minus(ws_net_profit, coalesce(wr_net_loss, 0))))
                        └─ Projection Est. ? rows
                           │     Expressions: [expr#sum(coalesce(wr_return_amt, 0)), expr#sum(minus(ws_net_profit, coalesce(wr_net_loss, 0))), expr#sum(ws_ext_sales_price)], expr#'web channel':='web channel', expr#concat('web_site', web_site_id):=concat('web_site', web_site_id)
                           └─ MergingAggregated Est. ? rows
                              └─ Repartition Exchange Est. ? rows
                                 │     Partition by: {web_site_id}
                                 └─ Aggregating Est. ? rows
                                    │     Group by: {web_site_id}
                                    │     Aggregates: expr#sum(ws_ext_sales_price):=AggNull(sum)(ws_ext_sales_price), expr#sum(coalesce(wr_return_amt, 0)):=AggNull(sum)(expr#coalesce(wr_return_amt, 0)), expr#sum(minus(ws_net_profit, coalesce(wr_net_loss, 0))):=AggNull(sum)(expr#minus(ws_net_profit, coalesce(wr_net_loss, 0)))
                                    └─ Projection Est. ? rows
                                       │     Expressions: [web_site_id, ws_ext_sales_price], expr#coalesce(wr_return_amt, 0):=coalesce(wr_return_amt, 0), expr#minus(ws_net_profit, coalesce(wr_net_loss, 0)):=ws_net_profit - coalesce(wr_net_loss, 0)
                                       └─ Inner Join Est. ? rows
                                          │     Condition: ws_promo_sk == p_promo_sk_2
                                          ├─ Repartition Exchange Est. ? rows
                                          │  │     Partition by: {ws_promo_sk}
                                          │  └─ Inner Join Est. ? rows
                                          │     │     Condition: ws_item_sk == i_item_sk_2
                                          │     ├─ Repartition Exchange Est. ? rows
                                          │     │  │     Partition by: {ws_item_sk}
                                          │     │  └─ Inner Join Est. ? rows
                                          │     │     │     Condition: ws_web_site_sk == web_site_sk
                                          │     │     ├─ Repartition Exchange Est. ? rows
                                          │     │     │  │     Partition by: {ws_web_site_sk}
                                          │     │     │  └─ Inner Join Est. ? rows
                                          │     │     │     │     Condition: ws_sold_date_sk == d_date_sk_2
                                          │     │     │     ├─ Repartition Exchange Est. ? rows
                                          │     │     │     │  │     Partition by: {ws_sold_date_sk}
                                          │     │     │     │  └─ Left Join Est. ? rows
                                          │     │     │     │     │     Condition: ws_item_sk == wr_item_sk, ws_order_number == wr_order_number
                                          │     │     │     │     ├─ Repartition Exchange Est. ? rows
                                          │     │     │     │     │  │     Partition by: {ws_item_sk, ws_order_number}
                                          │     │     │     │     │  └─ TableScan tpcds.web_sales Est. ? rows
                                          │     │     │     │     │           Outputs: [ws_ext_sales_price, ws_item_sk, ws_net_profit, ws_order_number, ws_promo_sk, ws_sold_date_sk, ws_web_site_sk]
                                          │     │     │     │     └─ Repartition Exchange Est. ? rows
                                          │     │     │     │        │     Partition by: {wr_item_sk, wr_order_number}
                                          │     │     │     │        └─ TableScan tpcds.web_returns Est. ? rows
                                          │     │     │     │                 Outputs: [wr_item_sk, wr_net_loss, wr_order_number, wr_return_amt]
                                          │     │     │     └─ Repartition Exchange Est. ? rows
                                          │     │     │        │     Partition by: {d_date_sk_2}
                                          │     │     │        └─ Filter Est. ? rows
                                          │     │     │           │     Condition: (d_date_2 >= cast(11192, 'Date')) AND (d_date_2 <= cast(11222, 'Date'))
                                          │     │     │           └─ TableScan tpcds.date_dim Est. ? rows
                                          │     │     │                    Condition : (d_date >= cast(11192, 'Date')) AND (d_date <= cast(11222, 'Date')).
                                          │     │     │                    Outputs: d_date_2:=d_date, d_date_sk_2:=d_date_sk
                                          │     │     └─ Repartition Exchange Est. ? rows
                                          │     │        │     Partition by: {web_site_sk}
                                          │     │        └─ TableScan tpcds.web_site Est. ? rows
                                          │     │                 Outputs: [web_site_id, web_site_sk]
                                          │     └─ Repartition Exchange Est. ? rows
                                          │        │     Partition by: {i_item_sk_2}
                                          │        └─ Filter Est. ? rows
                                          │           │     Condition: i_current_price_2 > 50.
                                          │           └─ TableScan tpcds.item Est. ? rows
                                          │                    Condition : i_current_price > 50..
                                          │                    Outputs: i_current_price_2:=i_current_price, i_item_sk_2:=i_item_sk
                                          └─ Repartition Exchange Est. ? rows
                                             │     Partition by: {p_promo_sk_2}
                                             └─ Filter Est. ? rows
                                                │     Condition: p_channel_tv_2 = 'N'
                                                └─ TableScan tpcds.promotion Est. ? rows
                                                         Condition : p_channel_tv = 'N'.
                                                         Outputs: p_channel_tv_2:=p_channel_tv, p_promo_sk_2:=p_promo_sk
