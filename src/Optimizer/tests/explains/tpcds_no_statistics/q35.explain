Projection est. 100 rows
│     Expressions: [ca_state, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_gender, cd_marital_status], avg(cd_dep_college_count):=`expr#avg(cd_dep_college_count)`, avg(cd_dep_count):=`expr#avg(cd_dep_count)`, avg(cd_dep_employed_count):=`expr#avg(cd_dep_employed_count)`, cnt1:=`expr#count()`, cnt2:=`expr#count()`, cnt3:=`expr#count()`, max(cd_dep_college_count):=`expr#max(cd_dep_college_count)`, max(cd_dep_count):=`expr#max(cd_dep_count)`, max(cd_dep_employed_count):=`expr#max(cd_dep_employed_count)`, min(cd_dep_college_count):=`expr#min(cd_dep_college_count)`, min(cd_dep_count):=`expr#min(cd_dep_count)`, min(cd_dep_employed_count):=`expr#min(cd_dep_employed_count)`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. ? rows
      │     Order by: {ca_state asc, cd_gender asc, cd_marital_status asc, cd_dep_count asc, cd_dep_employed_count asc, cd_dep_college_count asc}
      │     Limit: 100
      └─ Gather Exchange est. ? rows
         └─ Sorting est. ? rows
            │     Order by: {ca_state asc, cd_gender asc, cd_marital_status asc, cd_dep_count asc, cd_dep_employed_count asc, cd_dep_college_count asc}
            │     Limit: 100
            └─ MergingAggregated est. ? rows
               └─ Repartition Exchange est. ? rows
                  │     Partition by: {ca_state, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_gender, cd_marital_status}
                  └─ Aggregating est. ? rows
                     │     Group by: {ca_state, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_gender, cd_marital_status}
                     │     Aggregates: expr#count():=AggNull(count)(), expr#min(cd_dep_count):=AggNull(min)(cd_dep_count), expr#max(cd_dep_count):=AggNull(max)(cd_dep_count), expr#avg(cd_dep_count):=AggNull(avg)(cd_dep_count), expr#min(cd_dep_employed_count):=AggNull(min)(cd_dep_employed_count), expr#max(cd_dep_employed_count):=AggNull(max)(cd_dep_employed_count), expr#avg(cd_dep_employed_count):=AggNull(avg)(cd_dep_employed_count), expr#min(cd_dep_college_count):=AggNull(min)(cd_dep_college_count), expr#max(cd_dep_college_count):=AggNull(max)(cd_dep_college_count), expr#avg(cd_dep_college_count):=AggNull(avg)(cd_dep_college_count)
                     └─ Projection est. ? rows
                        │     Expressions: [ca_state, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_gender, cd_marital_status]
                        └─ Filter est. ? rows
                           │     Condition: cast(coalesce(build_side_non_null_symbol_2, 0), 'UInt8') OR _exists_subquery_1
                           └─ Left Join est. ? rows
                              │     Condition: c_customer_sk == cs_ship_customer_sk
                              ├─ Projection est. ? rows
                              │  │     Expressions: [c_customer_sk, ca_state, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_gender, cd_marital_status], _exists_subquery_1:=cast(coalesce(build_side_non_null_symbol_1, 0), 'UInt8')
                              │  └─ Left Join est. ? rows
                              │     │     Condition: c_customer_sk == ws_bill_customer_sk
                              │     ├─ Inner Join est. ? rows
                              │     │  │     Condition: c_customer_sk == ss_customer_sk
                              │     │  ├─ Repartition Exchange est. ? rows
                              │     │  │  │     Partition by: {c_customer_sk}
                              │     │  │  └─ Inner Join est. ? rows
                              │     │  │     │     Condition: c_current_cdemo_sk == cd_demo_sk
                              │     │  │     ├─ Repartition Exchange est. ? rows
                              │     │  │     │  │     Partition by: {c_current_cdemo_sk}
                              │     │  │     │  └─ Inner Join est. ? rows
                              │     │  │     │     │     Condition: c_current_addr_sk == ca_address_sk
                              │     │  │     │     ├─ Repartition Exchange est. ? rows
                              │     │  │     │     │  │     Partition by: {c_current_addr_sk}
                              │     │  │     │     │  └─ TableScan tpcds.customer est. ? rows
                              │     │  │     │     │           Outputs: [c_current_addr_sk, c_current_cdemo_sk, c_customer_sk]
                              │     │  │     │     └─ Repartition Exchange est. ? rows
                              │     │  │     │        │     Partition by: {ca_address_sk}
                              │     │  │     │        └─ TableScan tpcds.customer_address est. ? rows
                              │     │  │     │                 Outputs: [ca_address_sk, ca_state]
                              │     │  │     └─ Repartition Exchange est. ? rows
                              │     │  │        │     Partition by: {cd_demo_sk}
                              │     │  │        └─ TableScan tpcds.customer_demographics est. ? rows
                              │     │  │                 Outputs: [cd_demo_sk, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_gender, cd_marital_status]
                              │     │  └─ MergingAggregated est. ? rows
                              │     │     └─ Repartition Exchange est. ? rows
                              │     │        │     Partition by: {ss_customer_sk}
                              │     │        └─ Aggregating est. ? rows
                              │     │           │     Group by: {ss_customer_sk}
                              │     │           └─ Inner Join est. ? rows
                              │     │              │     Condition: ss_sold_date_sk == d_date_sk
                              │     │              ├─ Repartition Exchange est. ? rows
                              │     │              │  │     Partition by: {ss_sold_date_sk}
                              │     │              │  └─ TableScan tpcds.store_sales est. ? rows
                              │     │              │           Outputs: [ss_customer_sk, ss_sold_date_sk]
                              │     │              └─ Repartition Exchange est. ? rows
                              │     │                 │     Partition by: {d_date_sk}
                              │     │                 └─ Filter est. ? rows
                              │     │                    │     Condition: (d_qoy < 4) AND (d_year = 2002)
                              │     │                    └─ TableScan tpcds.date_dim est. ? rows
                              │     │                             Outputs: [d_date_sk, d_qoy, d_year]
                              │     └─ Projection est. ? rows
                              │        │     Expressions: [ws_bill_customer_sk], build_side_non_null_symbol_1:=1
                              │        └─ MergingAggregated est. ? rows
                              │           └─ Repartition Exchange est. ? rows
                              │              │     Partition by: {ws_bill_customer_sk}
                              │              └─ Aggregating est. ? rows
                              │                 │     Group by: {ws_bill_customer_sk}
                              │                 └─ Inner Join est. ? rows
                              │                    │     Condition: ws_sold_date_sk == d_date_sk_1
                              │                    ├─ Repartition Exchange est. ? rows
                              │                    │  │     Partition by: {ws_sold_date_sk}
                              │                    │  └─ TableScan tpcds.web_sales est. ? rows
                              │                    │           Outputs: [ws_bill_customer_sk, ws_sold_date_sk]
                              │                    └─ Repartition Exchange est. ? rows
                              │                       │     Partition by: {d_date_sk_1}
                              │                       └─ Filter est. ? rows
                              │                          │     Condition: (d_year_1 = 2002) AND (d_qoy_1 < 4)
                              │                          └─ TableScan tpcds.date_dim est. ? rows
                              │                                   Outputs: d_date_sk_1:=d_date_sk, d_qoy_1:=d_qoy, d_year_1:=d_year
                              └─ Projection est. ? rows
                                 │     Expressions: [cs_ship_customer_sk], build_side_non_null_symbol_2:=1
                                 └─ MergingAggregated est. ? rows
                                    └─ Repartition Exchange est. ? rows
                                       │     Partition by: {cs_ship_customer_sk}
                                       └─ Aggregating est. ? rows
                                          │     Group by: {cs_ship_customer_sk}
                                          └─ Inner Join est. ? rows
                                             │     Condition: cs_sold_date_sk == d_date_sk_2
                                             ├─ Repartition Exchange est. ? rows
                                             │  │     Partition by: {cs_sold_date_sk}
                                             │  └─ TableScan tpcds.catalog_sales est. ? rows
                                             │           Outputs: [cs_ship_customer_sk, cs_sold_date_sk]
                                             └─ Repartition Exchange est. ? rows
                                                │     Partition by: {d_date_sk_2}
                                                └─ Filter est. ? rows
                                                   │     Condition: (d_qoy_2 < 4) AND (d_year_2 = 2002)
                                                   └─ TableScan tpcds.date_dim est. ? rows
                                                            Outputs: d_date_sk_2:=d_date_sk, d_qoy_2:=d_qoy, d_year_2:=d_year
