Projection est. 100 rows
│     Expressions: [i_item_id, s_state], agg1:=`expr#avg(ss_quantity)`, agg2:=`expr#avg(ss_list_price)`, agg3:=`expr#avg(ss_coupon_amt)`, agg4:=`expr#avg(ss_sales_price)`, g_state:=`expr#grouping(s_state)`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. ? rows
      │     Order by: {i_item_id asc, s_state asc}
      │     Limit: 100
      └─ Gather Exchange est. ? rows
         └─ Sorting est. ? rows
            │     Order by: {i_item_id asc, s_state asc}
            │     Limit: 100
            └─ MergingAggregated est. ? rows
               └─ Repartition Exchange est. ? rows
                  │     Partition by: {__grouping_set, i_item_id, s_state}
                  └─ Aggregating est. ? rows
                     │     Group by: {i_item_id, s_state}
                     │     Aggregates: expr#avg(ss_quantity):=AggNull(avg)(ss_quantity), expr#avg(ss_list_price):=AggNull(avg)(ss_list_price), expr#avg(ss_coupon_amt):=AggNull(avg)(ss_coupon_amt), expr#avg(ss_sales_price):=AggNull(avg)(ss_sales_price)
                     └─ Inner Join est. ? rows
                        │     Condition: ss_item_sk == i_item_sk
                        ├─ Repartition Exchange est. ? rows
                        │  │     Partition by: {ss_item_sk}
                        │  └─ Inner Join est. ? rows
                        │     │     Condition: ss_store_sk == s_store_sk
                        │     ├─ Repartition Exchange est. ? rows
                        │     │  │     Partition by: {ss_store_sk}
                        │     │  └─ Inner Join est. ? rows
                        │     │     │     Condition: ss_sold_date_sk == d_date_sk
                        │     │     ├─ Repartition Exchange est. ? rows
                        │     │     │  │     Partition by: {ss_sold_date_sk}
                        │     │     │  └─ Inner Join est. ? rows
                        │     │     │     │     Condition: ss_cdemo_sk == cd_demo_sk
                        │     │     │     ├─ Repartition Exchange est. ? rows
                        │     │     │     │  │     Partition by: {ss_cdemo_sk}
                        │     │     │     │  └─ TableScan tpcds.store_sales est. ? rows
                        │     │     │     │           Outputs: [ss_cdemo_sk, ss_coupon_amt, ss_item_sk, ss_list_price, ss_quantity, ss_sales_price, ss_sold_date_sk, ss_store_sk]
                        │     │     │     └─ Repartition Exchange est. ? rows
                        │     │     │        │     Partition by: {cd_demo_sk}
                        │     │     │        └─ Filter est. ? rows
                        │     │     │           │     Condition: (cd_education_status = 'College') AND (cd_gender = 'M') AND (cd_marital_status = 'S')
                        │     │     │           └─ TableScan tpcds.customer_demographics est. ? rows
                        │     │     │                    Outputs: [cd_demo_sk, cd_education_status, cd_gender, cd_marital_status]
                        │     │     └─ Repartition Exchange est. ? rows
                        │     │        │     Partition by: {d_date_sk}
                        │     │        └─ Filter est. ? rows
                        │     │           │     Condition: d_year = 2002
                        │     │           └─ TableScan tpcds.date_dim est. ? rows
                        │     │                    Outputs: [d_date_sk, d_year]
                        │     └─ Repartition Exchange est. ? rows
                        │        │     Partition by: {s_store_sk}
                        │        └─ Filter est. ? rows
                        │           │     Condition: s_state = 'TN'
                        │           └─ TableScan tpcds.store est. ? rows
                        │                    Outputs: [s_state, s_store_sk]
                        └─ Repartition Exchange est. ? rows
                           │     Partition by: {i_item_sk}
                           └─ TableScan tpcds.item est. ? rows
                                    Outputs: [i_item_id, i_item_sk]
