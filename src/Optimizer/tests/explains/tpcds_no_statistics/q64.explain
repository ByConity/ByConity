Projection Est. ? rows
│     Expressions: b_city:=ca_city_2, b_street_name:=ca_street_name_2, b_street_number:=ca_street_number_2, b_zip:=ca_zip_2, c_city:=ca_city_3, c_street_name:=ca_street_name_3, c_street_number:=ca_street_number_3, c_zip:=ca_zip_3, cnt:=`expr#count()_1`, cnt_1:=`expr#count()_2`, product_name:=i_product_name_1, s11:=`expr#sum(ss_wholesale_cost)_1`, s12:=`expr#sum(ss_wholesale_cost)_2`, s21:=`expr#sum(ss_list_price)_1`, s22:=`expr#sum(ss_list_price)_2`, s31:=`expr#sum(ss_coupon_amt)_1`, s32:=`expr#sum(ss_coupon_amt)_2`, store_name:=s_store_name_1, store_zip:=s_zip_1, syear:=d_year_3, syear_1:=d_year_6
└─ Sorting Est. ? rows
   │     Order by: {i_product_name_1 asc, s_store_name_1 asc, expr#count()_2 asc, expr#sum(ss_wholesale_cost)_1 asc, expr#sum(ss_wholesale_cost)_2 asc}
   └─ Gather Exchange Est. ? rows
      └─ Sorting Est. ? rows
         │     Order by: {i_product_name_1 asc, s_store_name_1 asc, expr#count()_2 asc, expr#sum(ss_wholesale_cost)_1 asc, expr#sum(ss_wholesale_cost)_2 asc}
         └─ Inner Join Est. ? rows
            │     Condition: i_item_sk_1 == i_item_sk_2, s_store_name_1 == s_store_name_2, s_zip_1 == s_zip_2
            │     Filter: `expr#count()_2` <= `expr#count()_1`
            ├─ Repartition Exchange Est. ? rows
            │  │     Partition by: {i_item_sk_1, s_store_name_1, s_zip_1}
            │  └─ Filter Est. ? rows
            │     │     Condition: d_year_3 = 1999
            │     └─ CTERef[0] Est. ? rows
            └─ Repartition Exchange Est. ? rows
               │     Partition by: {i_item_sk_2, s_store_name_2, s_zip_2}
               └─ Filter Est. ? rows
                  │     Condition: d_year_6 = 2000
                  └─ CTERef[0] Est. ? rows
CTEDef [0]
   Projection Est. ? rows
   │     Expressions: [ca_city, ca_city_1, ca_street_name, ca_street_name_1, ca_street_number, ca_street_number_1, ca_zip, ca_zip_1, d_year, expr#count(), expr#sum(ss_coupon_amt), expr#sum(ss_list_price), expr#sum(ss_wholesale_cost), i_item_sk, i_product_name, s_store_name, s_zip]
   └─ Aggregating Est. ? rows
      │     Group by: {ca_city, ca_city_1, ca_street_name, ca_street_name_1, ca_street_number, ca_street_number_1, ca_zip, ca_zip_1, d_year, d_year_1, d_year_2, i_item_sk, i_product_name, s_store_name, s_zip}
      │     Aggregates: expr#count():=AggNull(count)(), expr#sum(ss_wholesale_cost):=AggNull(sum)(ss_wholesale_cost), expr#sum(ss_list_price):=AggNull(sum)(ss_list_price), expr#sum(ss_coupon_amt):=AggNull(sum)(ss_coupon_amt)
      └─ Inner Join Est. ? rows
         │     Condition: cs_item_sk == i_item_sk
         ├─ Repartition Exchange Est. ? rows
         │  │     Partition by: {cs_item_sk}
         │  └─ Inner Join Est. ? rows
         │     │     Condition: hd_income_band_sk_1 == ib_income_band_sk_1
         │     ├─ Repartition Exchange Est. ? rows
         │     │  │     Partition by: {hd_income_band_sk_1}
         │     │  └─ Inner Join Est. ? rows
         │     │     │     Condition: hd_income_band_sk == ib_income_band_sk
         │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │  │     Partition by: {hd_income_band_sk}
         │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     Condition: c_current_addr_sk == ca_address_sk_1
         │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │  │     Partition by: {c_current_addr_sk}
         │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     Condition: ss_addr_sk == ca_address_sk
         │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │  │     Partition by: {ss_addr_sk}
         │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     Condition: c_current_hdemo_sk == hd_demo_sk_1
         │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │  │     Partition by: {c_current_hdemo_sk}
         │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     Condition: ss_hdemo_sk == hd_demo_sk
         │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │  │     Partition by: {ss_hdemo_sk}
         │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     Condition: ss_promo_sk == p_promo_sk
         │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │  │     Partition by: {ss_promo_sk}
         │     │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     Condition: c_current_cdemo_sk == cd_demo_sk_1
         │     │     │     │     │     │     │     │     │     Filter: cd_marital_status != cd_marital_status_1
         │     │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │  │     Partition by: {c_current_cdemo_sk}
         │     │     │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     │     Condition: ss_cdemo_sk == cd_demo_sk
         │     │     │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │  │     Partition by: {ss_cdemo_sk}
         │     │     │     │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     Condition: c_first_shipto_date_sk == d_date_sk_2
         │     │     │     │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │  │     Partition by: {c_first_shipto_date_sk}
         │     │     │     │     │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     Condition: c_first_sales_date_sk == d_date_sk_1
         │     │     │     │     │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │  │     Partition by: {c_first_sales_date_sk}
         │     │     │     │     │     │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     Condition: ss_customer_sk == c_customer_sk
         │     │     │     │     │     │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │  │     Partition by: {ss_customer_sk}
         │     │     │     │     │     │     │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     Condition: ss_store_sk == s_store_sk
         │     │     │     │     │     │     │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │  │     Partition by: {ss_store_sk}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     Condition: ss_sold_date_sk == d_date_sk
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │  │     Partition by: {ss_sold_date_sk}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     Condition: sr_item_sk == cs_item_sk
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │  │     Partition by: {sr_item_sk}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │  └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     Condition: ss_item_sk == sr_item_sk, ss_ticket_number == sr_ticket_number
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │  │     Partition by: {ss_item_sk, ss_ticket_number}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │  └─ TableScan tpcds.store_sales Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │           Outputs: [ss_addr_sk, ss_cdemo_sk, ss_coupon_amt, ss_customer_sk, ss_hdemo_sk, ss_item_sk, ss_list_price, ss_promo_sk, ss_sold_date_sk, ss_store_sk, ss_ticket_number, ss_wholesale_cost]
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │        │     Partition by: {sr_item_sk, sr_ticket_number}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │        └─ TableScan tpcds.store_returns Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                 Outputs: [sr_item_sk, sr_ticket_number]
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │     └─ Filter Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │        │     Condition: `expr#sum(cs_ext_list_price)` > (2 * `expr#sum(plus(plus(cr_refunded_cash, cr_reversed_charge), cr_store_credit))`)
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │        └─ MergingAggregated Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │           └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │              │     Partition by: {cs_item_sk}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │              └─ Aggregating Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                 │     Group by: {cs_item_sk}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                 │     Aggregates: expr#sum(cs_ext_list_price):=AggNull(sum)(cs_ext_list_price), expr#sum(plus(plus(cr_refunded_cash, cr_reversed_charge), cr_store_credit)):=AggNull(sum)(expr#plus(plus(cr_refunded_cash, cr_reversed_charge), cr_store_credit))
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                 └─ Projection Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                    │     Expressions: [cs_ext_list_price, cs_item_sk], expr#plus(plus(cr_refunded_cash, cr_reversed_charge), cr_store_credit):=(cr_refunded_cash + cr_reversed_charge) + cr_store_credit
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                    └─ Inner Join Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                       │     Condition: cs_item_sk == cr_item_sk, cs_order_number == cr_order_number
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                       ├─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                       │  │     Partition by: {cs_item_sk, cs_order_number}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                       │  └─ TableScan tpcds.catalog_sales Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                       │           Outputs: [cs_ext_list_price, cs_item_sk, cs_order_number]
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                       └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                          │     Partition by: {cr_item_sk, cr_order_number}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                          └─ TableScan tpcds.catalog_returns Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     │                                   Outputs: [cr_item_sk, cr_order_number, cr_refunded_cash, cr_reversed_charge, cr_store_credit]
         │     │     │     │     │     │     │     │     │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │        │     Partition by: {d_date_sk}
         │     │     │     │     │     │     │     │     │     │     │     │     │     │        └─ Filter Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │           │     Condition: d_year IN (1999, 2000)
         │     │     │     │     │     │     │     │     │     │     │     │     │     │           └─ TableScan tpcds.date_dim Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │     │                    Condition : d_year IN (1999, 2000).
         │     │     │     │     │     │     │     │     │     │     │     │     │     │                    Outputs: [d_date_sk, d_year]
         │     │     │     │     │     │     │     │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │        │     Partition by: {s_store_sk}
         │     │     │     │     │     │     │     │     │     │     │     │     │        └─ TableScan tpcds.store Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │     │                 Outputs: [s_store_name, s_store_sk, s_zip]
         │     │     │     │     │     │     │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │        │     Partition by: {c_customer_sk}
         │     │     │     │     │     │     │     │     │     │     │     │        └─ TableScan tpcds.customer Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │     │                 Outputs: [c_current_addr_sk, c_current_cdemo_sk, c_current_hdemo_sk, c_customer_sk, c_first_sales_date_sk, c_first_shipto_date_sk]
         │     │     │     │     │     │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │        │     Partition by: {d_date_sk_1}
         │     │     │     │     │     │     │     │     │     │     │        └─ TableScan tpcds.date_dim Est. ? rows
         │     │     │     │     │     │     │     │     │     │     │                 Outputs: d_date_sk_1:=d_date_sk, d_year_1:=d_year
         │     │     │     │     │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │     │        │     Partition by: {d_date_sk_2}
         │     │     │     │     │     │     │     │     │     │        └─ TableScan tpcds.date_dim Est. ? rows
         │     │     │     │     │     │     │     │     │     │                 Outputs: d_date_sk_2:=d_date_sk, d_year_2:=d_year
         │     │     │     │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │     │        │     Partition by: {cd_demo_sk}
         │     │     │     │     │     │     │     │     │        └─ TableScan tpcds.customer_demographics Est. ? rows
         │     │     │     │     │     │     │     │     │                 Outputs: [cd_demo_sk, cd_marital_status]
         │     │     │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │     │        │     Partition by: {cd_demo_sk_1}
         │     │     │     │     │     │     │     │        └─ TableScan tpcds.customer_demographics Est. ? rows
         │     │     │     │     │     │     │     │                 Outputs: cd_demo_sk_1:=cd_demo_sk, cd_marital_status_1:=cd_marital_status
         │     │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │     │        │     Partition by: {p_promo_sk}
         │     │     │     │     │     │     │        └─ TableScan tpcds.promotion Est. ? rows
         │     │     │     │     │     │     │                 Outputs: [p_promo_sk]
         │     │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │     │        │     Partition by: {hd_demo_sk}
         │     │     │     │     │     │        └─ TableScan tpcds.household_demographics Est. ? rows
         │     │     │     │     │     │                 Outputs: [hd_demo_sk, hd_income_band_sk]
         │     │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │     │        │     Partition by: {hd_demo_sk_1}
         │     │     │     │     │        └─ TableScan tpcds.household_demographics Est. ? rows
         │     │     │     │     │                 Outputs: hd_demo_sk_1:=hd_demo_sk, hd_income_band_sk_1:=hd_income_band_sk
         │     │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │     │        │     Partition by: {ca_address_sk}
         │     │     │     │        └─ TableScan tpcds.customer_address Est. ? rows
         │     │     │     │                 Outputs: [ca_address_sk, ca_city, ca_street_name, ca_street_number, ca_zip]
         │     │     │     └─ Repartition Exchange Est. ? rows
         │     │     │        │     Partition by: {ca_address_sk_1}
         │     │     │        └─ TableScan tpcds.customer_address Est. ? rows
         │     │     │                 Outputs: ca_address_sk_1:=ca_address_sk, ca_city_1:=ca_city, ca_street_name_1:=ca_street_name, ca_street_number_1:=ca_street_number, ca_zip_1:=ca_zip
         │     │     └─ Repartition Exchange Est. ? rows
         │     │        │     Partition by: {ib_income_band_sk}
         │     │        └─ TableScan tpcds.income_band Est. ? rows
         │     │                 Outputs: [ib_income_band_sk]
         │     └─ Repartition Exchange Est. ? rows
         │        │     Partition by: {ib_income_band_sk_1}
         │        └─ TableScan tpcds.income_band Est. ? rows
         │                 Outputs: ib_income_band_sk_1:=ib_income_band_sk
         └─ Repartition Exchange Est. ? rows
            │     Partition by: {i_item_sk}
            └─ Projection Est. ? rows
               │     Expressions: [i_item_sk, i_product_name]
               └─ Filter Est. ? rows
                  │     Condition: (i_color IN ('burlywood', 'floral', 'indian', 'medium', 'purple', 'spring')) AND (i_current_price >= 65.) AND (i_current_price <= 74.)
                  └─ TableScan tpcds.item Est. ? rows
                           Condition : (i_color IN ('burlywood', 'floral', 'indian', 'medium', 'purple', 'spring')) AND (i_current_price >= 65.) AND (i_current_price <= 74.).
                           Outputs: [i_color, i_current_price, i_item_sk, i_product_name]
note: CTE(Common Table Expression) is applied for 2 times.
