Projection Est. 100 rows
│     Expressions: [c_customer_id, c_first_name, c_last_name, c_salutation, ca_city, ca_country, ca_county, ca_gmt_offset, ca_location_type, ca_street_name, ca_street_number, ca_street_type, ca_suite_number, ca_zip], ca_state:=ca_state_2, ctr_total_return:=`expr#sum(cr_return_amt_inc_tax)_1`
└─ Limit Est. 100 rows
   │     Limit: 100
   └─ Sorting Est. 100 rows
      │     Order by: {c_customer_id asc, c_salutation asc, c_first_name asc, c_last_name asc, ca_street_number asc, ca_street_name asc, ca_street_type asc, ca_suite_number asc, ca_city asc, ca_county asc, ca_state_2 asc, ca_zip asc, ca_country asc, ca_gmt_offset asc, ca_location_type asc, expr#sum(cr_return_amt_inc_tax)_1 asc}
      │     Limit: 100
      └─ Gather Exchange Est. ? rows
         └─ Sorting Est. 100 rows
            │     Order by: {c_customer_id asc, c_salutation asc, c_first_name asc, c_last_name asc, ca_street_number asc, ca_street_name asc, ca_street_type asc, ca_suite_number asc, ca_city asc, ca_county asc, ca_state_2 asc, ca_zip asc, ca_country asc, ca_gmt_offset asc, ca_location_type asc, expr#sum(cr_return_amt_inc_tax)_1 asc}
            │     Limit: 100
            └─ Inner Join Est. ? rows
               │     Condition: ca_state_1 == ca_state_3
               │     Filter: `expr#sum(cr_return_amt_inc_tax)_1` > (`expr#avg(ctr_total_return)` * '1.2')
               ├─ Repartition Exchange Est. ? rows
               │  │     Partition by: {ca_state_1}
               │  └─ Inner Join Est. ? rows
               │     │     Condition: c_current_addr_sk == ca_address_sk_1
               │     ├─ Repartition Exchange Est. ? rows
               │     │  │     Partition by: {c_current_addr_sk}
               │     │  └─ Inner Join Est. ? rows
               │     │     │     Condition: cr_returning_customer_sk_1 == c_customer_sk
               │     │     ├─ Repartition Exchange Est. ? rows
               │     │     │  │     Partition by: {cr_returning_customer_sk_1}
               │     │     │  └─ CTERef[0] Est. ? rows
               │     │     └─ Repartition Exchange Est. ? rows
               │     │        │     Partition by: {c_customer_sk}
               │     │        └─ TableScan tpcds.customer Est. ? rows
               │     │                 Outputs: [c_current_addr_sk, c_customer_id, c_customer_sk, c_first_name, c_last_name, c_salutation]
               │     └─ Repartition Exchange Est. ? rows
               │        │     Partition by: {ca_address_sk_1}
               │        └─ Filter Est. ? rows
               │           │     Condition: ca_state_2 = 'GA'
               │           └─ TableScan tpcds.customer_address Est. ? rows
               │                    Condition : ca_state = 'GA'.
               │                    Outputs: [ca_city, ca_country, ca_county, ca_gmt_offset, ca_location_type, ca_street_name, ca_street_number, ca_street_type, ca_suite_number, ca_zip], ca_address_sk_1:=ca_address_sk, ca_state_2:=ca_state
               └─ MergingAggregated Est. ? rows
                  └─ Repartition Exchange Est. ? rows
                     │     Partition by: {ca_state_3}
                     └─ Aggregating Est. ? rows
                        │     Group by: {ca_state_3}
                        │     Aggregates: expr#avg(ctr_total_return):=AggNull(avgIf)(expr#sum(cr_return_amt_inc_tax)_2,build_side_non_null_symbol)
                        └─ Projection Est. ? rows
                           │     Expressions: [ca_state_3, expr#sum(cr_return_amt_inc_tax)_2], build_side_non_null_symbol:=1
                           └─ CTERef[0] Est. ? rows
CTEDef [0]
   MergingAggregated Est. ? rows
   └─ Repartition Exchange Est. ? rows
      │     Partition by: {ca_state, cr_returning_customer_sk}
      └─ Aggregating Est. ? rows
         │     Group by: {ca_state, cr_returning_customer_sk}
         │     Aggregates: expr#sum(cr_return_amt_inc_tax):=AggNull(sum)(cr_return_amt_inc_tax)
         └─ Inner Join Est. ? rows
            │     Condition: cr_returning_addr_sk == ca_address_sk
            ├─ Repartition Exchange Est. ? rows
            │  │     Partition by: {cr_returning_addr_sk}
            │  └─ Inner Join Est. ? rows
            │     │     Condition: cr_returned_date_sk == d_date_sk
            │     ├─ Repartition Exchange Est. ? rows
            │     │  │     Partition by: {cr_returned_date_sk}
            │     │  └─ TableScan tpcds.catalog_returns Est. ? rows
            │     │           Outputs: [cr_return_amt_inc_tax, cr_returned_date_sk, cr_returning_addr_sk, cr_returning_customer_sk]
            │     └─ Repartition Exchange Est. ? rows
            │        │     Partition by: {d_date_sk}
            │        └─ Filter Est. ? rows
            │           │     Condition: d_year = 2000
            │           └─ TableScan tpcds.date_dim Est. ? rows
            │                    Condition : d_year = 2000.
            │                    Outputs: [d_date_sk, d_year]
            └─ Repartition Exchange Est. ? rows
               │     Partition by: {ca_address_sk}
               └─ TableScan tpcds.customer_address Est. ? rows
                        Outputs: [ca_address_sk, ca_state]
note: CTE(Common Table Expression) is applied for 2 times.
