Projection est. 100 rows
│     Expressions: [c_customer_id, c_first_name, c_last_name, c_salutation], ca_city:=ca_city_1, ca_country:=ca_country_1, ca_county:=ca_county_1, ca_gmt_offset:=ca_gmt_offset_1, ca_location_type:=ca_location_type_1, ca_state:=ca_state_1, ca_street_name:=ca_street_name_1, ca_street_number:=ca_street_number_1, ca_street_type:=ca_street_type_1, ca_suite_number:=ca_suite_number_1, ca_zip:=ca_zip_1, ctr_total_return:=`expr#sum(cr_return_amt_inc_tax)`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. ? rows
      │     Order by: {c_customer_id asc, c_salutation asc, c_first_name asc, c_last_name asc, ca_street_number_1 asc, ca_street_name_1 asc, ca_street_type_1 asc, ca_suite_number_1 asc, ca_city_1 asc, ca_county_1 asc, ca_state_1 asc, ca_zip_1 asc, ca_country_1 asc, ca_gmt_offset_1 asc, ca_location_type_1 asc, expr#sum(cr_return_amt_inc_tax) asc}
      └─ Gather Exchange est. ? rows
         └─ Sorting est. ? rows
            │     Order by: {c_customer_id asc, c_salutation asc, c_first_name asc, c_last_name asc, ca_street_number_1 asc, ca_street_name_1 asc, ca_street_type_1 asc, ca_suite_number_1 asc, ca_city_1 asc, ca_county_1 asc, ca_state_1 asc, ca_zip_1 asc, ca_country_1 asc, ca_gmt_offset_1 asc, ca_location_type_1 asc, expr#sum(cr_return_amt_inc_tax) asc}
            └─ Inner Join est. ? rows
               │     Condition: ca_state == ca_state_2
               │     Filter: `expr#sum(cr_return_amt_inc_tax)` > (`expr#avg(ctr_total_return)` * '1.2')
               ├─ Repartition Exchange est. ? rows
               │  │     Partition by: {ca_state}
               │  └─ Inner Join est. ? rows
               │     │     Condition: c_current_addr_sk == ca_address_sk_1
               │     ├─ Repartition Exchange est. ? rows
               │     │  │     Partition by: {c_current_addr_sk}
               │     │  └─ Inner Join est. ? rows
               │     │     │     Condition: cr_returning_customer_sk == c_customer_sk
               │     │     ├─ Repartition Exchange est. ? rows
               │     │     │  │     Partition by: {cr_returning_customer_sk}
               │     │     │  └─ MergingAggregated est. ? rows
               │     │     │     └─ Repartition Exchange est. ? rows
               │     │     │        │     Partition by: {ca_state, cr_returning_customer_sk}
               │     │     │        └─ Aggregating est. ? rows
               │     │     │           │     Group by: {ca_state, cr_returning_customer_sk}
               │     │     │           │     Aggregates: expr#sum(cr_return_amt_inc_tax):=AggNull(sum)(cr_return_amt_inc_tax)
               │     │     │           └─ Inner Join est. ? rows
               │     │     │              │     Condition: cr_returning_addr_sk == ca_address_sk
               │     │     │              ├─ Repartition Exchange est. ? rows
               │     │     │              │  │     Partition by: {cr_returning_addr_sk}
               │     │     │              │  └─ Inner Join est. ? rows
               │     │     │              │     │     Condition: cr_returned_date_sk == d_date_sk
               │     │     │              │     ├─ Repartition Exchange est. ? rows
               │     │     │              │     │  │     Partition by: {cr_returned_date_sk}
               │     │     │              │     │  └─ TableScan tpcds.catalog_returns est. ? rows
               │     │     │              │     │           Outputs: [cr_return_amt_inc_tax, cr_returned_date_sk, cr_returning_addr_sk, cr_returning_customer_sk]
               │     │     │              │     └─ Repartition Exchange est. ? rows
               │     │     │              │        │     Partition by: {d_date_sk}
               │     │     │              │        └─ Filter est. ? rows
               │     │     │              │           │     Condition: d_year = 2000
               │     │     │              │           └─ TableScan tpcds.date_dim est. ? rows
               │     │     │              │                    Outputs: [d_date_sk, d_year]
               │     │     │              └─ Repartition Exchange est. ? rows
               │     │     │                 │     Partition by: {ca_address_sk}
               │     │     │                 └─ TableScan tpcds.customer_address est. ? rows
               │     │     │                          Outputs: [ca_address_sk, ca_state]
               │     │     └─ Repartition Exchange est. ? rows
               │     │        │     Partition by: {c_customer_sk}
               │     │        └─ TableScan tpcds.customer est. ? rows
               │     │                 Outputs: [c_current_addr_sk, c_customer_id, c_customer_sk, c_first_name, c_last_name, c_salutation]
               │     └─ Repartition Exchange est. ? rows
               │        │     Partition by: {ca_address_sk_1}
               │        └─ Filter est. ? rows
               │           │     Condition: ca_state_1 = 'GA'
               │           └─ TableScan tpcds.customer_address est. ? rows
               │                    Outputs: ca_address_sk_1:=ca_address_sk, ca_city_1:=ca_city, ca_country_1:=ca_country, ca_county_1:=ca_county, ca_gmt_offset_1:=ca_gmt_offset, ca_location_type_1:=ca_location_type, ca_state_1:=ca_state, ca_street_name_1:=ca_street_name, ca_street_number_1:=ca_street_number, ca_street_type_1:=ca_street_type, ca_suite_number_1:=ca_suite_number, ca_zip_1:=ca_zip
               └─ MergingAggregated est. ? rows
                  └─ Repartition Exchange est. ? rows
                     │     Partition by: {ca_state_2}
                     └─ Aggregating est. ? rows
                        │     Group by: {ca_state_2}
                        │     Aggregates: expr#avg(ctr_total_return):=AggNull(avgIf)(expr#sum(cr_return_amt_inc_tax)_1,build_side_non_null_symbol)
                        └─ Projection est. ? rows
                           │     Expressions: [ca_state_2, expr#sum(cr_return_amt_inc_tax)_1], build_side_non_null_symbol:=1
                           └─ MergingAggregated est. ? rows
                              └─ Repartition Exchange est. ? rows
                                 │     Partition by: {ca_state_2, cr_returning_customer_sk_1}
                                 └─ Aggregating est. ? rows
                                    │     Group by: {ca_state_2, cr_returning_customer_sk_1}
                                    │     Aggregates: expr#sum(cr_return_amt_inc_tax)_1:=AggNull(sum)(cr_return_amt_inc_tax_1)
                                    └─ Inner Join est. ? rows
                                       │     Condition: cr_returning_addr_sk_1 == ca_address_sk_2
                                       ├─ Repartition Exchange est. ? rows
                                       │  │     Partition by: {cr_returning_addr_sk_1}
                                       │  └─ Inner Join est. ? rows
                                       │     │     Condition: cr_returned_date_sk_1 == d_date_sk_1
                                       │     ├─ Repartition Exchange est. ? rows
                                       │     │  │     Partition by: {cr_returned_date_sk_1}
                                       │     │  └─ TableScan tpcds.catalog_returns est. ? rows
                                       │     │           Outputs: cr_return_amt_inc_tax_1:=cr_return_amt_inc_tax, cr_returned_date_sk_1:=cr_returned_date_sk, cr_returning_addr_sk_1:=cr_returning_addr_sk, cr_returning_customer_sk_1:=cr_returning_customer_sk
                                       │     └─ Repartition Exchange est. ? rows
                                       │        │     Partition by: {d_date_sk_1}
                                       │        └─ Filter est. ? rows
                                       │           │     Condition: d_year_1 = 2000
                                       │           └─ TableScan tpcds.date_dim est. ? rows
                                       │                    Outputs: d_date_sk_1:=d_date_sk, d_year_1:=d_year
                                       └─ Repartition Exchange est. ? rows
                                          │     Partition by: {ca_address_sk_2}
                                          └─ TableScan tpcds.customer_address est. ? rows
                                                   Outputs: ca_address_sk_2:=ca_address_sk, ca_state_2:=ca_state
