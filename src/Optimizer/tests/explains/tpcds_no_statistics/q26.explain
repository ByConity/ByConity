Projection Est. 100 rows
│     Expressions: [i_item_id], agg1:=`expr#avg(cs_quantity)`, agg2:=`expr#avg(cs_list_price)`, agg3:=`expr#avg(cs_coupon_amt)`, agg4:=`expr#avg(cs_sales_price)`
└─ Limit Est. 100 rows
   │     Limit: 100
   └─ Sorting Est. 100 rows
      │     Order by: {i_item_id asc}
      │     Limit: 100
      └─ Gather Exchange Est. ? rows
         └─ Sorting Est. 100 rows
            │     Order by: {i_item_id asc}
            │     Limit: 100
            └─ MergingAggregated Est. ? rows
               └─ Repartition Exchange Est. ? rows
                  │     Partition by: {i_item_id}
                  └─ Aggregating Est. ? rows
                     │     Group by: {i_item_id}
                     │     Aggregates: expr#avg(cs_quantity):=AggNull(avg)(cs_quantity), expr#avg(cs_list_price):=AggNull(avg)(cs_list_price), expr#avg(cs_coupon_amt):=AggNull(avg)(cs_coupon_amt), expr#avg(cs_sales_price):=AggNull(avg)(cs_sales_price)
                     └─ Inner Join Est. ? rows
                        │     Condition: cs_promo_sk == p_promo_sk
                        ├─ Repartition Exchange Est. ? rows
                        │  │     Partition by: {cs_promo_sk}
                        │  └─ Inner Join Est. ? rows
                        │     │     Condition: cs_item_sk == i_item_sk
                        │     ├─ Repartition Exchange Est. ? rows
                        │     │  │     Partition by: {cs_item_sk}
                        │     │  └─ Inner Join Est. ? rows
                        │     │     │     Condition: cs_sold_date_sk == d_date_sk
                        │     │     ├─ Repartition Exchange Est. ? rows
                        │     │     │  │     Partition by: {cs_sold_date_sk}
                        │     │     │  └─ Inner Join Est. ? rows
                        │     │     │     │     Condition: cs_bill_cdemo_sk == cd_demo_sk
                        │     │     │     ├─ Repartition Exchange Est. ? rows
                        │     │     │     │  │     Partition by: {cs_bill_cdemo_sk}
                        │     │     │     │  └─ TableScan tpcds.catalog_sales Est. ? rows
                        │     │     │     │           Outputs: [cs_bill_cdemo_sk, cs_coupon_amt, cs_item_sk, cs_list_price, cs_promo_sk, cs_quantity, cs_sales_price, cs_sold_date_sk]
                        │     │     │     └─ Repartition Exchange Est. ? rows
                        │     │     │        │     Partition by: {cd_demo_sk}
                        │     │     │        └─ Filter Est. ? rows
                        │     │     │           │     Condition: (cd_education_status = 'College') AND (cd_gender = 'M') AND (cd_marital_status = 'S')
                        │     │     │           └─ TableScan tpcds.customer_demographics Est. ? rows
                        │     │     │                    Condition : (cd_education_status = 'College') AND (cd_gender = 'M') AND (cd_marital_status = 'S').
                        │     │     │                    Outputs: [cd_demo_sk, cd_education_status, cd_gender, cd_marital_status]
                        │     │     └─ Repartition Exchange Est. ? rows
                        │     │        │     Partition by: {d_date_sk}
                        │     │        └─ Filter Est. ? rows
                        │     │           │     Condition: d_year = 2000
                        │     │           └─ TableScan tpcds.date_dim Est. ? rows
                        │     │                    Condition : d_year = 2000.
                        │     │                    Outputs: [d_date_sk, d_year]
                        │     └─ Repartition Exchange Est. ? rows
                        │        │     Partition by: {i_item_sk}
                        │        └─ TableScan tpcds.item Est. ? rows
                        │                 Outputs: [i_item_id, i_item_sk]
                        └─ Repartition Exchange Est. ? rows
                           │     Partition by: {p_promo_sk}
                           └─ Filter Est. ? rows
                              │     Condition: (p_channel_email = 'N') OR (p_channel_event = 'N')
                              └─ TableScan tpcds.promotion Est. ? rows
                                       Condition : (p_channel_email = 'N') OR (p_channel_event = 'N').
                                       Outputs: [p_channel_email, p_channel_event, p_promo_sk]
