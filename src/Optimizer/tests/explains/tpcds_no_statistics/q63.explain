Projection Est. 100 rows
│     Expressions: [i_manager_id], avg_monthly_sales:=`expr#avg(sum(ss_sales_price)) OVER (PARTITION BY i_manager_id)`, sum_sales:=`expr#sum(ss_sales_price)`
└─ Limit Est. 100 rows
   │     Limit: 100
   └─ Projection Est. 100 rows
      │     Expressions: [expr#avg(sum(ss_sales_price)) OVER (PARTITION BY i_manager_id), expr#sum(ss_sales_price), i_manager_id]
      └─ Sorting Est. 100 rows
         │     Order by: {i_manager_id asc, expr#avg(sum(ss_sales_price)) OVER (PARTITION BY i_manager_id) asc, expr#sum(ss_sales_price) asc}
         │     Limit: 100
         └─ Gather Exchange Est. ? rows
            └─ Sorting Est. 100 rows
               │     Order by: {i_manager_id asc, expr#avg(sum(ss_sales_price)) OVER (PARTITION BY i_manager_id) asc, expr#sum(ss_sales_price) asc}
               │     Limit: 100
               └─ Filter Est. ? rows
                  │     Condition: multiIf(`expr#avg(sum(ss_sales_price)) OVER (PARTITION BY i_manager_id)` > 0, abs(`expr#sum(ss_sales_price)` - `expr#avg(sum(ss_sales_price)) OVER (PARTITION BY i_manager_id)`) / `expr#avg(sum(ss_sales_price)) OVER (PARTITION BY i_manager_id)`, NULL) > '0.1'
                  └─ Window Est. ? rows
                     └─ Repartition Exchange Est. ? rows
                        │     Partition by: {i_manager_id}
                        └─ MergingAggregated Est. ? rows
                           └─ Repartition Exchange Est. ? rows
                              │     Partition by: {d_moy, i_manager_id}
                              └─ Aggregating Est. ? rows
                                 │     Group by: {d_moy, i_manager_id}
                                 │     Aggregates: expr#sum(ss_sales_price):=AggNull(sum)(ss_sales_price)
                                 └─ Inner Join Est. ? rows
                                    │     Condition: ss_store_sk == s_store_sk
                                    ├─ Repartition Exchange Est. ? rows
                                    │  │     Partition by: {ss_store_sk}
                                    │  └─ Inner Join Est. ? rows
                                    │     │     Condition: ss_sold_date_sk == d_date_sk
                                    │     ├─ Repartition Exchange Est. ? rows
                                    │     │  │     Partition by: {ss_sold_date_sk}
                                    │     │  └─ Inner Join Est. ? rows
                                    │     │     │     Condition: i_item_sk == ss_item_sk
                                    │     │     ├─ Repartition Exchange Est. ? rows
                                    │     │     │  │     Partition by: {i_item_sk}
                                    │     │     │  └─ Filter Est. ? rows
                                    │     │     │     │     Condition: ((i_category IN ('Books', 'Children', 'Electronics')) AND (i_class IN ('personal', 'portable', 'reference', 'self-help')) AND (i_brand IN ('scholaramalgamalg #14', 'scholaramalgamalg #7', 'exportiunivamalg #9', 'scholaramalgamalg #9'))) OR ((i_category IN ('Women', 'Music', 'Men')) AND (i_class IN ('accessories', 'classical', 'fragrances', 'pants')) AND (i_brand IN ('amalgimporto #1', 'edu packscholar #1', 'exportiimporto #1', 'importoamalg #1')))
                                    │     │     │     └─ TableScan tpcds.item Est. ? rows
                                    │     │     │              Condition : ((i_category IN ('Books', 'Children', 'Electronics')) AND (i_class IN ('personal', 'portable', 'reference', 'self-help')) AND (i_brand IN ('scholaramalgamalg #14', 'scholaramalgamalg #7', 'exportiunivamalg #9', 'scholaramalgamalg #9'))) OR ((i_category IN ('Women', 'Music', 'Men')) AND (i_class IN ('accessories', 'classical', 'fragrances', 'pants')) AND (i_brand IN ('amalgimporto #1', 'edu packscholar #1', 'exportiimporto #1', 'importoamalg #1'))).
                                    │     │     │              Outputs: [i_brand, i_category, i_class, i_item_sk, i_manager_id]
                                    │     │     └─ Repartition Exchange Est. ? rows
                                    │     │        │     Partition by: {ss_item_sk}
                                    │     │        └─ TableScan tpcds.store_sales Est. ? rows
                                    │     │                 Outputs: [ss_item_sk, ss_sales_price, ss_sold_date_sk, ss_store_sk]
                                    │     └─ Repartition Exchange Est. ? rows
                                    │        │     Partition by: {d_date_sk}
                                    │        └─ Filter Est. ? rows
                                    │           │     Condition: d_month_seq IN (1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211)
                                    │           └─ TableScan tpcds.date_dim Est. ? rows
                                    │                    Condition : d_month_seq IN (1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211).
                                    │                    Outputs: [d_date_sk, d_month_seq, d_moy]
                                    └─ Repartition Exchange Est. ? rows
                                       │     Partition by: {s_store_sk}
                                       └─ TableScan tpcds.store Est. ? rows
                                                Outputs: [s_store_sk]
