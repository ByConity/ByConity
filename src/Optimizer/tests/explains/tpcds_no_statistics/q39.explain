Projection est. ? rows
│     Expressions: [d_moy, d_moy_1, i_item_sk, i_item_sk_1, w_warehouse_sk, w_warehouse_sk_1], cov:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))`, cov_1:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1`, mean:=`expr#avg(inv_quantity_on_hand)`, mean_1:=`expr#avg(inv_quantity_on_hand)_1`
└─ Sorting est. ? rows
   │     Order by: {w_warehouse_sk asc, i_item_sk asc, d_moy asc, expr#avg(inv_quantity_on_hand) asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean)) asc, d_moy_1 asc, expr#avg(inv_quantity_on_hand)_1 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1 asc}
   └─ Gather Exchange est. ? rows
      └─ Sorting est. ? rows
         │     Order by: {w_warehouse_sk asc, i_item_sk asc, d_moy asc, expr#avg(inv_quantity_on_hand) asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean)) asc, d_moy_1 asc, expr#avg(inv_quantity_on_hand)_1 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1 asc}
         └─ Inner Join est. ? rows
            │     Condition: i_item_sk == i_item_sk_1, w_warehouse_sk == w_warehouse_sk_1
            ├─ Repartition Exchange est. ? rows
            │  │     Partition by: {i_item_sk, w_warehouse_sk}
            │  └─ Projection est. ? rows
            │     │     Expressions: [d_moy, expr#avg(inv_quantity_on_hand), i_item_sk, w_warehouse_sk], expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean)):=caseWithExpression(`expr#avg(inv_quantity_on_hand)`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)` / `expr#avg(inv_quantity_on_hand)`)
            │     └─ Filter est. ? rows
            │        │     Condition: caseWithExpression(`expr#avg(inv_quantity_on_hand)`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)` / `expr#avg(inv_quantity_on_hand)`) > 1
            │        └─ MergingAggregated est. ? rows
            │           └─ Repartition Exchange est. ? rows
            │              │     Partition by: {d_moy, i_item_sk, w_warehouse_name, w_warehouse_sk}
            │              └─ Aggregating est. ? rows
            │                 │     Group by: {d_moy, i_item_sk, w_warehouse_name, w_warehouse_sk}
            │                 │     Aggregates: expr#stddevSamp(inv_quantity_on_hand):=AggNull(stddevSamp)(inv_quantity_on_hand), expr#avg(inv_quantity_on_hand):=AggNull(avg)(inv_quantity_on_hand)
            │                 └─ Inner Join est. ? rows
            │                    │     Condition: inv_date_sk == d_date_sk
            │                    ├─ Repartition Exchange est. ? rows
            │                    │  │     Partition by: {inv_date_sk}
            │                    │  └─ Inner Join est. ? rows
            │                    │     │     Condition: inv_warehouse_sk == w_warehouse_sk
            │                    │     ├─ Repartition Exchange est. ? rows
            │                    │     │  │     Partition by: {inv_warehouse_sk}
            │                    │     │  └─ Inner Join est. ? rows
            │                    │     │     │     Condition: inv_item_sk == i_item_sk
            │                    │     │     ├─ Repartition Exchange est. ? rows
            │                    │     │     │  │     Partition by: {inv_item_sk}
            │                    │     │     │  └─ TableScan tpcds.inventory est. ? rows
            │                    │     │     │           Outputs: [inv_date_sk, inv_item_sk, inv_quantity_on_hand, inv_warehouse_sk]
            │                    │     │     └─ Repartition Exchange est. ? rows
            │                    │     │        │     Partition by: {i_item_sk}
            │                    │     │        └─ TableScan tpcds.item est. ? rows
            │                    │     │                 Outputs: [i_item_sk]
            │                    │     └─ Repartition Exchange est. ? rows
            │                    │        │     Partition by: {w_warehouse_sk}
            │                    │        └─ TableScan tpcds.warehouse est. ? rows
            │                    │                 Outputs: [w_warehouse_name, w_warehouse_sk]
            │                    └─ Repartition Exchange est. ? rows
            │                       │     Partition by: {d_date_sk}
            │                       └─ Filter est. ? rows
            │                          │     Condition: (d_year = 2001) AND (d_moy = 1)
            │                          └─ TableScan tpcds.date_dim est. ? rows
            │                                   Outputs: [d_date_sk, d_moy, d_year]
            └─ Repartition Exchange est. ? rows
               │     Partition by: {i_item_sk_1, w_warehouse_sk_1}
               └─ Projection est. ? rows
                  │     Expressions: [d_moy_1, expr#avg(inv_quantity_on_hand)_1, i_item_sk_1, w_warehouse_sk_1], expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1:=caseWithExpression(`expr#avg(inv_quantity_on_hand)_1`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_1` / `expr#avg(inv_quantity_on_hand)_1`)
                  └─ Filter est. ? rows
                     │     Condition: caseWithExpression(`expr#avg(inv_quantity_on_hand)_1`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)_1` / `expr#avg(inv_quantity_on_hand)_1`) > 1
                     └─ MergingAggregated est. ? rows
                        └─ Repartition Exchange est. ? rows
                           │     Partition by: {d_moy_1, i_item_sk_1, w_warehouse_name_1, w_warehouse_sk_1}
                           └─ Aggregating est. ? rows
                              │     Group by: {d_moy_1, i_item_sk_1, w_warehouse_name_1, w_warehouse_sk_1}
                              │     Aggregates: expr#stddevSamp(inv_quantity_on_hand)_1:=AggNull(stddevSamp)(inv_quantity_on_hand_1), expr#avg(inv_quantity_on_hand)_1:=AggNull(avg)(inv_quantity_on_hand_1)
                              └─ Inner Join est. ? rows
                                 │     Condition: inv_date_sk_1 == d_date_sk_1
                                 ├─ Repartition Exchange est. ? rows
                                 │  │     Partition by: {inv_date_sk_1}
                                 │  └─ Inner Join est. ? rows
                                 │     │     Condition: inv_warehouse_sk_1 == w_warehouse_sk_1
                                 │     ├─ Repartition Exchange est. ? rows
                                 │     │  │     Partition by: {inv_warehouse_sk_1}
                                 │     │  └─ Inner Join est. ? rows
                                 │     │     │     Condition: inv_item_sk_1 == i_item_sk_1
                                 │     │     ├─ Repartition Exchange est. ? rows
                                 │     │     │  │     Partition by: {inv_item_sk_1}
                                 │     │     │  └─ TableScan tpcds.inventory est. ? rows
                                 │     │     │           Outputs: inv_date_sk_1:=inv_date_sk, inv_item_sk_1:=inv_item_sk, inv_quantity_on_hand_1:=inv_quantity_on_hand, inv_warehouse_sk_1:=inv_warehouse_sk
                                 │     │     └─ Repartition Exchange est. ? rows
                                 │     │        │     Partition by: {i_item_sk_1}
                                 │     │        └─ TableScan tpcds.item est. ? rows
                                 │     │                 Outputs: i_item_sk_1:=i_item_sk
                                 │     └─ Repartition Exchange est. ? rows
                                 │        │     Partition by: {w_warehouse_sk_1}
                                 │        └─ TableScan tpcds.warehouse est. ? rows
                                 │                 Outputs: w_warehouse_name_1:=w_warehouse_name, w_warehouse_sk_1:=w_warehouse_sk
                                 └─ Repartition Exchange est. ? rows
                                    │     Partition by: {d_date_sk_1}
                                    └─ Filter est. ? rows
                                       │     Condition: (d_moy_1 = 2) AND (d_year_1 = 2001)
                                       └─ TableScan tpcds.date_dim est. ? rows
                                                Outputs: d_date_sk_1:=d_date_sk, d_moy_1:=d_moy, d_year_1:=d_year
Projection est. ? rows
│     Expressions: cov:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2`, cov_1:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_3`, d_moy:=d_moy_2, d_moy_1:=d_moy_3, i_item_sk:=i_item_sk_2, i_item_sk_1:=i_item_sk_3, mean:=`expr#avg(inv_quantity_on_hand)_2`, mean_1:=`expr#avg(inv_quantity_on_hand)_3`, w_warehouse_sk:=w_warehouse_sk_2, w_warehouse_sk_1:=w_warehouse_sk_3
└─ Sorting est. ? rows
   │     Order by: {w_warehouse_sk_2 asc, i_item_sk_2 asc, d_moy_2 asc, expr#avg(inv_quantity_on_hand)_2 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2 asc, d_moy_3 asc, expr#avg(inv_quantity_on_hand)_3 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_3 asc}
   └─ Gather Exchange est. ? rows
      └─ Sorting est. ? rows
         │     Order by: {w_warehouse_sk_2 asc, i_item_sk_2 asc, d_moy_2 asc, expr#avg(inv_quantity_on_hand)_2 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2 asc, d_moy_3 asc, expr#avg(inv_quantity_on_hand)_3 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_3 asc}
         └─ Inner Join est. ? rows
            │     Condition: i_item_sk_2 == i_item_sk_3, w_warehouse_sk_2 == w_warehouse_sk_3
            ├─ Repartition Exchange est. ? rows
            │  │     Partition by: {i_item_sk_2, w_warehouse_sk_2}
            │  └─ Projection est. ? rows
            │     │     Expressions: [d_moy_2, expr#avg(inv_quantity_on_hand)_2, i_item_sk_2, w_warehouse_sk_2], expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2:=caseWithExpression(`expr#avg(inv_quantity_on_hand)_2`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_2` / `expr#avg(inv_quantity_on_hand)_2`)
            │     └─ Filter est. ? rows
            │        │     Condition: (caseWithExpression(`expr#avg(inv_quantity_on_hand)_2`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)_2` / `expr#avg(inv_quantity_on_hand)_2`) > 1) AND (caseWithExpression(`expr#avg(inv_quantity_on_hand)_2`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_2` / `expr#avg(inv_quantity_on_hand)_2`) > 1.5)
            │        └─ MergingAggregated est. ? rows
            │           └─ Repartition Exchange est. ? rows
            │              │     Partition by: {d_moy_2, i_item_sk_2, w_warehouse_name_2, w_warehouse_sk_2}
            │              └─ Aggregating est. ? rows
            │                 │     Group by: {d_moy_2, i_item_sk_2, w_warehouse_name_2, w_warehouse_sk_2}
            │                 │     Aggregates: expr#stddevSamp(inv_quantity_on_hand)_2:=AggNull(stddevSamp)(inv_quantity_on_hand_2), expr#avg(inv_quantity_on_hand)_2:=AggNull(avg)(inv_quantity_on_hand_2)
            │                 └─ Inner Join est. ? rows
            │                    │     Condition: inv_date_sk_2 == d_date_sk_2
            │                    ├─ Repartition Exchange est. ? rows
            │                    │  │     Partition by: {inv_date_sk_2}
            │                    │  └─ Inner Join est. ? rows
            │                    │     │     Condition: inv_warehouse_sk_2 == w_warehouse_sk_2
            │                    │     ├─ Repartition Exchange est. ? rows
            │                    │     │  │     Partition by: {inv_warehouse_sk_2}
            │                    │     │  └─ Inner Join est. ? rows
            │                    │     │     │     Condition: inv_item_sk_2 == i_item_sk_2
            │                    │     │     ├─ Repartition Exchange est. ? rows
            │                    │     │     │  │     Partition by: {inv_item_sk_2}
            │                    │     │     │  └─ TableScan tpcds.inventory est. ? rows
            │                    │     │     │           Outputs: inv_date_sk_2:=inv_date_sk, inv_item_sk_2:=inv_item_sk, inv_quantity_on_hand_2:=inv_quantity_on_hand, inv_warehouse_sk_2:=inv_warehouse_sk
            │                    │     │     └─ Repartition Exchange est. ? rows
            │                    │     │        │     Partition by: {i_item_sk_2}
            │                    │     │        └─ TableScan tpcds.item est. ? rows
            │                    │     │                 Outputs: i_item_sk_2:=i_item_sk
            │                    │     └─ Repartition Exchange est. ? rows
            │                    │        │     Partition by: {w_warehouse_sk_2}
            │                    │        └─ TableScan tpcds.warehouse est. ? rows
            │                    │                 Outputs: w_warehouse_name_2:=w_warehouse_name, w_warehouse_sk_2:=w_warehouse_sk
            │                    └─ Repartition Exchange est. ? rows
            │                       │     Partition by: {d_date_sk_2}
            │                       └─ Filter est. ? rows
            │                          │     Condition: (d_moy_2 = 1) AND (d_year_2 = 2001)
            │                          └─ TableScan tpcds.date_dim est. ? rows
            │                                   Outputs: d_date_sk_2:=d_date_sk, d_moy_2:=d_moy, d_year_2:=d_year
            └─ Repartition Exchange est. ? rows
               │     Partition by: {i_item_sk_3, w_warehouse_sk_3}
               └─ Projection est. ? rows
                  │     Expressions: [d_moy_3, expr#avg(inv_quantity_on_hand)_3, i_item_sk_3, w_warehouse_sk_3], expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_3:=caseWithExpression(`expr#avg(inv_quantity_on_hand)_3`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_3` / `expr#avg(inv_quantity_on_hand)_3`)
                  └─ Filter est. ? rows
                     │     Condition: caseWithExpression(`expr#avg(inv_quantity_on_hand)_3`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)_3` / `expr#avg(inv_quantity_on_hand)_3`) > 1
                     └─ MergingAggregated est. ? rows
                        └─ Repartition Exchange est. ? rows
                           │     Partition by: {d_moy_3, i_item_sk_3, w_warehouse_name_3, w_warehouse_sk_3}
                           └─ Aggregating est. ? rows
                              │     Group by: {d_moy_3, i_item_sk_3, w_warehouse_name_3, w_warehouse_sk_3}
                              │     Aggregates: expr#stddevSamp(inv_quantity_on_hand)_3:=AggNull(stddevSamp)(inv_quantity_on_hand_3), expr#avg(inv_quantity_on_hand)_3:=AggNull(avg)(inv_quantity_on_hand_3)
                              └─ Inner Join est. ? rows
                                 │     Condition: inv_date_sk_3 == d_date_sk_3
                                 ├─ Repartition Exchange est. ? rows
                                 │  │     Partition by: {inv_date_sk_3}
                                 │  └─ Inner Join est. ? rows
                                 │     │     Condition: inv_warehouse_sk_3 == w_warehouse_sk_3
                                 │     ├─ Repartition Exchange est. ? rows
                                 │     │  │     Partition by: {inv_warehouse_sk_3}
                                 │     │  └─ Inner Join est. ? rows
                                 │     │     │     Condition: inv_item_sk_3 == i_item_sk_3
                                 │     │     ├─ Repartition Exchange est. ? rows
                                 │     │     │  │     Partition by: {inv_item_sk_3}
                                 │     │     │  └─ TableScan tpcds.inventory est. ? rows
                                 │     │     │           Outputs: inv_date_sk_3:=inv_date_sk, inv_item_sk_3:=inv_item_sk, inv_quantity_on_hand_3:=inv_quantity_on_hand, inv_warehouse_sk_3:=inv_warehouse_sk
                                 │     │     └─ Repartition Exchange est. ? rows
                                 │     │        │     Partition by: {i_item_sk_3}
                                 │     │        └─ TableScan tpcds.item est. ? rows
                                 │     │                 Outputs: i_item_sk_3:=i_item_sk
                                 │     └─ Repartition Exchange est. ? rows
                                 │        │     Partition by: {w_warehouse_sk_3}
                                 │        └─ TableScan tpcds.warehouse est. ? rows
                                 │                 Outputs: w_warehouse_name_3:=w_warehouse_name, w_warehouse_sk_3:=w_warehouse_sk
                                 └─ Repartition Exchange est. ? rows
                                    │     Partition by: {d_date_sk_3}
                                    └─ Filter est. ? rows
                                       │     Condition: (d_year_3 = 2001) AND (d_moy_3 = 2)
                                       └─ TableScan tpcds.date_dim est. ? rows
                                                Outputs: d_date_sk_3:=d_date_sk, d_moy_3:=d_moy, d_year_3:=d_year
