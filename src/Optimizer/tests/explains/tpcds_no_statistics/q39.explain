Projection est. ? rows
│     Expressions: cov:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1`, cov_1:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2`, d_moy:=d_moy_1, d_moy_1:=d_moy_2, i_item_sk:=i_item_sk_1, i_item_sk_1:=i_item_sk_2, mean:=`expr#avg(inv_quantity_on_hand)_1`, mean_1:=`expr#avg(inv_quantity_on_hand)_2`, w_warehouse_sk:=w_warehouse_sk_1, w_warehouse_sk_1:=w_warehouse_sk_2
└─ Sorting est. ? rows
   │     Order by: {w_warehouse_sk_1 asc, i_item_sk_1 asc, d_moy_1 asc, expr#avg(inv_quantity_on_hand)_1 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1 asc, d_moy_2 asc, expr#avg(inv_quantity_on_hand)_2 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2 asc}
   └─ Gather Exchange est. ? rows
      └─ Sorting est. ? rows
         │     Order by: {w_warehouse_sk_1 asc, i_item_sk_1 asc, d_moy_1 asc, expr#avg(inv_quantity_on_hand)_1 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_1 asc, d_moy_2 asc, expr#avg(inv_quantity_on_hand)_2 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_2 asc}
         └─ Inner Join est. ? rows
            │     Condition: i_item_sk_1 == i_item_sk_2, w_warehouse_sk_1 == w_warehouse_sk_2
            ├─ Repartition Exchange est. ? rows
            │  │     Partition by: {i_item_sk_1, w_warehouse_sk_1}
            │  └─ Filter est. ? rows
            │     │     Condition: d_moy_1 = 1
            │     └─ CTERef [0] est. ? rows
            └─ Repartition Exchange est. ? rows
               │     Partition by: {i_item_sk_2, w_warehouse_sk_2}
               └─ Filter est. ? rows
                  │     Condition: d_moy_2 = 2
                  └─ CTERef [0] est. ? rows
CTEDef [0]
Projection est. ? rows
│     Expressions: [d_moy, expr#avg(inv_quantity_on_hand), i_item_sk, w_warehouse_sk], expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean)):=caseWithExpression(`expr#avg(inv_quantity_on_hand)`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)` / `expr#avg(inv_quantity_on_hand)`)
└─ Filter est. ? rows
   │     Condition: caseWithExpression(`expr#avg(inv_quantity_on_hand)`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)` / `expr#avg(inv_quantity_on_hand)`) > 1
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {d_moy, i_item_sk, w_warehouse_name, w_warehouse_sk}
         └─ Aggregating est. ? rows
            │     Group by: {d_moy, i_item_sk, w_warehouse_name, w_warehouse_sk}
            │     Aggregates: expr#stddevSamp(inv_quantity_on_hand):=AggNull(stddevSamp)(inv_quantity_on_hand), expr#avg(inv_quantity_on_hand):=AggNull(avg)(inv_quantity_on_hand)
            └─ Inner Join est. ? rows
               │     Condition: inv_date_sk == d_date_sk
               ├─ Repartition Exchange est. ? rows
               │  │     Partition by: {inv_date_sk}
               │  └─ Inner Join est. ? rows
               │     │     Condition: inv_warehouse_sk == w_warehouse_sk
               │     ├─ Repartition Exchange est. ? rows
               │     │  │     Partition by: {inv_warehouse_sk}
               │     │  └─ Inner Join est. ? rows
               │     │     │     Condition: inv_item_sk == i_item_sk
               │     │     ├─ Repartition Exchange est. ? rows
               │     │     │  │     Partition by: {inv_item_sk}
               │     │     │  └─ TableScan tpcds.inventory est. ? rows
               │     │     │           Outputs: [inv_date_sk, inv_item_sk, inv_quantity_on_hand, inv_warehouse_sk]
               │     │     └─ Repartition Exchange est. ? rows
               │     │        │     Partition by: {i_item_sk}
               │     │        └─ TableScan tpcds.item est. ? rows
               │     │                 Outputs: [i_item_sk]
               │     └─ Repartition Exchange est. ? rows
               │        │     Partition by: {w_warehouse_sk}
               │        └─ TableScan tpcds.warehouse est. ? rows
               │                 Outputs: [w_warehouse_name, w_warehouse_sk]
               └─ Repartition Exchange est. ? rows
                  │     Partition by: {d_date_sk}
                  └─ Filter est. ? rows
                     │     Condition: (d_year = 2001) AND (d_moy IN (1, 2))
                     └─ TableScan tpcds.date_dim est. ? rows
                              Outputs: [d_date_sk, d_moy, d_year]
note: CTE(Common Table Expression) is applied for 2 times.
Projection est. ? rows
│     Expressions: cov:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_4`, cov_1:=`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_5`, d_moy:=d_moy_4, d_moy_1:=d_moy_5, i_item_sk:=i_item_sk_4, i_item_sk_1:=i_item_sk_5, mean:=`expr#avg(inv_quantity_on_hand)_4`, mean_1:=`expr#avg(inv_quantity_on_hand)_5`, w_warehouse_sk:=w_warehouse_sk_4, w_warehouse_sk_1:=w_warehouse_sk_5
└─ Sorting est. ? rows
   │     Order by: {w_warehouse_sk_4 asc, i_item_sk_4 asc, d_moy_4 asc, expr#avg(inv_quantity_on_hand)_4 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_4 asc, d_moy_5 asc, expr#avg(inv_quantity_on_hand)_5 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_5 asc}
   └─ Gather Exchange est. ? rows
      └─ Sorting est. ? rows
         │     Order by: {w_warehouse_sk_4 asc, i_item_sk_4 asc, d_moy_4 asc, expr#avg(inv_quantity_on_hand)_4 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_4 asc, d_moy_5 asc, expr#avg(inv_quantity_on_hand)_5 asc, expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_5 asc}
         └─ Inner Join est. ? rows
            │     Condition: i_item_sk_4 == i_item_sk_5, w_warehouse_sk_4 == w_warehouse_sk_5
            ├─ Repartition Exchange est. ? rows
            │  │     Partition by: {i_item_sk_4, w_warehouse_sk_4}
            │  └─ Filter est. ? rows
            │     │     Condition: (d_moy_4 = 1) AND (`expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_4` > 1.5)
            │     └─ CTERef [0] est. ? rows
            └─ Repartition Exchange est. ? rows
               │     Partition by: {i_item_sk_5, w_warehouse_sk_5}
               └─ Filter est. ? rows
                  │     Condition: d_moy_5 = 2
                  └─ CTERef [0] est. ? rows
CTEDef [0]
Projection est. ? rows
│     Expressions: [d_moy_3, expr#avg(inv_quantity_on_hand)_3, i_item_sk_3, w_warehouse_sk_3], expr#caseWithExpression(mean, 0, NULL, divide(stdev, mean))_3:=caseWithExpression(`expr#avg(inv_quantity_on_hand)_3`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_3` / `expr#avg(inv_quantity_on_hand)_3`)
└─ Filter est. ? rows
   │     Condition: (caseWithExpression(`expr#avg(inv_quantity_on_hand)_3`, 0, 0, `expr#stddevSamp(inv_quantity_on_hand)_3` / `expr#avg(inv_quantity_on_hand)_3`) > 1) AND ((d_moy_3 = 2) OR ((d_moy_3 = 1) AND (caseWithExpression(`expr#avg(inv_quantity_on_hand)_3`, 0, NULL, `expr#stddevSamp(inv_quantity_on_hand)_3` / `expr#avg(inv_quantity_on_hand)_3`) > 1.5)))
   └─ MergingAggregated est. ? rows
      └─ Repartition Exchange est. ? rows
         │     Partition by: {d_moy_3, i_item_sk_3, w_warehouse_name_3, w_warehouse_sk_3}
         └─ Aggregating est. ? rows
            │     Group by: {d_moy_3, i_item_sk_3, w_warehouse_name_3, w_warehouse_sk_3}
            │     Aggregates: expr#stddevSamp(inv_quantity_on_hand)_3:=AggNull(stddevSamp)(inv_quantity_on_hand_1), expr#avg(inv_quantity_on_hand)_3:=AggNull(avg)(inv_quantity_on_hand_1)
            └─ Inner Join est. ? rows
               │     Condition: inv_date_sk_1 == d_date_sk_1
               ├─ Repartition Exchange est. ? rows
               │  │     Partition by: {inv_date_sk_1}
               │  └─ Inner Join est. ? rows
               │     │     Condition: inv_warehouse_sk_1 == w_warehouse_sk_3
               │     ├─ Repartition Exchange est. ? rows
               │     │  │     Partition by: {inv_warehouse_sk_1}
               │     │  └─ Inner Join est. ? rows
               │     │     │     Condition: inv_item_sk_1 == i_item_sk_3
               │     │     ├─ Repartition Exchange est. ? rows
               │     │     │  │     Partition by: {inv_item_sk_1}
               │     │     │  └─ TableScan tpcds.inventory est. ? rows
               │     │     │           Outputs: inv_date_sk_1:=inv_date_sk, inv_item_sk_1:=inv_item_sk, inv_quantity_on_hand_1:=inv_quantity_on_hand, inv_warehouse_sk_1:=inv_warehouse_sk
               │     │     └─ Repartition Exchange est. ? rows
               │     │        │     Partition by: {i_item_sk_3}
               │     │        └─ TableScan tpcds.item est. ? rows
               │     │                 Outputs: i_item_sk_3:=i_item_sk
               │     └─ Repartition Exchange est. ? rows
               │        │     Partition by: {w_warehouse_sk_3}
               │        └─ TableScan tpcds.warehouse est. ? rows
               │                 Outputs: w_warehouse_name_3:=w_warehouse_name, w_warehouse_sk_3:=w_warehouse_sk
               └─ Repartition Exchange est. ? rows
                  │     Partition by: {d_date_sk_1}
                  └─ Filter est. ? rows
                     │     Condition: d_year_1 = 2001
                     └─ TableScan tpcds.date_dim est. ? rows
                              Outputs: d_date_sk_1:=d_date_sk, d_moy_3:=d_moy, d_year_1:=d_year
note: CTE(Common Table Expression) is applied for 2 times.
