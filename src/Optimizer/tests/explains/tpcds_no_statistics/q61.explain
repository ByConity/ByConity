Projection est. 100 rows
│     Expressions: multiply(divide(CAST(promotions, 'decimal(15, 4)'), CAST(total, 'decimal(15, 4)')), 100):=`expr#multiply(divide(CAST(promotions, 'decimal(15, 4)'), CAST(total, 'decimal(15, 4)')), 100)`, promotions:=`expr#sum(ss_ext_sales_price)`, total:=`expr#sum(ss_ext_sales_price)_1`
└─ Limit est. 100 rows
   │     Limit: 100
   └─ Sorting est. ? rows
      │     Order by: {expr#sum(ss_ext_sales_price) asc, expr#sum(ss_ext_sales_price)_1 asc}
      └─ Projection est. ? rows
         │     Expressions: [expr#sum(ss_ext_sales_price), expr#sum(ss_ext_sales_price)_1], expr#multiply(divide(CAST(promotions, 'decimal(15, 4)'), CAST(total, 'decimal(15, 4)')), 100):=(CAST(`expr#sum(ss_ext_sales_price)`, 'decimal(15, 4)') / CAST(`expr#sum(ss_ext_sales_price)_1`, 'decimal(15, 4)')) * 100
         └─ Inner Join est. ? rows
            │     Condition: 
            ├─ MergingAggregated est. ? rows
            │  └─ Gather Exchange est. ? rows
            │     └─ Aggregating est. ? rows
            │        │     Group by: {}
            │        │     Aggregates: expr#sum(ss_ext_sales_price):=AggNull(sum)(ss_ext_sales_price)
            │        └─ Inner Join est. ? rows
            │           │     Condition: ss_item_sk == i_item_sk
            │           ├─ Repartition Exchange est. ? rows
            │           │  │     Partition by: {ss_item_sk}
            │           │  └─ Inner Join est. ? rows
            │           │     │     Condition: c_current_addr_sk == ca_address_sk
            │           │     ├─ Repartition Exchange est. ? rows
            │           │     │  │     Partition by: {c_current_addr_sk}
            │           │     │  └─ Inner Join est. ? rows
            │           │     │     │     Condition: ss_customer_sk == c_customer_sk
            │           │     │     ├─ Repartition Exchange est. ? rows
            │           │     │     │  │     Partition by: {ss_customer_sk}
            │           │     │     │  └─ Inner Join est. ? rows
            │           │     │     │     │     Condition: ss_sold_date_sk == d_date_sk
            │           │     │     │     ├─ Repartition Exchange est. ? rows
            │           │     │     │     │  │     Partition by: {ss_sold_date_sk}
            │           │     │     │     │  └─ Inner Join est. ? rows
            │           │     │     │     │     │     Condition: ss_promo_sk == p_promo_sk
            │           │     │     │     │     ├─ Repartition Exchange est. ? rows
            │           │     │     │     │     │  │     Partition by: {ss_promo_sk}
            │           │     │     │     │     │  └─ Inner Join est. ? rows
            │           │     │     │     │     │     │     Condition: ss_store_sk == s_store_sk
            │           │     │     │     │     │     ├─ Repartition Exchange est. ? rows
            │           │     │     │     │     │     │  │     Partition by: {ss_store_sk}
            │           │     │     │     │     │     │  └─ TableScan tpcds.store_sales est. ? rows
            │           │     │     │     │     │     │           Outputs: [ss_customer_sk, ss_ext_sales_price, ss_item_sk, ss_promo_sk, ss_sold_date_sk, ss_store_sk]
            │           │     │     │     │     │     └─ Repartition Exchange est. ? rows
            │           │     │     │     │     │        │     Partition by: {s_store_sk}
            │           │     │     │     │     │        └─ Filter est. ? rows
            │           │     │     │     │     │           │     Condition: s_gmt_offset = -5.
            │           │     │     │     │     │           └─ TableScan tpcds.store est. ? rows
            │           │     │     │     │     │                    Outputs: [s_gmt_offset, s_store_sk]
            │           │     │     │     │     └─ Repartition Exchange est. ? rows
            │           │     │     │     │        │     Partition by: {p_promo_sk}
            │           │     │     │     │        └─ Filter est. ? rows
            │           │     │     │     │           │     Condition: (p_channel_tv = 'Y') OR (p_channel_dmail = 'Y') OR (p_channel_email = 'Y')
            │           │     │     │     │           └─ TableScan tpcds.promotion est. ? rows
            │           │     │     │     │                    Outputs: [p_channel_dmail, p_channel_email, p_channel_tv, p_promo_sk]
            │           │     │     │     └─ Repartition Exchange est. ? rows
            │           │     │     │        │     Partition by: {d_date_sk}
            │           │     │     │        └─ Filter est. ? rows
            │           │     │     │           │     Condition: (d_moy = 11) AND (d_year = 1998)
            │           │     │     │           └─ TableScan tpcds.date_dim est. ? rows
            │           │     │     │                    Outputs: [d_date_sk, d_moy, d_year]
            │           │     │     └─ Repartition Exchange est. ? rows
            │           │     │        │     Partition by: {c_customer_sk}
            │           │     │        └─ TableScan tpcds.customer est. ? rows
            │           │     │                 Outputs: [c_current_addr_sk, c_customer_sk]
            │           │     └─ Repartition Exchange est. ? rows
            │           │        │     Partition by: {ca_address_sk}
            │           │        └─ Filter est. ? rows
            │           │           │     Condition: ca_gmt_offset = -5.
            │           │           └─ TableScan tpcds.customer_address est. ? rows
            │           │                    Outputs: [ca_address_sk, ca_gmt_offset]
            │           └─ Repartition Exchange est. ? rows
            │              │     Partition by: {i_item_sk}
            │              └─ Filter est. ? rows
            │                 │     Condition: i_category = 'Jewelry'
            │                 └─ TableScan tpcds.item est. ? rows
            │                          Outputs: [i_category, i_item_sk]
            └─ Broadcast Exchange est. ? rows
               └─ MergingAggregated est. ? rows
                  └─ Gather Exchange est. ? rows
                     └─ Aggregating est. ? rows
                        │     Group by: {}
                        │     Aggregates: expr#sum(ss_ext_sales_price)_1:=AggNull(sum)(ss_ext_sales_price_1)
                        └─ Inner Join est. ? rows
                           │     Condition: ss_item_sk_1 == i_item_sk_1
                           ├─ Repartition Exchange est. ? rows
                           │  │     Partition by: {ss_item_sk_1}
                           │  └─ Inner Join est. ? rows
                           │     │     Condition: c_current_addr_sk_1 == ca_address_sk_1
                           │     ├─ Repartition Exchange est. ? rows
                           │     │  │     Partition by: {c_current_addr_sk_1}
                           │     │  └─ Inner Join est. ? rows
                           │     │     │     Condition: ss_customer_sk_1 == c_customer_sk_1
                           │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │  │     Partition by: {ss_customer_sk_1}
                           │     │     │  └─ Inner Join est. ? rows
                           │     │     │     │     Condition: ss_sold_date_sk_1 == d_date_sk_1
                           │     │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │     │  │     Partition by: {ss_sold_date_sk_1}
                           │     │     │     │  └─ Inner Join est. ? rows
                           │     │     │     │     │     Condition: ss_store_sk_1 == s_store_sk_1
                           │     │     │     │     ├─ Repartition Exchange est. ? rows
                           │     │     │     │     │  │     Partition by: {ss_store_sk_1}
                           │     │     │     │     │  └─ TableScan tpcds.store_sales est. ? rows
                           │     │     │     │     │           Outputs: ss_customer_sk_1:=ss_customer_sk, ss_ext_sales_price_1:=ss_ext_sales_price, ss_item_sk_1:=ss_item_sk, ss_sold_date_sk_1:=ss_sold_date_sk, ss_store_sk_1:=ss_store_sk
                           │     │     │     │     └─ Repartition Exchange est. ? rows
                           │     │     │     │        │     Partition by: {s_store_sk_1}
                           │     │     │     │        └─ Filter est. ? rows
                           │     │     │     │           │     Condition: s_gmt_offset_1 = -5.
                           │     │     │     │           └─ TableScan tpcds.store est. ? rows
                           │     │     │     │                    Outputs: s_gmt_offset_1:=s_gmt_offset, s_store_sk_1:=s_store_sk
                           │     │     │     └─ Repartition Exchange est. ? rows
                           │     │     │        │     Partition by: {d_date_sk_1}
                           │     │     │        └─ Filter est. ? rows
                           │     │     │           │     Condition: (d_moy_1 = 11) AND (d_year_1 = 1998)
                           │     │     │           └─ TableScan tpcds.date_dim est. ? rows
                           │     │     │                    Outputs: d_date_sk_1:=d_date_sk, d_moy_1:=d_moy, d_year_1:=d_year
                           │     │     └─ Repartition Exchange est. ? rows
                           │     │        │     Partition by: {c_customer_sk_1}
                           │     │        └─ TableScan tpcds.customer est. ? rows
                           │     │                 Outputs: c_current_addr_sk_1:=c_current_addr_sk, c_customer_sk_1:=c_customer_sk
                           │     └─ Repartition Exchange est. ? rows
                           │        │     Partition by: {ca_address_sk_1}
                           │        └─ Filter est. ? rows
                           │           │     Condition: ca_gmt_offset_1 = -5.
                           │           └─ TableScan tpcds.customer_address est. ? rows
                           │                    Outputs: ca_address_sk_1:=ca_address_sk, ca_gmt_offset_1:=ca_gmt_offset
                           └─ Repartition Exchange est. ? rows
                              │     Partition by: {i_item_sk_1}
                              └─ Filter est. ? rows
                                 │     Condition: i_category_1 = 'Jewelry'
                                 └─ TableScan tpcds.item est. ? rows
                                          Outputs: i_category_1:=i_category, i_item_sk_1:=i_item_sk
