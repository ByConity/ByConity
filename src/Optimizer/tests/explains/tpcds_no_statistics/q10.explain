Projection Est. 100 rows
│     Expressions: [cd_credit_rating, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_education_status, cd_gender, cd_marital_status, cd_purchase_estimate], cnt1:=`expr#count()`, cnt2:=`expr#count()`, cnt3:=`expr#count()`, cnt4:=`expr#count()`, cnt5:=`expr#count()`, cnt6:=`expr#count()`
└─ Limit Est. 100 rows
   │     Limit: 100
   └─ Sorting Est. 100 rows
      │     Order by: {cd_gender asc, cd_marital_status asc, cd_education_status asc, cd_purchase_estimate asc, cd_credit_rating asc, cd_dep_count asc, cd_dep_employed_count asc, cd_dep_college_count asc}
      │     Limit: 100
      └─ Gather Exchange Est. ? rows
         └─ Sorting Est. 100 rows
            │     Order by: {cd_gender asc, cd_marital_status asc, cd_education_status asc, cd_purchase_estimate asc, cd_credit_rating asc, cd_dep_count asc, cd_dep_employed_count asc, cd_dep_college_count asc}
            │     Limit: 100
            └─ MergingAggregated Est. ? rows
               └─ Repartition Exchange Est. ? rows
                  │     Partition by: {cd_credit_rating, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_education_status, cd_gender, cd_marital_status, cd_purchase_estimate}
                  └─ Aggregating Est. ? rows
                     │     Group by: {cd_credit_rating, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_education_status, cd_gender, cd_marital_status, cd_purchase_estimate}
                     │     Aggregates: expr#count():=AggNull(count)()
                     └─ Projection Est. ? rows
                        │     Expressions: [cd_credit_rating, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_education_status, cd_gender, cd_marital_status, cd_purchase_estimate]
                        └─ Filter Est. ? rows
                           │     Condition: _exists_subquery_1 OR cast(coalesce(build_side_non_null_symbol_2, 0), 'UInt8')
                           └─ Left Join Est. ? rows
                              │     Condition: c_customer_sk == cs_ship_customer_sk
                              ├─ Projection Est. ? rows
                              │  │     Expressions: [c_customer_sk, cd_credit_rating, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_education_status, cd_gender, cd_marital_status, cd_purchase_estimate], _exists_subquery_1:=cast(coalesce(build_side_non_null_symbol_1, 0), 'UInt8')
                              │  └─ Left Join Est. ? rows
                              │     │     Condition: c_customer_sk == ws_bill_customer_sk
                              │     ├─ Inner Join Est. ? rows
                              │     │  │     Condition: c_customer_sk == ss_customer_sk
                              │     │  ├─ Repartition Exchange Est. ? rows
                              │     │  │  │     Partition by: {c_customer_sk}
                              │     │  │  └─ Inner Join Est. ? rows
                              │     │  │     │     Condition: c_current_cdemo_sk == cd_demo_sk
                              │     │  │     ├─ Repartition Exchange Est. ? rows
                              │     │  │     │  │     Partition by: {c_current_cdemo_sk}
                              │     │  │     │  └─ Inner Join Est. ? rows
                              │     │  │     │     │     Condition: c_current_addr_sk == ca_address_sk
                              │     │  │     │     ├─ Repartition Exchange Est. ? rows
                              │     │  │     │     │  │     Partition by: {c_current_addr_sk}
                              │     │  │     │     │  └─ TableScan tpcds.customer Est. ? rows
                              │     │  │     │     │           Outputs: [c_current_addr_sk, c_current_cdemo_sk, c_customer_sk]
                              │     │  │     │     └─ Repartition Exchange Est. ? rows
                              │     │  │     │        │     Partition by: {ca_address_sk}
                              │     │  │     │        └─ Filter Est. ? rows
                              │     │  │     │           │     Condition: ca_county IN ('Dona Ana County', 'Jefferson County', 'La Porte County', 'Rush County', 'Toole County')
                              │     │  │     │           └─ TableScan tpcds.customer_address Est. ? rows
                              │     │  │     │                    Condition : ca_county IN ('Dona Ana County', 'Jefferson County', 'La Porte County', 'Rush County', 'Toole County').
                              │     │  │     │                    Outputs: [ca_address_sk, ca_county]
                              │     │  │     └─ Repartition Exchange Est. ? rows
                              │     │  │        │     Partition by: {cd_demo_sk}
                              │     │  │        └─ TableScan tpcds.customer_demographics Est. ? rows
                              │     │  │                 Outputs: [cd_credit_rating, cd_demo_sk, cd_dep_college_count, cd_dep_count, cd_dep_employed_count, cd_education_status, cd_gender, cd_marital_status, cd_purchase_estimate]
                              │     │  └─ MergingAggregated Est. ? rows
                              │     │     └─ Repartition Exchange Est. ? rows
                              │     │        │     Partition by: {ss_customer_sk}
                              │     │        └─ Aggregating Est. ? rows
                              │     │           │     Group by: {ss_customer_sk}
                              │     │           └─ Inner Join Est. ? rows
                              │     │              │     Condition: ss_sold_date_sk == d_date_sk
                              │     │              ├─ Repartition Exchange Est. ? rows
                              │     │              │  │     Partition by: {ss_sold_date_sk}
                              │     │              │  └─ TableScan tpcds.store_sales Est. ? rows
                              │     │              │           Outputs: [ss_customer_sk, ss_sold_date_sk]
                              │     │              └─ Repartition Exchange Est. ? rows
                              │     │                 │     Partition by: {d_date_sk}
                              │     │                 └─ Filter Est. ? rows
                              │     │                    │     Condition: (d_year = 2002) AND (d_moy >= 1) AND (d_moy <= 4)
                              │     │                    └─ TableScan tpcds.date_dim Est. ? rows
                              │     │                             Condition : (d_year = 2002) AND (d_moy >= 1) AND (d_moy <= 4).
                              │     │                             Outputs: [d_date_sk, d_moy, d_year]
                              │     └─ Projection Est. ? rows
                              │        │     Expressions: [ws_bill_customer_sk], build_side_non_null_symbol_1:=1
                              │        └─ MergingAggregated Est. ? rows
                              │           └─ Repartition Exchange Est. ? rows
                              │              │     Partition by: {ws_bill_customer_sk}
                              │              └─ Aggregating Est. ? rows
                              │                 │     Group by: {ws_bill_customer_sk}
                              │                 └─ Inner Join Est. ? rows
                              │                    │     Condition: ws_sold_date_sk == d_date_sk_1
                              │                    ├─ Repartition Exchange Est. ? rows
                              │                    │  │     Partition by: {ws_sold_date_sk}
                              │                    │  └─ TableScan tpcds.web_sales Est. ? rows
                              │                    │           Outputs: [ws_bill_customer_sk, ws_sold_date_sk]
                              │                    └─ Repartition Exchange Est. ? rows
                              │                       │     Partition by: {d_date_sk_1}
                              │                       └─ Filter Est. ? rows
                              │                          │     Condition: (d_year_1 = 2002) AND (d_moy_1 >= 1) AND (d_moy_1 <= 4)
                              │                          └─ TableScan tpcds.date_dim Est. ? rows
                              │                                   Condition : (d_year = 2002) AND (d_moy >= 1) AND (d_moy <= 4).
                              │                                   Outputs: d_date_sk_1:=d_date_sk, d_moy_1:=d_moy, d_year_1:=d_year
                              └─ Projection Est. ? rows
                                 │     Expressions: [cs_ship_customer_sk], build_side_non_null_symbol_2:=1
                                 └─ MergingAggregated Est. ? rows
                                    └─ Repartition Exchange Est. ? rows
                                       │     Partition by: {cs_ship_customer_sk}
                                       └─ Aggregating Est. ? rows
                                          │     Group by: {cs_ship_customer_sk}
                                          └─ Inner Join Est. ? rows
                                             │     Condition: cs_sold_date_sk == d_date_sk_2
                                             ├─ Repartition Exchange Est. ? rows
                                             │  │     Partition by: {cs_sold_date_sk}
                                             │  └─ TableScan tpcds.catalog_sales Est. ? rows
                                             │           Outputs: [cs_ship_customer_sk, cs_sold_date_sk]
                                             └─ Repartition Exchange Est. ? rows
                                                │     Partition by: {d_date_sk_2}
                                                └─ Filter Est. ? rows
                                                   │     Condition: (d_year_2 = 2002) AND (d_moy_2 >= 1) AND (d_moy_2 <= 4)
                                                   └─ TableScan tpcds.date_dim Est. ? rows
                                                            Condition : (d_year = 2002) AND (d_moy >= 1) AND (d_moy <= 4).
                                                            Outputs: d_date_sk_2:=d_date_sk, d_moy_2:=d_moy, d_year_2:=d_year
