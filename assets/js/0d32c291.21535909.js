"use strict";(self.webpackChunkbyconity=self.webpackChunkbyconity||[]).push([[6465],{9613:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>c});var a=t(9496);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=a.createContext({}),u=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=u(t),k=l,c=m["".concat(s,".").concat(k)]||m[k]||d[k]||r;return t?a.createElement(c,i(i({ref:n},p),{},{components:t})):a.createElement(c,i({ref:n},p))}));function c(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=k;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[m]="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=t[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},8656:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=t(4778),l=(t(9496),t(9613));const r={title:"Others",slug:"others",hidden:!0,createdAt:"2021-07-29T12:25:27.577Z",updatedAt:"2021-07-29T12:25:27.577Z",tags:["Docs"]},i=void 0,o={unversionedId:"SQL\u8bed\u6cd5\u8bf4\u660e/functions/others",id:"SQL\u8bed\u6cd5\u8bf4\u660e/functions/others",title:"Others",description:"MACNumToString",source:"@site/../docs/en/SQL\u8bed\u6cd5\u8bf4\u660e/functions/others.mdx",sourceDirName:"SQL\u8bed\u6cd5\u8bf4\u660e/functions",slug:"/SQL\u8bed\u6cd5\u8bf4\u660e/functions/others",permalink:"/docs/SQL\u8bed\u6cd5\u8bf4\u660e/functions/others",draft:!1,editUrl:"https://github.com/ByConity/ByConity/tree/main/website/../docs/en/SQL\u8bed\u6cd5\u8bf4\u660e/functions/others.mdx",tags:[{label:"Docs",permalink:"/docs/tags/docs"}],version:"current",frontMatter:{title:"Others",slug:"others",hidden:!0,createdAt:"2021-07-29T12:25:27.577Z",updatedAt:"2021-07-29T12:25:27.577Z",tags:["Docs"]},sidebar:"tutorialSidebar",previous:{title:"Nullable",permalink:"/docs/SQL\u8bed\u6cd5\u8bf4\u660e/functions/nullable"},next:{title:"Random",permalink:"/docs/SQL\u8bed\u6cd5\u8bf4\u660e/functions/random"}},s={},u=[{value:"MACNumToString",id:"macnumtostring",level:2},{value:"MACStringToNum",id:"macstringtonum",level:2},{value:"MACStringToOUI",id:"macstringtooui",level:2},{value:"auc",id:"auc",level:2},{value:"bar",id:"bar",level:2},{value:"blockNumber",id:"blocknumber",level:2},{value:"blockSize",id:"blocksize",level:2},{value:"currentDatabase",id:"currentdatabase",level:2},{value:"defaultValueOfArgumentType",id:"defaultvalueofargumenttype",level:2},{value:"dumpColumnStructure",id:"dumpcolumnstructure",level:2},{value:"filesystemAvailable",id:"filesystemavailable",level:2},{value:"filesystemCapacity",id:"filesystemcapacity",level:2},{value:"filesystemFree",id:"filesystemfree",level:2},{value:"finalizeAggregation",id:"finalizeaggregation",level:2},{value:"formatReadableSize(x)",id:"formatreadablesizex",level:2},{value:"globalIn",id:"globalin",level:2},{value:"globalNotIn",id:"globalnotin",level:2},{value:"has",id:"has",level:2},{value:"hasColumnInTable",id:"hascolumnintable",level:2},{value:"hostName",id:"hostname",level:2},{value:"identity",id:"identity",level:2},{value:"if",id:"if",level:2},{value:"ignore",id:"ignore",level:2},{value:"indexHint",id:"indexhint",level:2},{value:"isFinite",id:"isfinite",level:2},{value:"isInfinite",id:"isinfinite",level:2},{value:"isNaN",id:"isnan",level:2},{value:"joinGet",id:"joinget",level:2},{value:"least",id:"least",level:2},{value:"log",id:"log",level:2},{value:"materialize",id:"materialize",level:2},{value:"modelEvaluate",id:"modelevaluate",level:2},{value:"regionHierarchy",id:"regionhierarchy",level:2},{value:"regionIn",id:"regionin",level:2},{value:"regionToArea",id:"regiontoarea",level:2},{value:"regionToCity",id:"regiontocity",level:2},{value:"regionToContinent",id:"regiontocontinent",level:2},{value:"regionToCountry",id:"regiontocountry",level:2},{value:"regionToDistrict",id:"regiontodistrict",level:2},{value:"regionToName",id:"regiontoname",level:2},{value:"regionToPopulation",id:"regiontopopulation",level:2},{value:"regionToTopContinent",id:"regiontotopcontinent",level:2},{value:"replicate",id:"replicate",level:2},{value:"rowNumberInAllBlocks",id:"rownumberinallblocks",level:2},{value:"rowNumberInBlock",id:"rownumberinblock",level:2},{value:"runningAccumulate",id:"runningaccumulate",level:2},{value:"runningDifference",id:"runningdifference",level:2},{value:"runningDifferenceStartingWithFirstValue",id:"runningdifferencestartingwithfirstvalue",level:2},{value:"sleep",id:"sleep",level:2},{value:"sleepEachRow",id:"sleepeachrow",level:2},{value:"throwIf",id:"throwif",level:2},{value:"toColumnTypeName",id:"tocolumntypename",level:2},{value:"toTypeName",id:"totypename",level:2},{value:"transform",id:"transform",level:2},{value:"uptime",id:"uptime",level:2},{value:"version",id:"version",level:2},{value:"visibleWidth",id:"visiblewidth",level:2}],p={toc:u},m="wrapper";function d(e){let{components:n,...t}=e;return(0,l.kt)(m,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"macnumtostring"},"MACNumToString"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nMACNumToString(num)\n\n")),(0,l.kt)("p",null,"Accepts a UInt64 number. Interprets it as a MAC address in big endian. Returns a string containing the corresponding MAC address in the format AA:BB:CC:DD:EE:FF (colon-separated numbers in hexadecimal form)."),(0,l.kt)("h2",{id:"macstringtonum"},"MACStringToNum"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nMACNumToString(num)\n\n")),(0,l.kt)("p",null,"The inverse function of MACNumToString. If the MAC address has an invalid format, it returns 0."),(0,l.kt)("h2",{id:"macstringtooui"},"MACStringToOUI"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nMACStringToOUI(s)\n\n")),(0,l.kt)("p",null,"Accepts a MAC address in the format AA:BB:CC:DD:EE:FF (colon-separated numbers in hexadecimal form). Returns the first three octets as a UInt64 number. If the MAC address has an invalid format, it returns 0."),(0,l.kt)("h2",{id:"auc"},"auc"),(0,l.kt)("p",null,"Calculate AUC (Area Under the Curve, which is a concept in machine learning, see more details: ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Receiver_operating_characteristic#Area_under_the_curve"},"https://en.wikipedia.org/wiki/Receiver_operating_characteristic#Area_under_the_curve")," )."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\narrayAUC(arr_scores, arr_labels)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"arr_scores")," \u2014 scores prediction model gives. ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"arr_labels")," \u2014 labels of samples, usually 1 for positive sample and 0 for negtive sample. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("p",null,"Returns AUC value with type Float64."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nselect arrayAUC([0.1, 0.4, 0.35, 0.8], [0, 0, 1, 1]);\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500arrayAUC([0.1, 0.4, 0.35, 0.8], [0, 0, 1, 1])\u2500\u2510\n\n\u2502                                          0.75 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"bar"},"bar"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nbar(x, min, max, width)\n\n")),(0,l.kt)("p",null,"Allows building a unicode-art diagram."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"bar(x, min, max, width)")," draws a band with a width proportional to ",(0,l.kt)("inlineCode",{parentName:"p"},"(x - min)")," and equal to ",(0,l.kt)("inlineCode",{parentName:"p"},"width")," characters when ",(0,l.kt)("inlineCode",{parentName:"p"},"x = max")," ."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"x")," \u2014 Size to display. ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"min, max")," \u2014 Integer constants. The value must fit in ",(0,l.kt)("inlineCode",{parentName:"li"},"Int64")," . ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"width")," \u2014 Constant, positive integer, can be fractional. ")),(0,l.kt)("p",null,"The band is drawn with accuracy to one eighth of a symbol."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT\n\n    toHour(EventTime) AS h,\n\n    count() AS c,\n\n    bar(c, 0, 600000, 20) AS bar\n\nFROM test.hits\n\nGROUP BY h\n\nORDER BY h ASC\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500\u2500h\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500c\u2500\u252c\u2500bar\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\n\u2502  0 \u2502 292907 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258b         \u2502\n\n\u2502  1 \u2502 180563 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588             \u2502\n\n\u2502  2 \u2502 114861 \u2502 \u2588\u2588\u2588\u258b               \u2502\n\n\u2502  3 \u2502  85069 \u2502 \u2588\u2588\u258b                \u2502\n\n\u2502  4 \u2502  68543 \u2502 \u2588\u2588\u258e                \u2502\n\n\u2502  5 \u2502  78116 \u2502 \u2588\u2588\u258c                \u2502\n\n\u2502  6 \u2502 113474 \u2502 \u2588\u2588\u2588\u258b               \u2502\n\n\u2502  7 \u2502 170678 \u2502 \u2588\u2588\u2588\u2588\u2588\u258b             \u2502\n\n\u2502  8 \u2502 278380 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e         \u2502\n\n\u2502  9 \u2502 391053 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588      \u2502\n\n\u2502 10 \u2502 457681 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e   \u2502\n\n\u2502 11 \u2502 493667 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d  \u2502\n\n\u2502 12 \u2502 509641 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  \u2502\n\n\u2502 13 \u2502 522947 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d \u2502\n\n\u2502 14 \u2502 539954 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a \u2502\n\n\u2502 15 \u2502 528460 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258c \u2502\n\n\u2502 16 \u2502 539201 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a \u2502\n\n\u2502 17 \u2502 523539 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d \u2502\n\n\u2502 18 \u2502 506467 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258a  \u2502\n\n\u2502 19 \u2502 520915 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e \u2502\n\n\u2502 20 \u2502 521665 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d \u2502\n\n\u2502 21 \u2502 542078 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2502\n\n\u2502 22 \u2502 493642 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258d  \u2502\n\n\u2502 23 \u2502 400397 \u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u258e     \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"blocknumber"},"blockNumber"),(0,l.kt)("p",null,"Returns the sequence number of the data block where the row is located."),(0,l.kt)("h2",{id:"blocksize"},"blockSize"),(0,l.kt)("p",null,"Gets the size of the block."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nblockSize()\n\n")),(0,l.kt)("p",null,"In ByConity, queries are always run on blocks (sets of column parts). This function allows getting the size of the block that you called it for."),(0,l.kt)("h2",{id:"currentdatabase"},"currentDatabase"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\ncurrentDatabase()\n\n")),(0,l.kt)("p",null,"Returns the name of the current database."),(0,l.kt)("p",null,"You can use this function in table engine parameters in a CREATE TABLE query where you need to specify the database."),(0,l.kt)("h2",{id:"defaultvalueofargumenttype"},"defaultValueOfArgumentType"),(0,l.kt)("p",null,"Outputs the default value for the data type. Does not include default values for custom columns set by the user."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\ndefaultValueOfArgumentType(expression)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"expression")," \u2014 Arbitrary type of value or an expression that results in a value of an arbitrary type. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned values")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"0")," for numbers. ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Empty string for strings. ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"\u1d3a\u1d41\u1d38\u1d38")," for ",(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/sql-reference/data-types/nullable.md"},"Nullable")," . ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT defaultValueOfArgumentType( CAST(1 AS Int8) )\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500defaultValueOfArgumentType(CAST(1, 'Int8'))\u2500\u2510\n\n\u2502                                           0 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT defaultValueOfArgumentType( CAST(1 AS Nullable(Int8) ) )\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500defaultValueOfArgumentType(CAST(1, 'Nullable(Int8)'))\u2500\u2510\n\n\u2502                                                  \u1d3a\u1d41\u1d38\u1d38 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"dumpcolumnstructure"},"dumpColumnStructure"),(0,l.kt)("p",null,"Outputs a detailed description of data structures in RAM"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\ndumpColumnStructure(value)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," \u2014 Any type of value. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned values")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A string describing the structure that is used for representing the ",(0,l.kt)("inlineCode",{parentName:"li"},"value")," data type in RAM. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT dumpColumnStructure(CAST('2018-01-01 01:02:03', 'DateTime'))\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500dumpColumnStructure(CAST('2018-01-01 01:02:03', 'DateTime'))\u2500\u2510\n\n\u2502 DateTime, Const(size = 1, UInt32(size = 1))                  \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"filesystemavailable"},"filesystemAvailable"),(0,l.kt)("p",null,"Returns amount of remaining space on the filesystem where the files of the databases located. It is always smaller than total free space ( ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/docs/doccnFkHpok0xssNrwscSUDfwNG#filesystemfree"},"filesystemFree")," ) because some space is reserved for OS."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nfilesystemAvailable()\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The amount of remaining space available in bytes. ")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/data-types/int-uint.md"},"UInt64")," ."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'\nSELECT formatReadableSize(filesystemAvailable()) AS "Available space", toTypeName(filesystemAvailable()) AS "Type";\n\n')),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500Available space\u2500\u252c\u2500Type\u2500\u2500\u2500\u2510\n\n\u2502 30.75 GiB       \u2502 UInt64 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"filesystemcapacity"},"filesystemCapacity"),(0,l.kt)("p",null,"Returns the capacity of the filesystem in bytes. For evaluation, the ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/operations/server-configuration-parameters/settings.md#server_configuration_parameters-path"},"path")," to the data directory must be configured."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nfilesystemCapacity()\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Capacity information of the filesystem in bytes. ")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/data-types/int-uint.md"},"UInt64")," ."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'\nSELECT formatReadableSize(filesystemCapacity()) AS "Capacity", toTypeName(filesystemCapacity()) AS "Type"\n\n')),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500Capacity\u2500\u2500\u252c\u2500Type\u2500\u2500\u2500\u2510\n\n\u2502 39.32 GiB \u2502 UInt64 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"filesystemfree"},"filesystemFree"),(0,l.kt)("p",null,"Returns total amount of the free space on the filesystem where the files of the databases located. See also ",(0,l.kt)("inlineCode",{parentName:"p"},"filesystemAvailable")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nfilesystemFree()\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Amount of free space in bytes. ")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/data-types/int-uint.md"},"UInt64")," ."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},'\nSELECT formatReadableSize(filesystemFree()) AS "Free space", toTypeName(filesystemFree()) AS "Type";\n\n')),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500Free space\u2500\u252c\u2500Type\u2500\u2500\u2500\u2510\n\n\u2502 32.39 GiB  \u2502 UInt64 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"finalizeaggregation"},"finalizeAggregation"),(0,l.kt)("p",null,"Takes state of aggregate function. Returns result of aggregation (or finalized state when using ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/aggregate-functions/combinators.md#agg-functions-combinator-state"},"-State")," combinator)."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nfinalizeAggregation(state)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"state")," \u2014 State of aggregation. ",(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/sql-reference/data-types/aggregatefunction.md#data-type-aggregatefunction"},"AggregateFunction")," . ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value(s)")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Value/values that was aggregated. ")),(0,l.kt)("p",null,"Type: Value of any types that was aggregated."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT finalizeAggregation(( SELECT countState(number) FROM numbers(10)));\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500finalizeAggregation(_subquery16)\u2500\u2510\n\n\u2502                               10 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT finalizeAggregation(( SELECT sumState(number) FROM numbers(10)));\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500finalizeAggregation(_subquery20)\u2500\u2510\n\n\u2502                               45 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"Note that ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," values are ignored."),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT finalizeAggregation(arrayReduce('anyState', [NULL, 2, 3]));\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500finalizeAggregation(arrayReduce('anyState', [NULL, 2, 3]))\u2500\u2510\n\n\u2502                                                          2 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"Combined example:"),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nWITH initializeAggregation('sumState', number) AS one_row_sum_state\n\nSELECT\n\n    number,\n\n    finalizeAggregation(one_row_sum_state) AS one_row_sum,\n\n    runningAccumulate(one_row_sum_state) AS cumulative_sum\n\nFROM numbers(10);\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500number\u2500\u252c\u2500one_row_sum\u2500\u252c\u2500cumulative_sum\u2500\u2510\n\n\u2502      0 \u2502           0 \u2502              0 \u2502\n\n\u2502      1 \u2502           1 \u2502              1 \u2502\n\n\u2502      2 \u2502           2 \u2502              3 \u2502\n\n\u2502      3 \u2502           3 \u2502              6 \u2502\n\n\u2502      4 \u2502           4 \u2502             10 \u2502\n\n\u2502      5 \u2502           5 \u2502             15 \u2502\n\n\u2502      6 \u2502           6 \u2502             21 \u2502\n\n\u2502      7 \u2502           7 \u2502             28 \u2502\n\n\u2502      8 \u2502           8 \u2502             36 \u2502\n\n\u2502      9 \u2502           9 \u2502             45 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"See Also")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/sql-reference/functions/array-functions.md#arrayreduce"},"arrayReduce")," ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/docs/doccnFkHpok0xssNrwscSUDfwNG#initializeaggregation"},"initializeAggregation")," ")),(0,l.kt)("h2",{id:"formatreadablesizex"},"formatReadableSize(x)"),(0,l.kt)("p",null,"formatReadableSize(x)\nAccepts the size (number of bytes). Returns a rounded size with a suffix (KiB, MiB, etc.) as a string."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT\n    arrayJoin([1, 1024, 1024*1024, 192851925]) AS filesize_bytes,\n    formatReadableSize(filesize_bytes) AS filesize\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"\u250c\u2500filesize_bytes\u2500\u252c\u2500filesize\u2500\u2500\u2500\u2510\n\u2502              1 \u2502 1.00 B     \u2502\n\u2502           1024 \u2502 1.00 KiB   \u2502\n\u2502        1048576 \u2502 1.00 MiB   \u2502\n\u2502      192851925 \u2502 183.92 MiB \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u200b```## getSizeOfEnumType\n\n\nReturns the number of fields in [Enum](https://bytedance.feishu.cn/sql-reference/data-types/enum.md) .\n\n**Syntax**\n\n\u200b```sql\n\ngetSizeOfEnumType(value)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," \u2014 Value of type ",(0,l.kt)("inlineCode",{parentName:"li"},"Enum")," . ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned values")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The number of fields with ",(0,l.kt)("inlineCode",{parentName:"li"},"Enum")," input values. ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"An exception is thrown if the type is not ",(0,l.kt)("inlineCode",{parentName:"li"},"Enum")," . ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT getSizeOfEnumType( CAST('a' AS Enum8('a' = 1, 'b' = 2) ) ) AS x\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500x\u2500\u2510\n\n\u2502 2 \u2502\n\n\u2514\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"globalin"},"globalIn"),(0,l.kt)("p",null,"in, notIn, globalIn, globalNotIn {#in-functions}"),(0,l.kt)("p",null,"See the section ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/operators/in.md#select-in-operators"},"IN operators")," ."),(0,l.kt)("h2",{id:"globalnotin"},"globalNotIn"),(0,l.kt)("p",null,"in, notIn, globalIn, globalNotIn {#in-functions}"),(0,l.kt)("p",null,"See the section ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/operators/in.md#select-in-operators"},"IN operators")," ."),(0,l.kt)("h2",{id:"has"},"has"),(0,l.kt)("p",null,"has(arr, elem)"),(0,l.kt)("p",null,"Checks whether the \u2018arr\u2019 array has the \u2018elem\u2019 element."),(0,l.kt)("p",null,"Returns 0 if the element is not in the array, or 1 if it is."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," is processed as a value."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT has([1, 2, NULL], NULL)\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500has([1, 2, NULL], NULL)\u2500\u2510\n\n\u2502                       1 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"hascolumnintable"},"hasColumnInTable"),(0,l.kt)("p",null,"hasColumnInTable([\u2018hostname\u2019[, \u2018username\u2019","[, \u2018password\u2019]","],] \u2018database\u2019, \u2018table\u2019, \u2018column\u2019) {#hascolumnintablehostname-username-password-database-table-column}"),(0,l.kt)("p",null,"Accepts constant strings: database name, table name, and column name. Returns a UInt8 constant expression equal to 1 if there is a column, otherwise 0. If the hostname parameter is set, the test will run on a remote server."),(0,l.kt)("p",null,"The function throws an exception if the table does not exist."),(0,l.kt)("p",null,"For elements in a nested data structure, the function checks for the existence of a column. For the nested data structure itself, the function returns 0."),(0,l.kt)("h2",{id:"hostname"},"hostName"),(0,l.kt)("p",null,"hostName()"),(0,l.kt)("p",null,"Returns a string with the name of the host that this function was performed on. For distributed processing, this is the name of the remote server host, if the function is performed on a remote server."),(0,l.kt)("h2",{id:"identity"},"identity"),(0,l.kt)("p",null,"Returns the same value that was used as its argument. Used for debugging and testing, allows to cancel using index, and get the query performance of a full scan. When query is analyzed for possible use of index, the analyzer does not look inside ",(0,l.kt)("inlineCode",{parentName:"p"},"identity")," functions. Also constant folding is not applied too."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nidentity(x)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT identity(42)\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500identity(42)\u2500\u2510\n\n\u2502           42 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"if"},"if"),(0,l.kt)("p",null,"Controls conditional branching. Unlike most systems, ByConity always evaluate both expressions ",(0,l.kt)("inlineCode",{parentName:"p"},"then")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"else")," ."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT if(cond, then, else)\n\n")),(0,l.kt)("p",null,"If the condition ",(0,l.kt)("inlineCode",{parentName:"p"},"cond")," evaluates to a non-zero value, returns the result of the expression ",(0,l.kt)("inlineCode",{parentName:"p"},"then")," , and the result of the expression ",(0,l.kt)("inlineCode",{parentName:"p"},"else")," , if present, is skipped. If the ",(0,l.kt)("inlineCode",{parentName:"p"},"cond")," is zero or ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," , then the result of the ",(0,l.kt)("inlineCode",{parentName:"p"},"then")," expression is skipped and the result of the ",(0,l.kt)("inlineCode",{parentName:"p"},"else")," expression, if present, is returned."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cond")," \u2013 The condition for evaluation that can be zero or not. The type is UInt8, Nullable(UInt8) or NULL. ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"then")," \u2013 The expression to return if condition is met. ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"else")," \u2013 The expression to return if condition is not met. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned values")),(0,l.kt)("p",null,"The function executes ",(0,l.kt)("inlineCode",{parentName:"p"},"then")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"else")," expressions and returns its result, depending on whether the condition ",(0,l.kt)("inlineCode",{parentName:"p"},"cond")," ended up being zero or not."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT if(1, plus(2, 2), plus(2, 6));\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500plus(2, 2)\u2500\u2510\n\n\u2502          4 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT if(0, plus(2, 2), plus(2, 6));\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500plus(2, 6)\u2500\u2510\n\n\u2502          8 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"then")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"else")," must have the lowest common type. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:")),(0,l.kt)("p",null,"Take this ",(0,l.kt)("inlineCode",{parentName:"p"},"LEFT_RIGHT")," table:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT *\n\nFROM LEFT_RIGHT\n\n\n\n\u250c\u2500left\u2500\u252c\u2500right\u2500\u2510\n\n\u2502 \u1d3a\u1d41\u1d38\u1d38 \u2502     4 \u2502\n\n\u2502    1 \u2502     3 \u2502\n\n\u2502    2 \u2502     2 \u2502\n\n\u2502    3 \u2502     1 \u2502\n\n\u2502    4 \u2502  \u1d3a\u1d41\u1d38\u1d38 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"The following query compares ",(0,l.kt)("inlineCode",{parentName:"p"},"left")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"right")," values:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT\n\n    left,\n\n    right,\n\n    if(left < right, 'left is smaller than right', 'right is greater or equal than left') AS is_smaller\n\nFROM LEFT_RIGHT\n\nWHERE isNotNull(left) AND isNotNull(right)\n\n\n\n\u250c\u2500left\u2500\u252c\u2500right\u2500\u252c\u2500is_smaller\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\n\u2502    1 \u2502     3 \u2502 left is smaller than right          \u2502\n\n\u2502    2 \u2502     2 \u2502 right is greater or equal than left \u2502\n\n\u2502    3 \u2502     1 \u2502 right is greater or equal than left \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"Note: ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," values are not used in this example, check ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/docs/doccnZ2mgKjAAc5rAc62DusGjq1#null-values-in-conditionals"},"NULL values in conditionals")," section."),(0,l.kt)("h2",{id:"ignore"},"ignore"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nignore(\u2026) \n\n")),(0,l.kt)("p",null,"Accepts any arguments, including ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," . Always returns 0."),(0,l.kt)("p",null,"However, the argument is still evaluated. This can be used for benchmarks."),(0,l.kt)("h2",{id:"indexhint"},"indexHint"),(0,l.kt)("p",null,"The function is intended for debugging and introspection purposes. The function ignores it's argument and always returns 1. Arguments are not even evaluated."),(0,l.kt)("p",null,"But for the purpose of index analysis, the argument of this function is analyzed as if it was present directly without being wrapped inside ",(0,l.kt)("inlineCode",{parentName:"p"},"indexHint")," function. This allows to select data in index ranges by the corresponding condition but without further filtering by this condition. The index in ByConity is sparse and using ",(0,l.kt)("inlineCode",{parentName:"p"},"indexHint")," will yield more data than specifying the same condition directly."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT * FROM table WHERE indexHint(<expression>)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},"Type: ",(0,l.kt)("a",{parentName:"li",href:"https://clickhouse.yandex/docs/en/data_types/int_uint/#diapazony-uint"},"Uint8")," . ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Here is the example of test data from the table ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/getting-started/example-datasets/ontime.md"},"ontime")," ."),(0,l.kt)("p",null,"Input table:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT count() FROM ontime\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500count()\u2500\u2510\n\n\u2502 4276457 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"The table has indexes on the fields ",(0,l.kt)("inlineCode",{parentName:"p"},"(FlightDate, (Year, FlightDate))")," ."),(0,l.kt)("p",null,"Create a query, where the index is not used."),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT FlightDate AS k, count() FROM ontime GROUP BY k ORDER BY k\n\n")),(0,l.kt)("p",null,"ByConity processed the entire table ( ",(0,l.kt)("inlineCode",{parentName:"p"},"Processed 4.28 million rows")," )."),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500k\u2500\u252c\u2500count()\u2500\u2510\n\n\u2502 2017-01-01 \u2502   13970 \u2502\n\n\u2502 2017-01-02 \u2502   15882 \u2502\n\n........................\n\n\u2502 2017-09-28 \u2502   16411 \u2502\n\n\u2502 2017-09-29 \u2502   16384 \u2502\n\n\u2502 2017-09-30 \u2502   12520 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"To apply the index, select a specific date."),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT FlightDate AS k, count() FROM ontime WHERE k = '2017-09-15' GROUP BY k ORDER BY k\n\n")),(0,l.kt)("p",null,"By using the index, ByConity processed a significantly smaller number of rows ( ",(0,l.kt)("inlineCode",{parentName:"p"},"Processed 32.74 thousand rows")," )."),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500k\u2500\u252c\u2500count()\u2500\u2510\n\n\u2502 2017-09-15 \u2502   16428 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"Now wrap the expression ",(0,l.kt)("inlineCode",{parentName:"p"},"k = '2017-09-15'")," into ",(0,l.kt)("inlineCode",{parentName:"p"},"indexHint")," function."),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT\n\n    FlightDate AS k,\n\n    count()\n\nFROM ontime\n\nWHERE indexHint(k = '2017-09-15')\n\nGROUP BY k\n\nORDER BY k ASC\n\n")),(0,l.kt)("p",null,"ByConity used the index in the same way as the previous time ( ",(0,l.kt)("inlineCode",{parentName:"p"},"Processed 32.74 thousand rows")," )."),(0,l.kt)("p",null,"The expression ",(0,l.kt)("inlineCode",{parentName:"p"},"k = '2017-09-15'")," was not used when generating the result."),(0,l.kt)("p",null,"In examle the ",(0,l.kt)("inlineCode",{parentName:"p"},"indexHint")," function allows to see adjacent dates."),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500k\u2500\u252c\u2500count()\u2500\u2510\n\n\u2502 2017-09-14 \u2502    7071 \u2502\n\n\u2502 2017-09-15 \u2502   16428 \u2502\n\n\u2502 2017-09-16 \u2502    1077 \u2502\n\n\u2502 2017-09-30 \u2502    8167 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"isfinite"},"isFinite"),(0,l.kt)("p",null,"isFinite(x)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nisFinite(x)\n\n")),(0,l.kt)("p",null,"Accepts Float32 and Float64 and returns UInt8 equal to 1 if the argument is not infinite and not a NaN, otherwise 0."),(0,l.kt)("h2",{id:"isinfinite"},"isInfinite"),(0,l.kt)("p",null,"isInfinite(x)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nisInfinite(x)\n\n")),(0,l.kt)("p",null,"Accepts Float32 and Float64 and returns UInt8 equal to 1 if the argument is infinite, otherwise 0. Note that 0 is returned for a NaN."),(0,l.kt)("h2",{id:"isnan"},"isNaN"),(0,l.kt)("p",null,"isNaN(x)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nisNaN(x)\n\n")),(0,l.kt)("p",null,"Accepts Float32 and Float64 and returns UInt8 equal to 1 if the argument is a NaN, otherwise 0."),(0,l.kt)("h2",{id:"joinget"},"joinGet"),(0,l.kt)("p",null,"The function lets you extract data from the table the same way as from a ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/dictionaries/index.md"},"dictionary")," ."),(0,l.kt)("p",null,"Gets data from ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/engines/table-engines/special/join.md#creating-a-table"},"Join")," tables using the specified join key."),(0,l.kt)("p",null,"Only supports tables created with the ",(0,l.kt)("inlineCode",{parentName:"p"},"ENGINE = Join(ANY, LEFT, <join_keys>)")," statement."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\njoinGet(join_storage_table_name, `value_column`, join_keys)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"join_storage_table_name")," \u2014 an ",(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/sql-reference/syntax.md#syntax-identifiers"},"identifier")," indicates where search is performed. The identifier is searched in the default database (see parameter ",(0,l.kt)("inlineCode",{parentName:"li"},"default_database")," in the config file). To override the default database, use the ",(0,l.kt)("inlineCode",{parentName:"li"},"USE db_name")," or specify the database and the table through the separator ",(0,l.kt)("inlineCode",{parentName:"li"},"db_name.db_table")," , see the example. ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value_column")," \u2014 name of the column of the table that contains required data. ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"join_keys")," \u2014 list of keys. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("p",null,"Returns list of values corresponded to list of keys."),(0,l.kt)("p",null,"If certain does not exist in source table then ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," will be returned based on ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/operations/settings/settings.md#join_use_nulls"},"join_use_nulls")," setting."),(0,l.kt)("p",null,"More info about ",(0,l.kt)("inlineCode",{parentName:"p"},"join_use_nulls")," in ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/engines/table-engines/special/join.md"},"Join operation")," ."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Input table:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nCREATE DATABASE db_test\n\nCREATE TABLE db_test.id_val(`id` UInt32, `val` UInt32) ENGINE = Join(ANY, LEFT, id) SETTINGS join_use_nulls = 1\n\nINSERT INTO db_test.id_val VALUES (1,11)(2,12)(4,13)\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500id\u2500\u252c\u2500val\u2500\u2510\n\n\u2502  4 \u2502  13 \u2502\n\n\u2502  2 \u2502  12 \u2502\n\n\u2502  1 \u2502  11 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT joinGet(db_test.id_val,'val',toUInt32(number)) from numbers(4) SETTINGS join_use_nulls = 1\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500joinGet(db_test.id_val, 'val', toUInt32(number))\u2500\u2510\n\n\u2502                                                0 \u2502\n\n\u2502                                               11 \u2502\n\n\u2502                                               12 \u2502\n\n\u2502                                                0 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"least"},"least"),(0,l.kt)("p",null,"least(a, b)"),(0,l.kt)("p",null,"Returns the smallest value from a and b."),(0,l.kt)("h2",{id:"log"},"log"),(0,l.kt)("p",null,"log(x)"),(0,l.kt)("p",null,"Accepts a numeric argument and returns a Float64 number close to the natural logarithm of the argument."),(0,l.kt)("h2",{id:"materialize"},"materialize"),(0,l.kt)("p",null,"materialize(x)"),(0,l.kt)("p",null,"Turns a constant into a full column containing just one value."),(0,l.kt)("p",null,"In ByConity, full columns and constants are represented differently in memory. Functions work differently for constant arguments and normal arguments (different code is executed), although the result is almost always the same. This function is for debugging this behavior."),(0,l.kt)("h2",{id:"modelevaluate"},"modelEvaluate"),(0,l.kt)("p",null,"Evaluate external model."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nmodelEvaluate(model_name, \u2026) \n\n")),(0,l.kt)("p",null,"Accepts a model name and model arguments. Returns Float64."),(0,l.kt)("h2",{id:"regionhierarchy"},"regionHierarchy"),(0,l.kt)("p",null,"regionHierarchy(id","[, geobase]",") {#regionhierarchyid-geobase}"),(0,l.kt)("p",null,"Accepts a UInt32 number \u2013 the region ID from the Yandex geobase. Returns an array of region IDs consisting of the passed region and all parents along the chain."),(0,l.kt)("p",null,"Example: ",(0,l.kt)("inlineCode",{parentName:"p"},"regionHierarchy(toUInt32(213)) = [213,1,3,225,10001,10000]")," ."),(0,l.kt)("h2",{id:"regionin"},"regionIn"),(0,l.kt)("p",null,"regionIn(lhs, rhs","[, geobase]",") {#regioninlhs-rhs-geobase}"),(0,l.kt)("p",null,"Checks whether a \u2018lhs\u2019 region belongs to a \u2018rhs\u2019 region. Returns a UInt8 number equal to 1 if it belongs, or 0 if it does not belong."),(0,l.kt)("p",null,"The relationship is reflexive \u2013 any region also belongs to itself."),(0,l.kt)("h2",{id:"regiontoarea"},"regionToArea"),(0,l.kt)("p",null,"regionToArea(id","[, geobase]",")"),(0,l.kt)("p",null,"Converts a region to an area (type 5 in the geobase). In every other way, this function is the same as \u2018regionToCity\u2019."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT DISTINCT regionToName(regionToArea(toUInt32(number), 'ua'))\n\nFROM system.numbers\n\nLIMIT 15\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500regionToName(regionToArea(toUInt32(number), \\'ua\\'))\u2500\u2510\n\n\u2502                                                      \u2502\n\n\u2502 Moscow and Moscow region                             \u2502\n\n\u2502 St. Petersburg and Leningrad region                  \u2502\n\n\u2502 Belgorod region                                      \u2502\n\n\u2502 Ivanovsk region                                      \u2502\n\n\u2502 Kaluga region                                        \u2502\n\n\u2502 Kostroma region                                      \u2502\n\n\u2502 Kursk region                                         \u2502\n\n\u2502 Lipetsk region                                       \u2502\n\n\u2502 Orlov region                                         \u2502\n\n\u2502 Ryazan region                                        \u2502\n\n\u2502 Smolensk region                                      \u2502\n\n\u2502 Tambov region                                        \u2502\n\n\u2502 Tver region                                          \u2502\n\n\u2502 Tula region                                          \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"regiontocity"},"regionToCity"),(0,l.kt)("p",null,"regionToCity(id","[, geobase]",")"),(0,l.kt)("p",null,"Accepts a UInt32 number \u2013 the region ID from the Yandex geobase. If this region is a city or part of a city, it returns the region ID for the appropriate city. Otherwise, returns 0."),(0,l.kt)("h2",{id:"regiontocontinent"},"regionToContinent"),(0,l.kt)("p",null,"regionToContinent(id","[, geobase]",")"),(0,l.kt)("p",null,"Converts a region to a continent. In every other way, this function is the same as \u2018regionToCity\u2019."),(0,l.kt)("p",null,"Example: ",(0,l.kt)("inlineCode",{parentName:"p"},"regionToContinent(toUInt32(213)) = 10001")," converts Moscow (213) to Eurasia (10001)."),(0,l.kt)("h2",{id:"regiontocountry"},"regionToCountry"),(0,l.kt)("p",null,"regionToCountry(id","[, geobase]",")"),(0,l.kt)("p",null,"Converts a region to a country. In every other way, this function is the same as \u2018regionToCity\u2019."),(0,l.kt)("p",null,"Example: ",(0,l.kt)("inlineCode",{parentName:"p"},"regionToCountry(toUInt32(213)) = 225")," converts Moscow (213) to Russia (225)."),(0,l.kt)("h2",{id:"regiontodistrict"},"regionToDistrict"),(0,l.kt)("p",null,"regionToDistrict(id","[, geobase]",")"),(0,l.kt)("p",null,"Converts a region to a federal district (type 4 in the geobase). In every other way, this function is the same as \u2018regionToCity\u2019."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT DISTINCT regionToName(regionToDistrict(toUInt32(number), 'ua'))\n\nFROM system.numbers\n\nLIMIT 15\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500regionToName(regionToDistrict(toUInt32(number), \\'ua\\'))\u2500\u2510\n\n\u2502                                                          \u2502\n\n\u2502 Central federal district                                 \u2502\n\n\u2502 Northwest federal district                               \u2502\n\n\u2502 South federal district                                   \u2502\n\n\u2502 North Caucases federal district                          \u2502\n\n\u2502 Privolga federal district                                \u2502\n\n\u2502 Ural federal district                                    \u2502\n\n\u2502 Siberian federal district                                \u2502\n\n\u2502 Far East federal district                                \u2502\n\n\u2502 Scotland                                                 \u2502\n\n\u2502 Faroe Islands                                            \u2502\n\n\u2502 Flemish region                                           \u2502\n\n\u2502 Brussels capital region                                  \u2502\n\n\u2502 Wallonia                                                 \u2502\n\n\u2502 Federation of Bosnia and Herzegovina                     \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"regiontoname"},"regionToName"),(0,l.kt)("p",null,"regionToName(id","[, lang]",")"),(0,l.kt)("p",null,"Accepts a UInt32 number \u2013 the region ID from the Yandex geobase. A string with the name of the language can be passed as a second argument. Supported languages are: ru, en, ua, uk, by, kz, tr. If the second argument is omitted, the language \u2018ru\u2019 is used. If the language is not supported, an exception is thrown. Returns a string \u2013 the name of the region in the corresponding language. If the region with the specified ID does not exist, an empty string is returned."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"ua")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"uk")," both mean Ukrainian."),(0,l.kt)("h2",{id:"regiontopopulation"},"regionToPopulation"),(0,l.kt)("p",null,"regionToPopulation(id","[, geobase]",")"),(0,l.kt)("p",null,"Gets the population for a region."),(0,l.kt)("p",null,"The population can be recorded in files with the geobase. See the section \u201cExternal dictionaries\u201d."),(0,l.kt)("p",null,"If the population is not recorded for the region, it returns 0."),(0,l.kt)("p",null,"In the Yandex geobase, the population might be recorded for child regions, but not for parent regions."),(0,l.kt)("h2",{id:"regiontotopcontinent"},"regionToTopContinent"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"regionToTopContinent(id[, geobase])")),(0,l.kt)("p",null,"Finds the highest continent in the hierarchy for the region."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nregionToTopContinent(id[, geobase])\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"id")," \u2014 Region ID from the Yandex geobase. ",(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/sql-reference/data-types/int-uint.md"},"UInt32")," . ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"geobase")," \u2014 Dictionary key. See ",(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/docs/doccnFkHpok0xssNrwscSUDfwNG#multiple-geobases"},"Multiple Geobases")," . ",(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/sql-reference/data-types/string.md"},"String")," . Optional. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Identifier of the top level continent (the latter when you climb the hierarchy of regions). ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"0, if there is none. ")),(0,l.kt)("p",null,"Type: ",(0,l.kt)("inlineCode",{parentName:"p"},"UInt32")," ."),(0,l.kt)("h2",{id:"replicate"},"replicate"),(0,l.kt)("p",null,"Creates an array with a single value."),(0,l.kt)("p",null,"Used for internal implementation of ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/functions/array-join.md#functions_arrayjoin"},"arrayJoin")," ."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT replicate(x, arr);\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"arr")," \u2014 Original array. ByConity creates a new array of the same length as the original and fills it with the value ",(0,l.kt)("inlineCode",{parentName:"li"},"x")," . ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"x")," \u2014 The value that the resulting array will be filled with. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("p",null,"An array filled with the value ",(0,l.kt)("inlineCode",{parentName:"p"},"x")," ."),(0,l.kt)("p",null,"Type: ",(0,l.kt)("inlineCode",{parentName:"p"},"Array")," ."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT replicate(1, ['a', 'b', 'c'])\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500replicate(1, ['a', 'b', 'c'])\u2500\u2510\n\n\u2502 [1,1,1]                       \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"rownumberinallblocks"},"rowNumberInAllBlocks"),(0,l.kt)("p",null,"rowNumberInAllBlocks()"),(0,l.kt)("p",null,"Returns the ordinal number of the row in the data block. This function only considers the affected data blocks."),(0,l.kt)("h2",{id:"rownumberinblock"},"rowNumberInBlock"),(0,l.kt)("p",null,"Returns the ordinal number of the row in the data block. Different data blocks are always recalculated."),(0,l.kt)("h2",{id:"runningaccumulate"},"runningAccumulate"),(0,l.kt)("p",null,"Accumulates states of an aggregate function for each row of a data block."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Warning")),(0,l.kt)("p",null,"The state is reset for each new data block."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nrunningAccumulate(agg_state[, grouping]);\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"agg_state")," \u2014 State of the aggregate function. ",(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/sql-reference/data-types/aggregatefunction.md#data-type-aggregatefunction"},"AggregateFunction")," . ")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"grouping")," \u2014 Grouping key. Optional. The state of the function is reset if the ",(0,l.kt)("inlineCode",{parentName:"li"},"grouping")," value is changed. It can be any of the ",(0,l.kt)("a",{parentName:"li",href:"https://bytedance.feishu.cn/sql-reference/data-types/index.md"},"supported data types")," for which the equality operator is defined. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned value")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Each resulting row contains a result of the aggregate function, accumulated for all the input rows from 0 to the current position. ",(0,l.kt)("inlineCode",{parentName:"li"},"runningAccumulate")," resets states for each new data block or when the ",(0,l.kt)("inlineCode",{parentName:"li"},"grouping")," value changes. ")),(0,l.kt)("p",null,"Type depends on the aggregate function used."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Examples")),(0,l.kt)("p",null,"Consider how you can use ",(0,l.kt)("inlineCode",{parentName:"p"},"runningAccumulate")," to find the cumulative sum of numbers without and with grouping."),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT k, runningAccumulate(sum_k) AS res FROM (SELECT number as k, sumState(k) AS sum_k FROM numbers(10) GROUP BY k ORDER BY k);\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500k\u2500\u252c\u2500res\u2500\u2510\n\n\u2502 0 \u2502   0 \u2502\n\n\u2502 1 \u2502   1 \u2502\n\n\u2502 2 \u2502   3 \u2502\n\n\u2502 3 \u2502   6 \u2502\n\n\u2502 4 \u2502  10 \u2502\n\n\u2502 5 \u2502  15 \u2502\n\n\u2502 6 \u2502  21 \u2502\n\n\u2502 7 \u2502  28 \u2502\n\n\u2502 8 \u2502  36 \u2502\n\n\u2502 9 \u2502  45 \u2502\n\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"The subquery generates ",(0,l.kt)("inlineCode",{parentName:"p"},"sumState")," for every number from ",(0,l.kt)("inlineCode",{parentName:"p"},"0")," to ",(0,l.kt)("inlineCode",{parentName:"p"},"9")," . ",(0,l.kt)("inlineCode",{parentName:"p"},"sumState")," returns the state of the ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/aggregate-functions/reference/sum.md"},"sum")," function that contains the sum of a single number."),(0,l.kt)("p",null,"The whole query does the following:"),(0,l.kt)("ol",{start:6},(0,l.kt)("li",{parentName:"ol"},"For the first row, ",(0,l.kt)("inlineCode",{parentName:"li"},"runningAccumulate")," takes ",(0,l.kt)("inlineCode",{parentName:"li"},"sumState(0)")," and returns ",(0,l.kt)("inlineCode",{parentName:"li"},"0")," . ")),(0,l.kt)("ol",{start:7},(0,l.kt)("li",{parentName:"ol"},"For the second row, the function merges ",(0,l.kt)("inlineCode",{parentName:"li"},"sumState(0)")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"sumState(1)")," resulting in ",(0,l.kt)("inlineCode",{parentName:"li"},"sumState(0 + 1)")," , and returns ",(0,l.kt)("inlineCode",{parentName:"li"},"1")," as a result. ")),(0,l.kt)("ol",{start:8},(0,l.kt)("li",{parentName:"ol"},"For the third row, the function merges ",(0,l.kt)("inlineCode",{parentName:"li"},"sumState(0 + 1)")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"sumState(2)")," resulting in ",(0,l.kt)("inlineCode",{parentName:"li"},"sumState(0 + 1 + 2)")," , and returns ",(0,l.kt)("inlineCode",{parentName:"li"},"3")," as a result. ")),(0,l.kt)("ol",{start:9},(0,l.kt)("li",{parentName:"ol"},"The actions are repeated until the block ends. ")),(0,l.kt)("p",null,"The following example shows the ",(0,l.kt)("inlineCode",{parentName:"p"},"groupping")," parameter usage:"),(0,l.kt)("p",null,"Query:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT\n\n    grouping,\n\n    item,\n\n    runningAccumulate(state, grouping) AS res\n\nFROM\n\n(\n\n    SELECT\n\n        toInt8(number / 4) AS grouping,\n\n        number AS item,\n\n        sumState(number) AS state\n\n    FROM numbers(15)\n\n    GROUP BY item\n\n    ORDER BY item ASC\n\n);\n\n")),(0,l.kt)("p",null,"Result:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500grouping\u2500\u252c\u2500item\u2500\u252c\u2500res\u2500\u2510\n\n\u2502        0 \u2502    0 \u2502   0 \u2502\n\n\u2502        0 \u2502    1 \u2502   1 \u2502\n\n\u2502        0 \u2502    2 \u2502   3 \u2502\n\n\u2502        0 \u2502    3 \u2502   6 \u2502\n\n\u2502        1 \u2502    4 \u2502   4 \u2502\n\n\u2502        1 \u2502    5 \u2502   9 \u2502\n\n\u2502        1 \u2502    6 \u2502  15 \u2502\n\n\u2502        1 \u2502    7 \u2502  22 \u2502\n\n\u2502        2 \u2502    8 \u2502   8 \u2502\n\n\u2502        2 \u2502    9 \u2502  17 \u2502\n\n\u2502        2 \u2502   10 \u2502  27 \u2502\n\n\u2502        2 \u2502   11 \u2502  38 \u2502\n\n\u2502        3 \u2502   12 \u2502  12 \u2502\n\n\u2502        3 \u2502   13 \u2502  25 \u2502\n\n\u2502        3 \u2502   14 \u2502  39 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"As you can see, ",(0,l.kt)("inlineCode",{parentName:"p"},"runningAccumulate")," merges states for each group of rows separately."),(0,l.kt)("h2",{id:"runningdifference"},"runningDifference"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nrunningDifference(x) \n\n")),(0,l.kt)("p",null,"Calculates the difference between successive row values in the data block."),(0,l.kt)("p",null,"Returns 0 for the first row and the difference from the previous row for each subsequent row."),(0,l.kt)("p",null,"Warning:"),(0,l.kt)("p",null,"It can reach the previous row only inside the currently processed data block."),(0,l.kt)("p",null,"The result of the function depends on the affected data blocks and the order of data in the block."),(0,l.kt)("p",null,"The rows order used during the calculation of ",(0,l.kt)("inlineCode",{parentName:"p"},"runningDifference")," can differ from the order of rows returned to the user."),(0,l.kt)("p",null,"To prevent that you can make a subquery with ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/sql-reference/statements/select/order-by.md"},"ORDER BY")," and call the function from outside the subquery."),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT\n\n    EventID,\n\n    EventTime,\n\n    runningDifference(EventTime) AS delta\n\nFROM\n\n(\n\n    SELECT\n\n        EventID,\n\n        EventTime\n\n    FROM events\n\n    WHERE EventDate = '2016-11-24'\n\n    ORDER BY EventTime ASC\n\n    LIMIT 5\n\n)\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500EventID\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500EventTime\u2500\u252c\u2500delta\u2500\u2510\n\n\u2502    1106 \u2502 2016-11-24 00:00:04 \u2502     0 \u2502\n\n\u2502    1107 \u2502 2016-11-24 00:00:05 \u2502     1 \u2502\n\n\u2502    1108 \u2502 2016-11-24 00:00:05 \u2502     0 \u2502\n\n\u2502    1109 \u2502 2016-11-24 00:00:09 \u2502     4 \u2502\n\n\u2502    1110 \u2502 2016-11-24 00:00:10 \u2502     1 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"Please note - block size affects the result. With each new block, the ",(0,l.kt)("inlineCode",{parentName:"p"},"runningDifference")," state is reset."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT\n\n    number,\n\n    runningDifference(number + 1) AS diff\n\nFROM numbers(100000)\n\nWHERE diff != 1\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500number\u2500\u252c\u2500diff\u2500\u2510\n\n\u2502      0 \u2502    0 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u250c\u2500number\u2500\u252c\u2500diff\u2500\u2510\n\n\u2502  65536 \u2502    0 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nset max_block_size=100000 -- default value is 65536!\n\n\n\nSELECT\n\n    number,\n\n    runningDifference(number + 1) AS diff\n\nFROM numbers(100000)\n\nWHERE diff != 1\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500number\u2500\u252c\u2500diff\u2500\u2510\n\n\u2502      0 \u2502    0 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"runningdifferencestartingwithfirstvalue"},"runningDifferenceStartingWithFirstValue"),(0,l.kt)("p",null,"Same as for ",(0,l.kt)("a",{parentName:"p",href:"https://bytedance.feishu.cn/docs/other-functions.md#other_functions-runningdifference"},"runningDifference")," , the difference is the value of the first row, returned the value of the first row, and each subsequent row returns the difference from the previous row."),(0,l.kt)("h2",{id:"sleep"},"sleep"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nsleep(seconds)\n\n")),(0,l.kt)("p",null,"Sleeps \u2018seconds\u2019 seconds on each data block. You can specify an integer or a floating-point number."),(0,l.kt)("h2",{id:"sleepeachrow"},"sleepEachRow"),(0,l.kt)("p",null,"sleepEachRow(seconds)"),(0,l.kt)("p",null,"Sleeps \u2018seconds\u2019 seconds on each row. You can specify an integer or a floating-point number."),(0,l.kt)("h2",{id:"throwif"},"throwIf"),(0,l.kt)("p",null,"throwIf(x","[, custom_message]",")"),(0,l.kt)("p",null,"Throw an exception if the argument is non zero."),(0,l.kt)("p",null,"custom_message - is an optional parameter: a constant string, provides an error message"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT throwIf(number = 3, 'Too many') FROM numbers(10);\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u2199 Progress: 0.00 rows, 0.00 B (0.00 rows/s., 0.00 B/s.) Received exception from server (version 19.14.1):\n\nCode: 395. DB::Exception: Received from [localhost:9000](http://localhost:9000/). DB::Exception: Too many.\n\n")),(0,l.kt)("h2",{id:"tocolumntypename"},"toColumnTypeName"),(0,l.kt)("p",null,"Returns the name of the class that represents the data type of the column in RAM."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\ntoColumnTypeName(value)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments:")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," \u2014 Any type of value. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returned values")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A string with the name of the class that is used for representing the ",(0,l.kt)("inlineCode",{parentName:"li"},"value")," data type in RAM. ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example of the difference between")," ",(0,l.kt)("inlineCode",{parentName:"p"},"**toTypeName ' and ' toColumnTypeName**")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT toTypeName(CAST('2018-01-01 01:02:03' AS DateTime))\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500toTypeName(CAST('2018-01-01 01:02:03', 'DateTime'))\u2500\u2510\n\n\u2502 DateTime                                            \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT toColumnTypeName(CAST('2018-01-01 01:02:03' AS DateTime))\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500toColumnTypeName(CAST('2018-01-01 01:02:03', 'DateTime'))\u2500\u2510\n\n\u2502 Const(UInt32)                                             \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"The example shows that the ",(0,l.kt)("inlineCode",{parentName:"p"},"DateTime")," data type is stored in memory as ",(0,l.kt)("inlineCode",{parentName:"p"},"Const(UInt32)")," ."),(0,l.kt)("h2",{id:"totypename"},"toTypeName"),(0,l.kt)("p",null,"toTypeName(x)"),(0,l.kt)("p",null,"Returns a string containing the type name of the passed argument."),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," is passed to the function as input, then it returns the ",(0,l.kt)("inlineCode",{parentName:"p"},"Nullable(Nothing)")," type, which corresponds to an internal ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," representation in ByConity."),(0,l.kt)("h2",{id:"transform"},"transform"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\ntransform(x, array_from, array_to) \n\n")),(0,l.kt)("p",null,"Differs from the first variation in that the \u2018default\u2019 argument is omitted."),(0,l.kt)("p",null,"If the \u2018x\u2019 value is equal to one of the elements in the \u2018array_from\u2019 array, it returns the matching element (that is numbered the same) from the \u2018array_to\u2019 array. Otherwise, it returns \u2018x\u2019."),(0,l.kt)("p",null,"Types:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"transform(T, Array(T), Array(T)) -> T")),(0,l.kt)("p",null,"Example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT\n\n    transform(domain(Referer), ['[yandex.ru](http://yandex.ru/)', '[google.ru](http://google.ru/)', '[vk.com](http://vk.com/)'], ['www.yandex', '[example.com](http://example.com/)']) AS s,\n\n    count() AS c\n\nFROM test.hits\n\nGROUP BY domain(Referer)\n\nORDER BY count() DESC\n\nLIMIT 10\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500s\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500c\u2500\u2510\n\n\u2502                \u2502 2906259 \u2502\n\n\u2502 www.yandex     \u2502  867767 \u2502\n\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588.ru     \u2502  313599 \u2502\n\n\u2502 [mail.yandex.ru](http://mail.yandex.ru/) \u2502  107147 \u2502\n\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588.ru      \u2502  100355 \u2502\n\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.ru   \u2502   65040 \u2502\n\n\u2502 [news.yandex.ru](http://news.yandex.ru/) \u2502   64515 \u2502\n\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588.net     \u2502   59141 \u2502\n\n\u2502 [example.com](http://example.com/)    \u2502   57316 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"transformx-array-from-array-to-default"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\ntransform(x, array_from, array_to, default)\n\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Argument")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"x")," \u2013 What to transform."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"array_from")," \u2013 Constant array of values for converting."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"array_to")," \u2013 Constant array of values to convert the values in \u2018from\u2019 to."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"default")," \u2013 Which value to use if \u2018x\u2019 is not equal to any of the values in \u2018from\u2019."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"array_from")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"array_to")," \u2013 Arrays of the same size."),(0,l.kt)("p",null,"Types:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"transform(T, Array(T), Array(U), U) -> U")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"T")," and ",(0,l.kt)("inlineCode",{parentName:"p"},"U")," can be numeric, string, or Date or DateTime types."),(0,l.kt)("p",null,"Where the same letter is indicated (T or U), for numeric types these might not be matching types, but types that have a common type."),(0,l.kt)("p",null,"For example, the first argument can have the Int64 type, while the second has the Array(UInt16) type."),(0,l.kt)("p",null,"If the \u2018x\u2019 value is equal to one of the elements in the \u2018array_from\u2019 array, it returns the existing element (that is numbered the same) from the \u2018array_to\u2019 array. Otherwise, it returns \u2018default\u2019. If there are multiple matching elements in \u2018array_from\u2019, it returns one of the matches."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT\n\n    transform(SearchEngineID, [2, 3], ['Yandex', 'Google'], 'Other') AS title,\n\n    count() AS c\n\nFROM test.hits\n\nWHERE SearchEngineID != 0\n\nGROUP BY title\n\nORDER BY c DESC\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500title\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500c\u2500\u2510\n\n\u2502 Yandex    \u2502 498635 \u2502\n\n\u2502 Google    \u2502 229872 \u2502\n\n\u2502 Other     \u2502 104472 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("p",null,"transformx-array-from-array-to"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\ntransform(x, array_from, array_to)\n\n")),(0,l.kt)("p",null,"Differs from the first variation in that the \u2018default\u2019 argument is omitted."),(0,l.kt)("p",null,"If the \u2018x\u2019 value is equal to one of the elements in the \u2018array_from\u2019 array, it returns the matching element (that is numbered the same) from the \u2018array_to\u2019 array. Otherwise, it returns \u2018x\u2019."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Types")," :"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"transform(T, Array(T), Array(T)) -> T")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example")," :"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT\n\n    transform(domain(Referer), ['[yandex.ru](http://yandex.ru/)', '[google.ru](http://google.ru/)', '[vk.com](http://vk.com/)'], ['www.yandex', '[example.com](http://example.com/)']) AS s,\n\n    count() AS c\n\nFROM test.hits\n\nGROUP BY domain(Referer)\n\nORDER BY count() DESC\n\nLIMIT 10\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500s\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500c\u2500\u2510\n\n\u2502                \u2502 2906259 \u2502\n\n\u2502 www.yandex     \u2502  867767 \u2502\n\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588.ru     \u2502  313599 \u2502\n\n\u2502 [mail.yandex.ru](http://mail.yandex.ru/) \u2502  107147 \u2502\n\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588.ru      \u2502  100355 \u2502\n\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588.ru   \u2502   65040 \u2502\n\n\u2502 [news.yandex.ru](http://news.yandex.ru/) \u2502   64515 \u2502\n\n\u2502 \u2588\u2588\u2588\u2588\u2588\u2588.net     \u2502   59141 \u2502\n\n\u2502 [example.com](http://example.com/)    \u2502   57316 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")),(0,l.kt)("h2",{id:"uptime"},"uptime"),(0,l.kt)("p",null,"uptime()"),(0,l.kt)("p",null,"Returns the server\u2019s uptime in seconds."),(0,l.kt)("h2",{id:"version"},"version"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Syntax")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nversion()\n\n")),(0,l.kt)("p",null,"Returns the version of the server as a string."),(0,l.kt)("h2",{id:"visiblewidth"},"visibleWidth"),(0,l.kt)("p",null,"visibleWidth(x)"),(0,l.kt)("p",null,"Calculates the approximate width when outputting values to the console in text format (tab-separated)."),(0,l.kt)("p",null,"This function is used by the system for implementing Pretty formats."),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," is represented as a string corresponding to ",(0,l.kt)("inlineCode",{parentName:"p"},"NULL")," in ",(0,l.kt)("inlineCode",{parentName:"p"},"Pretty")," formats."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-sql"},"\nSELECT visibleWidth(NULL)\n\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-plain%20text"},"\n\u250c\u2500visibleWidth(NULL)\u2500\u2510\n\n\u2502                  4 \u2502\n\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n")))}d.isMDXComponent=!0}}]);