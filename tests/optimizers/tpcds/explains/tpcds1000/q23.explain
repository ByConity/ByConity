Projection Est. 1 rows
│     Expressions: sum(sales):=`expr#sum(sales)`
└─ Limit Est. 1 rows
   │     Limit: 100
   └─ MergingAggregated Est. 1 rows
      └─ Gather Exchange Est. 1 rows
         └─ Aggregating Est. 1 rows
            │     Group by: {}
            │     Aggregates: expr#sum(sales):=AggNull(sum)(expr#multiply(cs_quantity, cs_list_price)_1)
            └─ Projection Est. 8230531 rows
               │     Expressions: expr#multiply(cs_quantity, cs_list_price)_1:=cs_quantity_1 * cs_list_price_1
               └─ Left Semi (PARALLEL_HASH) Join Est. 8230531 rows
                  │     Condition: cs_bill_customer_sk_1 == ss_customer_sk_2
                  │     Runtime Filters Builder: {ss_customer_sk_2}
                  ├─ Repartition Exchange Est. 16528959 rows
                  │  │     Partition by: {cs_bill_customer_sk_1}
                  │  └─ Right Semi (PARALLEL_HASH) Join Est. 16528959 rows
                  │     │     Condition: ss_item_sk_1 == cs_item_sk_1
                  │     │     Runtime Filters Builder: {cs_item_sk_1}
                  │     ├─ Projection Est. 575444667 rows
                  │     │  │     Expressions: [ss_item_sk_1]
                  │     │  └─ Filter Est. 575444667 rows
                  │     │     │     Condition: `expr#count()_3` > 4
                  │     │     └─ Aggregating Est. 2301778669 rows
                  │     │        │     Group by: {expr#substring(i_item_desc, 1, 30)_3, ss_item_sk_1, d_date_3}
                  │     │        │     Aggregates: expr#count()_3:=AggNull(count)()
                  │     │        └─ Projection Est. 2301778669 rows
                  │     │           │     Expressions: [d_date_3, ss_item_sk_1], expr#substring(i_item_desc, 1, 30)_3:=substring(i_item_desc_1, 1, 30)
                  │     │           └─ Inner Join Est. 2301778669 rows
                  │     │              │     Condition: ss_item_sk_1 == i_item_sk_3
                  │     │              ├─ Inner Join Est. 2301778669 rows
                  │     │              │  │     Condition: ss_sold_date_sk_2 == d_date_sk_4
                  │     │              │  ├─ Filter Est. 2879987999 rows
                  │     │              │  │  │     Condition: Runtime Filters: {ss_item_sk_1}
                  │     │              │  │  └─ TableScan tpcds1000.store_sales Est. 2879987999 rows
                  │     │              │  │           Where: Runtime Filters: {ss_item_sk}
                  │     │              │  │           Outputs: ss_sold_date_sk_2:=ss_sold_date_sk, ss_item_sk_1:=ss_item_sk
                  │     │              │  └─ Broadcast Exchange Est. 1461 rows
                  │     │              │     └─ Projection Est. 1461 rows
                  │     │              │        │     Expressions: [d_date_3, d_date_sk_4]
                  │     │              │        └─ Filter Est. 1461 rows
                  │     │              │           │     Condition: d_year_4 IN (2000, 2001, 2002, 2003)
                  │     │              │           └─ TableScan tpcds1000.date_dim Est. 73049 rows
                  │     │              │                    Where: d_year IN (2000, 2001, 2002, 2003)
                  │     │              │                    Outputs: d_date_sk_4:=d_date_sk, d_date_3:=d_date, d_year_4:=d_year
                  │     │              └─ Filter Est. 300000 rows
                  │     │                 │     Condition: Runtime Filters: {i_item_sk_3}
                  │     │                 └─ TableScan tpcds1000.item Est. 300000 rows
                  │     │                          Where: Runtime Filters: {i_item_sk}
                  │     │                          Outputs: i_item_sk_3:=i_item_sk, i_item_desc_1:=i_item_desc
                  │     └─ Inner Join Est. 16528959 rows
                  │        │     Condition: cs_sold_date_sk_1 == d_date_sk
                  │        │     Runtime Filters Builder: {d_date_sk}
                  │        ├─ Union Est. 2159980792 rows
                  │        │  │     OutputToInputs: cs_list_price_1 = [cs_list_price,ws_list_price], cs_sold_date_sk_1 = [cs_sold_date_sk,ws_sold_date_sk], cs_item_sk_1 = [cs_item_sk,ws_item_sk], cs_quantity_1 = [cs_quantity,ws_quantity], cs_bill_customer_sk_1 = [cs_bill_customer_sk,ws_bill_customer_sk]
                  │        │  ├─ Filter Est. 1439980416 rows
                  │        │  │  │     Condition: Runtime Filters: {cs_bill_customer_sk, cs_sold_date_sk}
                  │        │  │  └─ TableScan tpcds1000.catalog_sales Est. 1439980416 rows
                  │        │  │           Where: Runtime Filters: {cs_bill_customer_sk, cs_sold_date_sk}
                  │        │  │           Outputs: [cs_sold_date_sk, cs_bill_customer_sk, cs_item_sk, cs_quantity, cs_list_price]
                  │        │  └─ Filter Est. 720000376 rows
                  │        │     │     Condition: Runtime Filters: {ws_bill_customer_sk, ws_sold_date_sk}
                  │        │     └─ TableScan tpcds1000.web_sales Est. 720000376 rows
                  │        │              Where: Runtime Filters: {ws_bill_customer_sk, ws_sold_date_sk}
                  │        │              Outputs: [ws_sold_date_sk, ws_item_sk, ws_bill_customer_sk, ws_quantity, ws_list_price]
                  │        └─ Broadcast Exchange Est. 28 rows
                  │           └─ Projection Est. 28 rows
                  │              │     Expressions: [d_date_sk]
                  │              └─ Filter Est. 28 rows
                  │                 │     Condition: (d_year = 2000) AND (d_moy = 2)
                  │                 └─ TableScan tpcds1000.date_dim Est. 73049 rows
                  │                          Where: (d_year = 2000) AND (d_moy = 2)
                  │                          Outputs: [d_date_sk, d_year, d_moy]
                  └─ Inner Join Est. 5975355 rows
                     │     Condition: 
                     │     Filter: `expr#sum(multiply(ss_quantity, ss_sales_price))_4` > ('0.5' * `expr#max(csales)_1`)
                     ├─ MergingAggregated Est. 11950709 rows
                     │  └─ Repartition Exchange Est. 11950709 rows
                     │     │     Partition by: {ss_customer_sk_2}
                     │     └─ Aggregating Est. 11950709 rows
                     │        │     Group by: {ss_customer_sk_2}
                     │        │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_4:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_2)
                     │        └─ Projection Est. 2750397233 rows
                     │           │     Expressions: [ss_customer_sk_2], expr#multiply(ss_quantity, ss_sales_price)_2:=ss_quantity_2 * ss_sales_price_2
                     │           └─ Filter Est. 2750397233 rows
                     │              │     Condition: isNotNull(ss_customer_sk_2)
                     │              └─ TableScan tpcds1000.store_sales Est. 2879987999 rows
                     │                       Where: isNotNull(ss_customer_sk)
                     │                       Outputs: ss_customer_sk_2:=ss_customer_sk, ss_quantity_2:=ss_quantity, ss_sales_price_2:=ss_sales_price
                     └─ Broadcast Exchange Est. 1 rows
                        └─ MergingAggregated Est. 1 rows
                           └─ Gather Exchange Est. 1 rows
                              └─ Aggregating Est. 1 rows
                                 │     Group by: {}
                                 │     Aggregates: expr#max(csales)_1:=AggNull(max)(expr#sum(multiply(ss_quantity, ss_sales_price))_5)
                                 └─ MergingAggregated Est. 11950709 rows
                                    └─ Repartition Exchange Est. 11950709 rows
                                       │     Partition by: {ss_customer_sk_3}
                                       └─ Aggregating Est. 11950709 rows
                                          │     Group by: {ss_customer_sk_3}
                                          │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_5:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_3)
                                          └─ Projection Est. 2198205577 rows
                                             │     Expressions: [ss_customer_sk_3], expr#multiply(ss_quantity, ss_sales_price)_3:=ss_quantity_3 * ss_sales_price_3
                                             └─ Inner Join Est. 2198205577 rows
                                                │     Condition: ss_sold_date_sk_3 == d_date_sk_5
                                                ├─ Filter Est. 2750397233 rows
                                                │  │     Condition: isNotNull(ss_customer_sk_3)
                                                │  └─ TableScan tpcds1000.store_sales Est. 2879987999 rows
                                                │           Where: isNotNull(ss_customer_sk)
                                                │           Outputs: ss_sold_date_sk_3:=ss_sold_date_sk, ss_customer_sk_3:=ss_customer_sk, ss_quantity_3:=ss_quantity, ss_sales_price_3:=ss_sales_price
                                                └─ Broadcast Exchange Est. 1461 rows
                                                   └─ Projection Est. 1461 rows
                                                      │     Expressions: [d_date_sk_5]
                                                      └─ Filter Est. 1461 rows
                                                         │     Condition: d_year_5 IN (2000, 2001, 2002, 2003)
                                                         └─ TableScan tpcds1000.date_dim Est. 73049 rows
                                                                  Where: d_year IN (2000, 2001, 2002, 2003)
                                                                  Outputs: d_date_sk_5:=d_date_sk, d_year_5:=d_year
note: Runtime Filter is applied for 6 times.
Projection Est. 100 rows
│     Expressions: c_first_name:=c_first_name_2, c_last_name:=c_last_name_2, sales:=`expr#sum(multiply(cs_quantity, cs_list_price))_1`
└─ Limit Est. 100 rows
   │     Limit: 100
   └─ Sorting Est. 100 rows
      │     Order by: {c_last_name_2 ASC NULLS LAST, c_first_name_2 ASC NULLS LAST, expr#sum(multiply(cs_quantity, cs_list_price))_1 ASC NULLS LAST}
      │     Limit: 100
      └─ Gather Exchange Est. 16955596 rows
         └─ Sorting Est. 100 rows
            │     Order by: {c_last_name_2 ASC NULLS LAST, c_first_name_2 ASC NULLS LAST, expr#sum(multiply(cs_quantity, cs_list_price))_1 ASC NULLS LAST}
            │     Limit: 100
            └─ Union Est. 200 rows
               │     OutputToInputs: c_first_name_2 = [c_first_name,c_first_name_1], expr#sum(multiply(cs_quantity, cs_list_price))_1 = [expr#sum(multiply(cs_quantity, cs_list_price)),expr#sum(multiply(ws_quantity, ws_list_price))], c_last_name_2 = [c_last_name,c_last_name_1]
               ├─ Sorting Est. 100 rows
               │  │     Order by: {c_last_name ASC NULLS LAST, c_first_name ASC NULLS LAST, expr#sum(multiply(cs_quantity, cs_list_price)) ASC NULLS LAST}
               │  │     Limit: 100
               │  └─ MergingAggregated Est. 10980241 rows
               │     └─ Repartition Exchange Est. 10980241 rows
               │        │     Partition by: {c_last_name, c_first_name}
               │        └─ Aggregating Est. 10980241 rows
               │           │     Group by: {c_last_name, c_first_name}
               │           │     Aggregates: expr#sum(multiply(cs_quantity, cs_list_price)):=AggNull(sum)(expr#multiply(cs_quantity, cs_list_price)_2)
               │           └─ Projection Est. 10980241 rows
               │              │     Expressions: [c_first_name, c_last_name], expr#multiply(cs_quantity, cs_list_price)_2:=cs_quantity_2 * cs_list_price_2
               │              └─ Inner (PARALLEL_HASH) Join Est. 10980241 rows
               │                 │     Condition: c_customer_sk_4 == cs_bill_customer_sk_2
               │                 │     Runtime Filters Builder: {cs_bill_customer_sk_2}
               │                 ├─ Repartition Exchange Est. 12000000 rows
               │                 │  │     Partition by: {c_customer_sk_4}
               │                 │  └─ Filter Est. 12000000 rows
               │                 │     │     Condition: Runtime Filters: {c_customer_sk_4}
               │                 │     └─ TableScan tpcds1000.customer Est. 12000000 rows
               │                 │              Where: Runtime Filters: {c_customer_sk}
               │                 │              Outputs: [c_first_name, c_last_name], c_customer_sk_4:=c_customer_sk
               │                 └─ Left Semi (PARALLEL_HASH) Join Est. 10980241 rows
               │                    │     Condition: cs_bill_customer_sk_2 == c_customer_sk_7
               │                    │     Runtime Filters Builder: {c_customer_sk_7}
               │                    ├─ Repartition Exchange Est. 21960485 rows
               │                    │  │     Partition by: {cs_bill_customer_sk_2}
               │                    │  └─ Right Semi (PARALLEL_HASH) Join Est. 21960485 rows
               │                    │     │     Condition: i_item_sk_5 == cs_item_sk_2
               │                    │     │     Runtime Filters Builder: {cs_item_sk_2}
               │                    │     ├─ Filter Est. 143861167 rows
               │                    │     │  │     Condition: Runtime Filters: {i_item_sk_5}
               │                    │     │  └─ Local Exchange Est. 575444667 rows
               │                    │     │     └─ Buffer Est. 575444667 rows
               │                    │     │        └─ CTERef[0] Est. 575444667 rows
               │                    │     └─ Inner Join Est. 21960485 rows
               │                    │        │     Condition: cs_sold_date_sk_2 == d_date_sk_6
               │                    │        │     Runtime Filters Builder: {d_date_sk_6}
               │                    │        ├─ Filter Est. 1439980416 rows
               │                    │        │  │     Condition: Runtime Filters: {cs_bill_customer_sk_2, cs_sold_date_sk_2}
               │                    │        │  └─ TableScan tpcds1000.catalog_sales Est. 1439980416 rows
               │                    │        │           Where: Runtime Filters: {cs_bill_customer_sk, cs_sold_date_sk}
               │                    │        │           Outputs: cs_sold_date_sk_2:=cs_sold_date_sk, cs_bill_customer_sk_2:=cs_bill_customer_sk, cs_item_sk_2:=cs_item_sk, cs_quantity_2:=cs_quantity, cs_list_price_2:=cs_list_price
               │                    │        └─ Broadcast Exchange Est. 28 rows
               │                    │           └─ Projection Est. 28 rows
               │                    │              │     Expressions: [d_date_sk_6]
               │                    │              └─ Filter Est. 28 rows
               │                    │                 │     Condition: (d_moy_2 = 2) AND (d_year_6 = 2000)
               │                    │                 └─ TableScan tpcds1000.date_dim Est. 73049 rows
               │                    │                          Where: (d_moy = 2) AND (d_year = 2000)
               │                    │                          Outputs: d_date_sk_6:=d_date_sk, d_year_6:=d_year, d_moy_2:=d_moy
               │                    └─ Buffer Est. 5975355 rows
               │                       └─ CTERef[1] Est. 5975355 rows
               └─ Sorting Est. 100 rows
                  │     Order by: {c_last_name_1 ASC NULLS LAST, c_first_name_1 ASC NULLS LAST, expr#sum(multiply(ws_quantity, ws_list_price)) ASC NULLS LAST}
                  │     Limit: 100
                  └─ MergingAggregated Est. 5975355 rows
                     └─ Repartition Exchange Est. 5975355 rows
                        │     Partition by: {c_last_name_1, c_first_name_1}
                        └─ Aggregating Est. 5975355 rows
                           │     Group by: {c_last_name_1, c_first_name_1}
                           │     Aggregates: expr#sum(multiply(ws_quantity, ws_list_price)):=AggNull(sum)(expr#multiply(ws_quantity, ws_list_price)_1)
                           └─ Projection Est. 5975355 rows
                              │     Expressions: [c_first_name_1, c_last_name_1], expr#multiply(ws_quantity, ws_list_price)_1:=ws_quantity_1 * ws_list_price_1
                              └─ Inner (PARALLEL_HASH) Join Est. 5975355 rows
                                 │     Condition: c_customer_sk_8 == ws_bill_customer_sk_1
                                 │     Runtime Filters Builder: {ws_bill_customer_sk_1}
                                 ├─ Repartition Exchange Est. 12000000 rows
                                 │  │     Partition by: {c_customer_sk_8}
                                 │  └─ Filter Est. 12000000 rows
                                 │     │     Condition: Runtime Filters: {c_customer_sk_8}
                                 │     └─ TableScan tpcds1000.customer Est. 12000000 rows
                                 │              Where: Runtime Filters: {c_customer_sk}
                                 │              Outputs: c_customer_sk_8:=c_customer_sk, c_first_name_1:=c_first_name, c_last_name_1:=c_last_name
                                 └─ Left Semi (PARALLEL_HASH) Join Est. 5975355 rows
                                    │     Condition: ws_bill_customer_sk_1 == c_customer_sk_9
                                    │     Runtime Filters Builder: {c_customer_sk_9}
                                    ├─ Repartition Exchange Est. 11058700 rows
                                    │  │     Partition by: {ws_bill_customer_sk_1}
                                    │  └─ Right Semi (PARALLEL_HASH) Join Est. 11058700 rows
                                    │     │     Condition: i_item_sk_6 == ws_item_sk_1
                                    │     │     Runtime Filters Builder: {ws_item_sk_1}
                                    │     ├─ Filter Est. 143861167 rows
                                    │     │  │     Condition: Runtime Filters: {i_item_sk_6}
                                    │     │  └─ Local Exchange Est. 575444667 rows
                                    │     │     └─ Buffer Est. 575444667 rows
                                    │     │        └─ CTERef[0] Est. 575444667 rows
                                    │     └─ Inner Join Est. 11058700 rows
                                    │        │     Condition: ws_sold_date_sk_1 == d_date_sk_9
                                    │        │     Runtime Filters Builder: {d_date_sk_9}
                                    │        ├─ Filter Est. 720000376 rows
                                    │        │  │     Condition: Runtime Filters: {ws_bill_customer_sk_1, ws_sold_date_sk_1}
                                    │        │  └─ TableScan tpcds1000.web_sales Est. 720000376 rows
                                    │        │           Where: Runtime Filters: {ws_bill_customer_sk, ws_sold_date_sk}
                                    │        │           Outputs: ws_sold_date_sk_1:=ws_sold_date_sk, ws_item_sk_1:=ws_item_sk, ws_bill_customer_sk_1:=ws_bill_customer_sk, ws_quantity_1:=ws_quantity, ws_list_price_1:=ws_list_price
                                    │        └─ Broadcast Exchange Est. 28 rows
                                    │           └─ Projection Est. 28 rows
                                    │              │     Expressions: [d_date_sk_9]
                                    │              └─ Filter Est. 28 rows
                                    │                 │     Condition: (d_year_9 = 2000) AND (d_moy_3 = 2)
                                    │                 └─ TableScan tpcds1000.date_dim Est. 73049 rows
                                    │                          Where: (d_year = 2000) AND (d_moy = 2)
                                    │                          Outputs: d_date_sk_9:=d_date_sk, d_year_9:=d_year, d_moy_3:=d_moy
                                    └─ Buffer Est. 5975355 rows
                                       └─ CTERef[1] Est. 5975355 rows
CTEDef [0]
   Projection Est. 575444667 rows
   │     Expressions: i_item_sk_4:=ss_item_sk_2
   └─ Filter Est. 575444667 rows
      │     Condition: `expr#count()_4` > 4
      └─ Aggregating Est. 2301778669 rows
         │     Group by: {expr#substring(i_item_desc, 1, 30)_4, ss_item_sk_2, d_date_4}
         │     Aggregates: expr#count()_4:=AggNull(count)()
         └─ Projection Est. 2301778669 rows
            │     Expressions: [d_date_4, ss_item_sk_2], expr#substring(i_item_desc, 1, 30)_4:=substring(i_item_desc_2, 1, 30)
            └─ Inner Join Est. 2301778669 rows
               │     Condition: ss_item_sk_2 == i_item_sk_4
               ├─ Inner Join Est. 2301778669 rows
               │  │     Condition: ss_sold_date_sk_4 == d_date_sk_7
               │  ├─ TableScan tpcds1000.store_sales Est. 2879987999 rows
               │  │        Outputs: ss_sold_date_sk_4:=ss_sold_date_sk, ss_item_sk_2:=ss_item_sk
               │  └─ Broadcast Exchange Est. 1461 rows
               │     └─ Projection Est. 1461 rows
               │        │     Expressions: [d_date_4, d_date_sk_7]
               │        └─ Filter Est. 1461 rows
               │           │     Condition: d_year_7 IN (2000, 2001, 2002, 2003)
               │           └─ TableScan tpcds1000.date_dim Est. 73049 rows
               │                    Where: d_year IN (2000, 2001, 2002, 2003)
               │                    Outputs: d_date_sk_7:=d_date_sk, d_date_4:=d_date, d_year_7:=d_year
               └─ TableScan tpcds1000.item Est. 300000 rows
                        Outputs: i_item_sk_4:=i_item_sk, i_item_desc_2:=i_item_desc
CTEDef [1]
   Projection Est. 5975355 rows
   │     Expressions: c_customer_sk_5:=ss_customer_sk_4
   └─ Inner Join Est. 5975355 rows
      │     Condition: 
      │     Filter: `expr#sum(multiply(ss_quantity, ss_sales_price))_6` > ('0.5' * `expr#max(csales)_2`)
      ├─ MergingAggregated Est. 11950709 rows
      │  └─ Repartition Exchange Est. 11950709 rows
      │     │     Partition by: {ss_customer_sk_4}
      │     └─ Aggregating Est. 11950709 rows
      │        │     Group by: {ss_customer_sk_4}
      │        │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_6:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_4)
      │        └─ Projection Est. 2750397233 rows
      │           │     Expressions: [ss_customer_sk_4], expr#multiply(ss_quantity, ss_sales_price)_4:=ss_quantity_4 * ss_sales_price_4
      │           └─ Filter Est. 2750397233 rows
      │              │     Condition: isNotNull(ss_customer_sk_4)
      │              └─ TableScan tpcds1000.store_sales Est. 2879987999 rows
      │                       Where: isNotNull(ss_customer_sk)
      │                       Outputs: ss_customer_sk_4:=ss_customer_sk, ss_quantity_4:=ss_quantity, ss_sales_price_4:=ss_sales_price
      └─ Broadcast Exchange Est. 1 rows
         └─ MergingAggregated Est. 1 rows
            └─ Gather Exchange Est. 1 rows
               └─ Aggregating Est. 1 rows
                  │     Group by: {}
                  │     Aggregates: expr#max(csales)_2:=AggNull(max)(expr#sum(multiply(ss_quantity, ss_sales_price))_7)
                  └─ MergingAggregated Est. 11950709 rows
                     └─ Repartition Exchange Est. 11950709 rows
                        │     Partition by: {ss_customer_sk_5}
                        └─ Aggregating Est. 11950709 rows
                           │     Group by: {ss_customer_sk_5}
                           │     Aggregates: expr#sum(multiply(ss_quantity, ss_sales_price))_7:=AggNull(sum)(expr#multiply(ss_quantity, ss_sales_price)_5)
                           └─ Projection Est. 2198205577 rows
                              │     Expressions: [ss_customer_sk_5], expr#multiply(ss_quantity, ss_sales_price)_5:=ss_quantity_5 * ss_sales_price_5
                              └─ Inner Join Est. 2198205577 rows
                                 │     Condition: ss_sold_date_sk_5 == d_date_sk_8
                                 ├─ Filter Est. 2750397233 rows
                                 │  │     Condition: isNotNull(ss_customer_sk_5)
                                 │  └─ TableScan tpcds1000.store_sales Est. 2879987999 rows
                                 │           Where: isNotNull(ss_customer_sk)
                                 │           Outputs: ss_sold_date_sk_5:=ss_sold_date_sk, ss_customer_sk_5:=ss_customer_sk, ss_quantity_5:=ss_quantity, ss_sales_price_5:=ss_sales_price
                                 └─ Broadcast Exchange Est. 1461 rows
                                    └─ Projection Est. 1461 rows
                                       │     Expressions: [d_date_sk_8]
                                       └─ Filter Est. 1461 rows
                                          │     Condition: d_year_8 IN (2000, 2001, 2002, 2003)
                                          └─ TableScan tpcds1000.date_dim Est. 73049 rows
                                                   Where: d_year IN (2000, 2001, 2002, 2003)
                                                   Outputs: d_date_sk_8:=d_date_sk, d_year_8:=d_year
note: Runtime Filter is applied for 8 times.
note: CTE(Common Table Expression) is applied for 4 times.
