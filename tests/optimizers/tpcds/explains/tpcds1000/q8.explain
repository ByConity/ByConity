Projection Est. 10 rows
│     Expressions: [s_store_name], sum(ss_net_profit):=`expr#sum(ss_net_profit)`
└─ Limit Est. 10 rows
   │     Limit: 100
   └─ Sorting Est. 10 rows
      │     Order by: {s_store_name ASC NULLS LAST}
      │     Limit: 100
      └─ Gather Exchange Est. 10 rows
         └─ Sorting Est. 10 rows
            │     Order by: {s_store_name ASC NULLS LAST}
            │     Limit: 100
            └─ MergingAggregated Est. 10 rows
               └─ Repartition Exchange Est. 10 rows
                  │     Partition by: {s_store_name}
                  └─ Aggregating Est. 10 rows
                     │     Group by: {s_store_name}
                     │     Aggregates: expr#sum(ss_net_profit):=AggNull(sum)(ss_net_profit)
                     └─ Inner Join Est. 142182622 rows
                        │     Condition: substring(s_zip, 1, 2) == substring(expr#substring(ca_zip, 1, 5)_2, 1, 2)
                        ├─ Projection Est. 142182622 rows
                        │  │     Expressions: [s_store_name, ss_net_profit], substring(s_zip, 1, 2):=substring(s_zip, 1, 2)
                        │  └─ Inner Join Est. 142182622 rows
                        │     │     Condition: ss_store_sk == s_store_sk
                        │     ├─ Inner Join Est. 142182622 rows
                        │     │  │     Condition: ss_sold_date_sk == d_date_sk
                        │     │  │     Runtime Filters Builder: {d_date_sk}
                        │     │  ├─ Filter Est. 2879987999 rows
                        │     │  │  │     Condition: Runtime Filters: {ss_sold_date_sk}
                        │     │  │  └─ TableScan tpcds1000.store_sales Est. 2879987999 rows
                        │     │  │           Where: Runtime Filters: {ss_sold_date_sk}
                        │     │  │           Outputs: [ss_sold_date_sk, ss_store_sk, ss_net_profit]
                        │     │  └─ Broadcast Exchange Est. 90 rows
                        │     │     └─ Projection Est. 90 rows
                        │     │        │     Expressions: [d_date_sk]
                        │     │        └─ Filter Est. 90 rows
                        │     │           │     Condition: (d_year = 1998) AND (d_qoy = 2)
                        │     │           └─ TableScan tpcds1000.date_dim Est. 73049 rows
                        │     │                    Where: (d_year = 1998) AND (d_qoy = 2)
                        │     │                    Outputs: [d_date_sk, d_year, d_qoy]
                        │     └─ Broadcast Exchange Est. 1002 rows
                        │        └─ TableScan tpcds1000.store Est. 1002 rows
                        │                 Outputs: [s_store_sk, s_store_name, s_zip]
                        └─ Broadcast Exchange Est. 1165 rows
                           └─ Projection Est. 1165 rows
                              │     Expressions: substring(expr#substring(ca_zip, 1, 5)_2, 1, 2):=substring(`expr#substring(ca_zip, 1, 5)_2`, 1, 2)
                              └─ Filter Est. 1165 rows
                                 │     Condition: (count >= 1) AND (count_1 >= 1)
                                 └─ MergingAggregated Est. 4660 rows
                                    └─ Repartition Exchange Est. 4660 rows
                                       │     Partition by: {expr#substring(ca_zip, 1, 5)_2}
                                       └─ Union Est. 4660 rows
                                          │     OutputToInputs: count_1 = [count_1,count_1], count = [count,count], expr#substring(ca_zip, 1, 5)_2 = [expr#substring(ca_zip, 1, 5),expr#substring(ca_zip, 1, 5)_1]
                                          ├─ Aggregating Est. 2330 rows
                                          │  │     Group by: {expr#substring(ca_zip, 1, 5)}
                                          │  │     Aggregates: count:=AggNull(sum)(marker_2), count_1:=AggNull(sum)(marker_3)
                                          │  └─ Projection Est. 1500000 rows
                                          │     │     Expressions: expr#substring(ca_zip, 1, 5):=substring(ca_zip, 1, 5), marker_2:=1, marker_3:=0
                                          │     └─ Filter Est. 1500000 rows
                                          │        │     Condition: substring(ca_zip, 1, 5) IN ('10144', '10336', '10390', '10445', '10516', '10567', '11101', '11356', '11376', '11489', '11634', '11928', '12305', '13354', '13375', '13376', '13394', '13595', '13695', '13955', '14060', '14089', '14171', '14328', '14663', '14867', '14922', '15126', '15146', '15371', '15455', '15559', '15723', '15734', '15765', '15798', '15882', '16021', '16725', '16807', '17043', '17183', '17871', '17879', '17920', '18119', '18270', '18376', '18383', '18426', '18652', '18767', '18799', '18840', '18842', '18845', '18906', '19430', '19505', '19512', '19515', '19736', '19769', '19849', '20004', '20260', '20548', '21076', '21195', '21286', '21309', '21337', '21756', '22152', '22245', '22246', '22351', '22437', '22461', '22685', '22744', '22752', '22927', '23006', '23470', '23932', '23968', '24128', '24206', '24317', '24610', '24671', '24676', '24996', '25003', '25103', '25280', '25486', '25631', '25733', '25782', '25858', '25989', '26065', '26105', '26231', '26233', '26653', '26689', '26859', '27068', '27156', '27385', '27700', '28286', '28488', '28545', '28577', '28587', '28709', '28810', '28898', '28915', '29178', '29741', '29839', '30010', '30122', '30431', '30450', '30469', '30625', '30903', '31016', '31029', '31387', '31671', '31880', '32213', '32754', '33123', '33282', '33515', '33786', '34102', '34322', '34425', '35258', '35458', '35474', '35576', '35850', '35942', '36233', '36420', '36446', '36495', '36634', '37125', '37126', '37930', '38122', '38193', '38415', '38607', '38935', '39127', '39192', '39371', '39516', '39736', '39861', '39972', '40081', '40162', '40558', '40604', '41248', '41367', '41368', '41766', '41918', '42029', '42666', '42961', '43285', '43848', '43933', '44165', '44438', '45200', '45266', '45375', '45549', '45692', '45721', '45748', '46081', '46136', '46820', '47305', '47537', '47770', '48033', '48425', '48583', '49130', '49156', '49448', '50016', '50298', '50308', '50412', '51061', '51103', '51200', '51211', '51622', '51649', '51650', '51798', '51949', '52867', '53179', '53268', '53535', '53672', '54364', '54601', '54917', '55253', '55307', '55565', '56240', '56458', '56529', '56571', '56575', '56616', '56691', '56910', '57047', '57647', '57665', '57834', '57855', '58048', '58058', '58078', '58263', '58470', '58943', '59166', '59402', '60099', '60279', '60576', '61265', '61547', '61810', '61860', '62377', '62496', '62878', '62971', '63089', '63193', '63435', '63792', '63837', '63981', '64034', '64147', '64457', '64528', '64544', '65084', '65164', '66162', '66708', '66864', '67030', '67301', '67467', '67473', '67853', '67875', '67897', '68014', '68100', '68101', '68309', '68341', '68621', '68786', '68806', '68880', '68893', '68908', '69035', '69399', '69913', '69952', '70372', '70466', '70738', '71256', '71286', '71791', '71954', '72013', '72151', '72175', '72305', '72325', '72425', '72550', '72823', '73134', '73171', '73241', '73273', '73520', '73650', '74351', '75691', '76107', '76231', '76232', '76614', '76638', '76698', '77191', '77556', '77610', '77721', '78451', '78567', '78668', '78890', '79077', '79777', '79994', '81019', '81096', '81312', '81426', '82136', '82276', '82636', '83041', '83144', '83444', '83849', '83921', '83926', '83933', '84093', '84935', '85816', '86057', '86198', '86284', '86379', '87343', '87501', '87816', '88086', '88190', '88424', '88885', '89091', '89360', '90225', '90257', '90578', '91068', '91110', '91137', '91393', '92712', '94167', '94627', '94898', '94945', '94983', '96451', '96576', '96765', '96888', '96976', '97189', '97789', '98025', '98235', '98294', '98359', '98569', '99076', '99543')
                                          │        └─ TableScan tpcds1000.customer_address Est. 6000000 rows
                                          │                 Where: substring(ca_zip, 1, 5) IN ('10144', '10336', '10390', '10445', '10516', '10567', '11101', '11356', '11376', '11489', '11634', '11928', '12305', '13354', '13375', '13376', '13394', '13595', '13695', '13955', '14060', '14089', '14171', '14328', '14663', '14867', '14922', '15126', '15146', '15371', '15455', '15559', '15723', '15734', '15765', '15798', '15882', '16021', '16725', '16807', '17043', '17183', '17871', '17879', '17920', '18119', '18270', '18376', '18383', '18426', '18652', '18767', '18799', '18840', '18842', '18845', '18906', '19430', '19505', '19512', '19515', '19736', '19769', '19849', '20004', '20260', '20548', '21076', '21195', '21286', '21309', '21337', '21756', '22152', '22245', '22246', '22351', '22437', '22461', '22685', '22744', '22752', '22927', '23006', '23470', '23932', '23968', '24128', '24206', '24317', '24610', '24671', '24676', '24996', '25003', '25103', '25280', '25486', '25631', '25733', '25782', '25858', '25989', '26065', '26105', '26231', '26233', '26653', '26689', '26859', '27068', '27156', '27385', '27700', '28286', '28488', '28545', '28577', '28587', '28709', '28810', '28898', '28915', '29178', '29741', '29839', '30010', '30122', '30431', '30450', '30469', '30625', '30903', '31016', '31029', '31387', '31671', '31880', '32213', '32754', '33123', '33282', '33515', '33786', '34102', '34322', '34425', '35258', '35458', '35474', '35576', '35850', '35942', '36233', '36420', '36446', '36495', '36634', '37125', '37126', '37930', '38122', '38193', '38415', '38607', '38935', '39127', '39192', '39371', '39516', '39736', '39861', '39972', '40081', '40162', '40558', '40604', '41248', '41367', '41368', '41766', '41918', '42029', '42666', '42961', '43285', '43848', '43933', '44165', '44438', '45200', '45266', '45375', '45549', '45692', '45721', '45748', '46081', '46136', '46820', '47305', '47537', '47770', '48033', '48425', '48583', '49130', '49156', '49448', '50016', '50298', '50308', '50412', '51061', '51103', '51200', '51211', '51622', '51649', '51650', '51798', '51949', '52867', '53179', '53268', '53535', '53672', '54364', '54601', '54917', '55253', '55307', '55565', '56240', '56458', '56529', '56571', '56575', '56616', '56691', '56910', '57047', '57647', '57665', '57834', '57855', '58048', '58058', '58078', '58263', '58470', '58943', '59166', '59402', '60099', '60279', '60576', '61265', '61547', '61810', '61860', '62377', '62496', '62878', '62971', '63089', '63193', '63435', '63792', '63837', '63981', '64034', '64147', '64457', '64528', '64544', '65084', '65164', '66162', '66708', '66864', '67030', '67301', '67467', '67473', '67853', '67875', '67897', '68014', '68100', '68101', '68309', '68341', '68621', '68786', '68806', '68880', '68893', '68908', '69035', '69399', '69913', '69952', '70372', '70466', '70738', '71256', '71286', '71791', '71954', '72013', '72151', '72175', '72305', '72325', '72425', '72550', '72823', '73134', '73171', '73241', '73273', '73520', '73650', '74351', '75691', '76107', '76231', '76232', '76614', '76638', '76698', '77191', '77556', '77610', '77721', '78451', '78567', '78668', '78890', '79077', '79777', '79994', '81019', '81096', '81312', '81426', '82136', '82276', '82636', '83041', '83144', '83444', '83849', '83921', '83926', '83933', '84093', '84935', '85816', '86057', '86198', '86284', '86379', '87343', '87501', '87816', '88086', '88190', '88424', '88885', '89091', '89360', '90225', '90257', '90578', '91068', '91110', '91137', '91393', '92712', '94167', '94627', '94898', '94945', '94983', '96451', '96576', '96765', '96888', '96976', '97189', '97789', '98025', '98235', '98294', '98359', '98569', '99076', '99543')
                                          │                 Outputs: [ca_zip]
                                          └─ Aggregating Est. 2330 rows
                                             │     Group by: {expr#substring(ca_zip, 1, 5)_1}
                                             │     Aggregates: count:=AggNull(sum)(marker_4), count_1:=AggNull(sum)(marker_5)
                                             └─ Projection Est. 2330 rows
                                                │     Expressions: expr#substring(ca_zip, 1, 5)_1:=substring(ca_zip_1, 1, 5), marker_4:=0, marker_5:=1
                                                └─ Filter Est. 2330 rows
                                                   │     Condition: `expr#count()` > 10
                                                   └─ MergingAggregated Est. 9322 rows
                                                      └─ Repartition Exchange Est. 9322 rows
                                                         │     Partition by: {ca_zip_1}
                                                         └─ Aggregating Est. 9322 rows
                                                            │     Group by: {ca_zip_1}
                                                            │     Aggregates: expr#count():=AggNull(count)()
                                                            └─ Inner (PARALLEL_HASH) Join Est. 5675393 rows
                                                               │     Condition: ca_address_sk == c_current_addr_sk
                                                               │     Runtime Filters Builder: {c_current_addr_sk}
                                                               ├─ Repartition Exchange Est. 6000000 rows
                                                               │  │     Partition by: {ca_address_sk}
                                                               │  └─ Filter Est. 6000000 rows
                                                               │     │     Condition: Runtime Filters: {ca_address_sk}
                                                               │     └─ TableScan tpcds1000.customer_address Est. 6000000 rows
                                                               │              Where: Runtime Filters: {ca_address_sk}
                                                               │              Outputs: [ca_address_sk], ca_zip_1:=ca_zip
                                                               └─ Repartition Exchange Est. 5675393 rows
                                                                  │     Partition by: {c_current_addr_sk}
                                                                  └─ Projection Est. 5675393 rows
                                                                     │     Expressions: [c_current_addr_sk]
                                                                     └─ Filter Est. 5675393 rows
                                                                        │     Condition: c_preferred_cust_flag = 'Y'
                                                                        └─ TableScan tpcds1000.customer Est. 12000000 rows
                                                                                 Where: c_preferred_cust_flag = 'Y'
                                                                                 Outputs: [c_current_addr_sk, c_preferred_cust_flag]
note: Runtime Filter is applied for 2 times.
