Projection
│     Expressions: avg(wr_fee):=`expr#avg(wr_fee)`, avg(wr_refunded_cash):=`expr#avg(wr_refunded_cash)`, avg(ws_quantity):=`expr#avg(ws_quantity)`, substring(r_reason_desc, 1, 20):=`expr#substring(r_reason_desc, 1, 20)`
└─ Limit
   │     Limit: 100
   └─ Sorting
      │     Order by: {expr#substring(r_reason_desc, 1, 20) ASC NULLS LAST, expr#avg(ws_quantity) ASC NULLS LAST, expr#avg(wr_refunded_cash) ASC NULLS LAST, expr#avg(wr_fee) ASC NULLS LAST}
      │     Limit: 100
      └─ Gather Exchange
         └─ Sorting
            │     Order by: {expr#substring(r_reason_desc, 1, 20) ASC NULLS LAST, expr#avg(ws_quantity) ASC NULLS LAST, expr#avg(wr_refunded_cash) ASC NULLS LAST, expr#avg(wr_fee) ASC NULLS LAST}
            │     Limit: 100
            └─ Projection
               │     Expressions: [expr#avg(wr_fee), expr#avg(wr_refunded_cash), expr#avg(ws_quantity)], expr#substring(r_reason_desc, 1, 20):=substring(r_reason_desc, 1, 20)
               └─ MergingAggregated
                  └─ Repartition Exchange
                     │     Partition by: {r_reason_desc}
                     └─ Aggregating
                        │     Group by: {r_reason_desc}
                        │     Aggregates: expr#avg(ws_quantity):=AggNull(avg)(ws_quantity), expr#avg(wr_refunded_cash):=AggNull(avg)(wr_refunded_cash), expr#avg(wr_fee):=AggNull(avg)(wr_fee)
                        └─ Inner Join
                           │     Condition: wr_reason_sk == r_reason_sk
                           ├─ Inner (PARALLEL_HASH) Join
                           │  │     Condition: ws_item_sk == wr_item_sk, ws_order_number == wr_order_number
                           │  │     Filter: (((ws_net_profit >= 50) AND (ca_state IN ('LA', 'IA', 'AR')) AND (ws_net_profit <= 250)) OR ((ws_net_profit >= 100) AND (ws_net_profit <= 200) AND (ca_state IN ('IN', 'OH', 'NJ'))) OR ((ca_state IN ('WI', 'CT', 'KY')) AND (ws_net_profit >= 150) AND (ws_net_profit <= 300))) AND (((cd_marital_status = 'W') AND (cd_education_status = '2 yr Degree') AND (ws_sales_price >= '150') AND (ws_sales_price <= '200')) OR ((cd_education_status = 'College') AND (ws_sales_price >= '50') AND (ws_sales_price <= '100') AND (cd_marital_status = 'S')) OR ((ws_sales_price >= '100') AND (cd_education_status = 'Advanced Degree') AND (ws_sales_price <= '150') AND (cd_marital_status = 'M')))
                           │  ├─ Repartition Exchange
                           │  │  │     Partition by: {ws_item_sk, ws_order_number}
                           │  │  └─ Inner Join
                           │  │     │     Condition: ws_sold_date_sk == d_date_sk
                           │  │     │     Runtime Filters Builder: {d_date_sk}
                           │  │     ├─ Projection
                           │  │     │  │     Expressions: [ws_item_sk, ws_net_profit, ws_order_number, ws_quantity, ws_sales_price, ws_sold_date_sk]
                           │  │     │  └─ Filter
                           │  │     │     │     Condition: isNotNull(ws_web_page_sk) Runtime Filters: {ws_sold_date_sk}
                           │  │     │     └─ TableScan tpcds1000.web_sales
                           │  │     │              Where: isNotNull(ws_web_page_sk) Runtime Filters: {ws_sold_date_sk}
                           │  │     │              Outputs: [ws_sold_date_sk, ws_item_sk, ws_web_page_sk, ws_order_number, ws_quantity, ws_sales_price, ws_net_profit]
                           │  │     └─ Broadcast Exchange
                           │  │        └─ Projection
                           │  │           │     Expressions: [d_date_sk]
                           │  │           └─ Filter
                           │  │              │     Condition: d_year = 2000
                           │  │              └─ TableScan tpcds1000.date_dim
                           │  │                       Where: d_year = 2000
                           │  │                       Outputs: [d_date_sk, d_year]
                           │  └─ Repartition Exchange
                           │     │     Partition by: {wr_item_sk, wr_order_number}
                           │     └─ Inner (PARALLEL_HASH) Join
                           │        │     Condition: wr_refunded_addr_sk == ca_address_sk
                           │        ├─ Repartition Exchange
                           │        │  │     Partition by: {wr_refunded_addr_sk}
                           │        │  └─ Inner Join
                           │        │     │     Condition: cd_education_status == cd_education_status_1, cd_marital_status == cd_marital_status_1, wr_returning_cdemo_sk == cd_demo_sk_1
                           │        │     ├─ Repartition Exchange
                           │        │     │  │     Partition by: {cd_education_status, cd_marital_status, wr_returning_cdemo_sk}
                           │        │     │  └─ Inner Join
                           │        │     │     │     Condition: wr_refunded_cdemo_sk == cd_demo_sk
                           │        │     │     ├─ Repartition Exchange
                           │        │     │     │  │     Partition by: {wr_refunded_cdemo_sk}
                           │        │     │     │  └─ TableScan tpcds1000.web_returns
                           │        │     │     │           Outputs: [wr_item_sk, wr_refunded_cdemo_sk, wr_refunded_addr_sk, wr_returning_cdemo_sk, wr_reason_sk, wr_order_number, wr_fee, wr_refunded_cash]
                           │        │     │     └─ Repartition Exchange
                           │        │     │        │     Partition by: {cd_demo_sk}
                           │        │     │        └─ TableScan tpcds1000.customer_demographics
                           │        │     │                 Outputs: [cd_demo_sk, cd_marital_status, cd_education_status]
                           │        │     └─ Repartition Exchange
                           │        │        │     Partition by: {cd_education_status_1, cd_marital_status_1, cd_demo_sk_1}
                           │        │        └─ TableScan tpcds1000.customer_demographics
                           │        │                 Outputs: cd_demo_sk_1:=cd_demo_sk, cd_marital_status_1:=cd_marital_status, cd_education_status_1:=cd_education_status
                           │        └─ Repartition Exchange
                           │           │     Partition by: {ca_address_sk}
                           │           └─ Projection
                           │              │     Expressions: [ca_address_sk, ca_state]
                           │              └─ Filter
                           │                 │     Condition: ca_country = 'United States'
                           │                 └─ TableScan tpcds1000.customer_address
                           │                          Where: ca_country = 'United States'
                           │                          Outputs: [ca_address_sk, ca_state, ca_country]
                           └─ Broadcast Exchange
                              └─ TableScan tpcds1000.reason
                                       Outputs: [r_reason_sk, r_reason_desc]
note: Runtime Filter is applied for 1 times.
