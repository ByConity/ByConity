Projection
│     Expressions: b_city:=ca_city_2, b_street_name:=ca_street_name_2, b_street_number:=ca_street_number_2, b_zip:=ca_zip_2, c_city:=ca_city_3, c_street_name:=ca_street_name_3, c_street_number:=ca_street_number_3, c_zip:=ca_zip_3, cnt:=`expr#count()_1`, cnt_1:=`expr#count()_2`, product_name:=i_product_name_1, s11:=`expr#sum(ss_wholesale_cost)_1`, s12:=`expr#sum(ss_wholesale_cost)_2`, s21:=`expr#sum(ss_list_price)_1`, s22:=`expr#sum(ss_list_price)_2`, s31:=`expr#sum(ss_coupon_amt)_1`, s32:=`expr#sum(ss_coupon_amt)_2`, store_name:=s_store_name_2, store_zip:=s_zip_2, syear:=d_year_3, syear_1:=d_year_6
└─ Sorting
   │     Order by: {i_product_name_1 ASC NULLS LAST, s_store_name_2 ASC NULLS LAST, expr#count()_2 ASC NULLS LAST, expr#sum(ss_wholesale_cost)_1 ASC NULLS LAST, expr#sum(ss_wholesale_cost)_2 ASC NULLS LAST}
   └─ Gather Exchange
      └─ Sorting
         │     Order by: {i_product_name_1 ASC NULLS LAST, s_store_name_2 ASC NULLS LAST, expr#count()_2 ASC NULLS LAST, expr#sum(ss_wholesale_cost)_1 ASC NULLS LAST, expr#sum(ss_wholesale_cost)_2 ASC NULLS LAST}
         └─ Inner Join
            │     Condition: i_item_sk_2 == i_item_sk_1, s_store_name_2 == s_store_name_1, s_zip_2 == s_zip_1
            │     Filter: `expr#count()_2` <= `expr#count()_1`
            ├─ Repartition Exchange
            │  │     Partition by: {i_item_sk_2, s_store_name_2, s_zip_2}
            │  └─ Filter
            │     │     Condition: d_year_6 = cast(2000, 'UInt32')
            │     └─ Buffer
            │        └─ CTERef[0]
            └─ Repartition Exchange
               │     Partition by: {i_item_sk_1, s_store_name_1, s_zip_1}
               └─ Filter
                  │     Condition: d_year_3 = 1999
                  └─ Buffer
                     └─ CTERef[0]
CTEDef [0]
   Projection
   │     Expressions: [ca_city, ca_city_1, ca_street_name, ca_street_name_1, ca_street_number, ca_street_number_1, ca_zip, ca_zip_1, d_year, expr#count(), expr#sum(ss_coupon_amt), expr#sum(ss_list_price), expr#sum(ss_wholesale_cost), i_product_name, s_store_name, s_zip], i_item_sk:=ss_item_sk
   └─ MergingAggregated
      └─ Repartition Exchange
         │     Partition by: {i_product_name, ss_item_sk, s_store_name, s_zip, ca_street_number, ca_street_name, ca_city, ca_zip, ca_street_number_1, ca_street_name_1, ca_city_1, ca_zip_1, d_year, d_year_1, d_year_2}
         └─ Aggregating
            │     Group by: {i_product_name, ss_item_sk, s_store_name, s_zip, ca_street_number, ca_street_name, ca_city, ca_zip, ca_street_number_1, ca_street_name_1, ca_city_1, ca_zip_1, d_year, d_year_1, d_year_2}
            │     Group by keys not hashed: {i_product_name}
            │     Aggregates: expr#count():=AggNull(count)(), expr#sum(ss_wholesale_cost):=AggNull(sum)(ss_wholesale_cost), expr#sum(ss_list_price):=AggNull(sum)(ss_list_price), expr#sum(ss_coupon_amt):=AggNull(sum)(ss_coupon_amt)
            └─ Inner Join
               │     Condition: ca_address_sk_1 == c_current_addr_sk
               │     Runtime Filters Builder: {c_current_addr_sk}
               ├─ Repartition Exchange
               │  │     Partition by: {ca_address_sk_1}
               │  └─ Filter
               │     │     Condition: Runtime Filters: {ca_address_sk_1}
               │     └─ TableScan tpcds1000.customer_address
               │              Where: Runtime Filters: {ca_address_sk}
               │              Outputs: ca_address_sk_1:=ca_address_sk, ca_street_number_1:=ca_street_number, ca_street_name_1:=ca_street_name, ca_city_1:=ca_city, ca_zip_1:=ca_zip
               └─ Repartition Exchange
                  │     Partition by: {c_current_addr_sk}
                  └─ Inner Join
                     │     Condition: cd_demo_sk_1 == c_current_cdemo_sk
                     │     Filter: cd_marital_status != cd_marital_status_1
                     │     Runtime Filters Builder: {c_current_cdemo_sk}
                     ├─ Repartition Exchange
                     │  │     Partition by: {cd_demo_sk_1}
                     │  └─ Filter
                     │     │     Condition: Runtime Filters: {cd_demo_sk_1}
                     │     └─ TableScan tpcds1000.customer_demographics
                     │              Where: Runtime Filters: {cd_demo_sk}
                     │              Outputs: cd_demo_sk_1:=cd_demo_sk, cd_marital_status_1:=cd_marital_status
                     └─ Repartition Exchange
                        │     Partition by: {c_current_cdemo_sk}
                        └─ Inner Join
                           │     Condition: c_first_shipto_date_sk == d_date_sk_2
                           ├─ Repartition Exchange
                           │  │     Partition by: {c_first_shipto_date_sk}
                           │  └─ Inner Join
                           │     │     Condition: c_first_sales_date_sk == d_date_sk_1
                           │     ├─ Repartition Exchange
                           │     │  │     Partition by: {c_first_sales_date_sk}
                           │     │  └─ Inner Join
                           │     │     │     Condition: hd_income_band_sk_1 == ib_income_band_sk_1
                           │     │     ├─ Inner Join
                           │     │     │  │     Condition: c_current_hdemo_sk == hd_demo_sk_1
                           │     │     │  ├─ Inner Join
                           │     │     │  │  │     Condition: c_customer_sk == ss_customer_sk
                           │     │     │  │  │     Runtime Filters Builder: {ss_customer_sk}
                           │     │     │  │  ├─ Repartition Exchange
                           │     │     │  │  │  │     Partition by: {c_customer_sk}
                           │     │     │  │  │  └─ Filter
                           │     │     │  │  │     │     Condition: Runtime Filters: {c_customer_sk}
                           │     │     │  │  │     └─ TableScan tpcds1000.customer
                           │     │     │  │  │              Where: Runtime Filters: {c_customer_sk}
                           │     │     │  │  │              Outputs: [c_customer_sk, c_current_cdemo_sk, c_current_hdemo_sk, c_current_addr_sk, c_first_shipto_date_sk, c_first_sales_date_sk]
                           │     │     │  │  └─ Repartition Exchange
                           │     │     │  │     │     Partition by: {ss_customer_sk}
                           │     │     │  │     └─ Inner Join
                           │     │     │  │        │     Condition: cd_demo_sk == ss_cdemo_sk
                           │     │     │  │        │     Runtime Filters Builder: {ss_cdemo_sk}
                           │     │     │  │        ├─ Repartition Exchange
                           │     │     │  │        │  │     Partition by: {cd_demo_sk}
                           │     │     │  │        │  └─ Filter
                           │     │     │  │        │     │     Condition: Runtime Filters: {cd_demo_sk}
                           │     │     │  │        │     └─ TableScan tpcds1000.customer_demographics
                           │     │     │  │        │              Where: Runtime Filters: {cd_demo_sk}
                           │     │     │  │        │              Outputs: [cd_demo_sk, cd_marital_status]
                           │     │     │  │        └─ Repartition Exchange
                           │     │     │  │           │     Partition by: {ss_cdemo_sk}
                           │     │     │  │           └─ Inner Join
                           │     │     │  │              │     Condition: ss_store_sk == s_store_sk
                           │     │     │  │              ├─ Inner Join
                           │     │     │  │              │  │     Condition: ss_hdemo_sk == hd_demo_sk
                           │     │     │  │              │  ├─ Inner Join
                           │     │     │  │              │  │  │     Condition: ca_address_sk == ss_addr_sk
                           │     │     │  │              │  │  │     Runtime Filters Builder: {ss_addr_sk}
                           │     │     │  │              │  │  ├─ Repartition Exchange
                           │     │     │  │              │  │  │  │     Partition by: {ca_address_sk}
                           │     │     │  │              │  │  │  └─ Filter
                           │     │     │  │              │  │  │     │     Condition: Runtime Filters: {ca_address_sk}
                           │     │     │  │              │  │  │     └─ TableScan tpcds1000.customer_address
                           │     │     │  │              │  │  │              Where: Runtime Filters: {ca_address_sk}
                           │     │     │  │              │  │  │              Outputs: [ca_address_sk, ca_street_number, ca_street_name, ca_city, ca_zip]
                           │     │     │  │              │  │  └─ Repartition Exchange
                           │     │     │  │              │  │     │     Partition by: {ss_addr_sk}
                           │     │     │  │              │  │     └─ Inner Join
                           │     │     │  │              │  │        │     Condition: ss_sold_date_sk == d_date_sk
                           │     │     │  │              │  │        │     Runtime Filters Builder: {d_date_sk}
                           │     │     │  │              │  │        ├─ Inner Join
                           │     │     │  │              │  │        │  │     Condition: ss_item_sk == sr_item_sk, ss_ticket_number == sr_ticket_number
                           │     │     │  │              │  │        │  │     Runtime Filters Builder: {sr_item_sk,sr_ticket_number}
                           │     │     │  │              │  │        │  ├─ Projection
                           │     │     │  │              │  │        │  │  │     Expressions: [ss_addr_sk, ss_cdemo_sk, ss_coupon_amt, ss_customer_sk, ss_hdemo_sk, ss_item_sk, ss_list_price, ss_sold_date_sk, ss_store_sk, ss_ticket_number, ss_wholesale_cost]
                           │     │     │  │              │  │        │  │  └─ Filter
                           │     │     │  │              │  │        │  │     │     Condition: isNotNull(ss_promo_sk) Runtime Filters: {ss_item_sk, ss_sold_date_sk, ss_ticket_number}
                           │     │     │  │              │  │        │  │     └─ TableScan tpcds1000.store_sales
                           │     │     │  │              │  │        │  │              Where: isNotNull(ss_promo_sk) Runtime Filters: {ss_item_sk, ss_sold_date_sk, ss_ticket_number}
                           │     │     │  │              │  │        │  │              Outputs: [ss_sold_date_sk, ss_item_sk, ss_customer_sk, ss_cdemo_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_promo_sk, ss_ticket_number, ss_wholesale_cost, ss_list_price, ss_coupon_amt]
                           │     │     │  │              │  │        │  └─ Inner Join
                           │     │     │  │              │  │        │     │     Condition: sr_item_sk == cs_item_sk
                           │     │     │  │              │  │        │     │     Runtime Filters Builder: {cs_item_sk}
                           │     │     │  │              │  │        │     ├─ Filter
                           │     │     │  │              │  │        │     │  │     Condition: Runtime Filters: {sr_item_sk}
                           │     │     │  │              │  │        │     │  └─ TableScan tpcds1000.store_returns
                           │     │     │  │              │  │        │     │           Where: Runtime Filters: {sr_item_sk}
                           │     │     │  │              │  │        │     │           Outputs: [sr_item_sk, sr_ticket_number]
                           │     │     │  │              │  │        │     └─ Inner Join
                           │     │     │  │              │  │        │        │     Condition: cs_item_sk == i_item_sk
                           │     │     │  │              │  │        │        │     Runtime Filters Builder: {i_item_sk}
                           │     │     │  │              │  │        │        ├─ Projection
                           │     │     │  │              │  │        │        │  │     Expressions: [cs_item_sk]
                           │     │     │  │              │  │        │        │  └─ Filter
                           │     │     │  │              │  │        │        │     │     Condition: `expr#sum(cs_ext_list_price)` > (2 * `expr#sum(plus(plus(cr_refunded_cash, cr_reversed_charge), cr_store_credit))`)
                           │     │     │  │              │  │        │        │     └─ Aggregating
                           │     │     │  │              │  │        │        │        │     Group by: {cs_item_sk}
                           │     │     │  │              │  │        │        │        │     Aggregates: expr#sum(cs_ext_list_price):=AggNull(sum)(cs_ext_list_price), expr#sum(plus(plus(cr_refunded_cash, cr_reversed_charge), cr_store_credit)):=AggNull(sum)(expr#plus(plus(cr_refunded_cash, cr_reversed_charge), cr_store_credit))
                           │     │     │  │              │  │        │        │        └─ Projection
                           │     │     │  │              │  │        │        │           │     Expressions: [cs_ext_list_price, cs_item_sk], expr#plus(plus(cr_refunded_cash, cr_reversed_charge), cr_store_credit):=(cr_refunded_cash + cr_reversed_charge) + cr_store_credit
                           │     │     │  │              │  │        │        │           └─ Inner (PARALLEL_HASH) Join
                           │     │     │  │              │  │        │        │              │     Condition: cs_item_sk == cr_item_sk, cs_order_number == cr_order_number
                           │     │     │  │              │  │        │        │              │     Runtime Filters Builder: {cr_order_number}
                           │     │     │  │              │  │        │        │              ├─ Filter
                           │     │     │  │              │  │        │        │              │  │     Condition: Runtime Filters: {cs_item_sk, cs_order_number}
                           │     │     │  │              │  │        │        │              │  └─ TableScan tpcds1000.catalog_sales
                           │     │     │  │              │  │        │        │              │           Where: Runtime Filters: {cs_item_sk, cs_order_number}
                           │     │     │  │              │  │        │        │              │           Outputs: [cs_item_sk, cs_order_number, cs_ext_list_price]
                           │     │     │  │              │  │        │        │              └─ Filter
                           │     │     │  │              │  │        │        │                 │     Condition: Runtime Filters: {cr_item_sk}
                           │     │     │  │              │  │        │        │                 └─ TableScan tpcds1000.catalog_returns
                           │     │     │  │              │  │        │        │                          Where: Runtime Filters: {cr_item_sk}
                           │     │     │  │              │  │        │        │                          Outputs: [cr_item_sk, cr_order_number, cr_refunded_cash, cr_reversed_charge, cr_store_credit]
                           │     │     │  │              │  │        │        └─ Projection
                           │     │     │  │              │  │        │           │     Expressions: [i_item_sk, i_product_name]
                           │     │     │  │              │  │        │           └─ Filter
                           │     │     │  │              │  │        │              │     Condition: (i_color IN ('burlywood', 'floral', 'indian', 'medium', 'purple', 'spring')) AND (i_current_price >= 65.) AND (i_current_price <= 74.)
                           │     │     │  │              │  │        │              └─ TableScan tpcds1000.item
                           │     │     │  │              │  │        │                       Where: (i_color IN ('burlywood', 'floral', 'indian', 'medium', 'purple', 'spring')) AND (i_current_price >= 65.) AND (i_current_price <= 74.)
                           │     │     │  │              │  │        │                       Outputs: [i_item_sk, i_current_price, i_color, i_product_name]
                           │     │     │  │              │  │        └─ Broadcast Exchange
                           │     │     │  │              │  │           └─ Filter
                           │     │     │  │              │  │              │     Condition: (d_year = 1999) OR (d_year = cast(2000, 'UInt32'))
                           │     │     │  │              │  │              └─ TableScan tpcds1000.date_dim
                           │     │     │  │              │  │                       Where: (d_year = 1999) OR (d_year = cast(2000, 'UInt32'))
                           │     │     │  │              │  │                       Outputs: [d_date_sk, d_year]
                           │     │     │  │              │  └─ Broadcast Exchange
                           │     │     │  │              │     └─ TableScan tpcds1000.household_demographics
                           │     │     │  │              │              Outputs: [hd_demo_sk]
                           │     │     │  │              └─ Broadcast Exchange
                           │     │     │  │                 └─ TableScan tpcds1000.store
                           │     │     │  │                          Outputs: [s_store_sk, s_store_name, s_zip]
                           │     │     │  └─ Broadcast Exchange
                           │     │     │     └─ TableScan tpcds1000.household_demographics
                           │     │     │              Outputs: hd_demo_sk_1:=hd_demo_sk, hd_income_band_sk_1:=hd_income_band_sk
                           │     │     └─ Broadcast Exchange
                           │     │        └─ TableScan tpcds1000.income_band
                           │     │                 Outputs: ib_income_band_sk_1:=ib_income_band_sk
                           │     └─ Repartition Exchange
                           │        │     Partition by: {d_date_sk_1}
                           │        └─ TableScan tpcds1000.date_dim
                           │                 Outputs: d_date_sk_1:=d_date_sk, d_year_1:=d_year
                           └─ Repartition Exchange
                              │     Partition by: {d_date_sk_2}
                              └─ TableScan tpcds1000.date_dim
                                       Outputs: d_date_sk_2:=d_date_sk, d_year_2:=d_year
note: Runtime Filter is applied for 12 times.
note: CTE(Common Table Expression) is applied for 2 times.
