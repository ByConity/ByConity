Projection
│     Expressions: channel:=`expr#'store'_1`, i_brand_id:=i_brand_id_9, i_category_id:=i_category_id_9, i_class_id:=i_class_id_9, sum(number_sales):=`expr#sum(number_sales)`, sum(sales):=`expr#sum(sales)`
└─ Limit
   │     Limit: 100
   └─ Sorting
      │     Order by: {expr#'store'_1 ASC NULLS LAST, i_brand_id_9 ASC NULLS LAST, i_class_id_9 ASC NULLS LAST, i_category_id_9 ASC NULLS LAST}
      │     Limit: 100
      └─ Gather Exchange
         └─ Sorting
            │     Order by: {expr#'store'_1 ASC NULLS LAST, i_brand_id_9 ASC NULLS LAST, i_class_id_9 ASC NULLS LAST, i_category_id_9 ASC NULLS LAST}
            │     Limit: 100
            └─ Projection
               │     Expressions: [expr#'store'_1, expr#sum(number_sales), expr#sum(sales), i_brand_id_9, i_category_id_9, i_class_id_9]
               └─ MergingAggregated
                  └─ Repartition Exchange
                     │     Partition by: {expr#'store'_1, i_brand_id_9, i_class_id_9, i_category_id_9, __grouping_set}
                     └─ Union
                        │     OutputToInputs: expr#sum(number_sales) = [expr#sum(number_sales),expr#sum(number_sales),expr#sum(number_sales)], expr#sum(sales) = [expr#sum(sales),expr#sum(sales),expr#sum(sales)], i_category_id_9 = [i_category_id,i_category_id_7,i_category_id_8], i_class_id_9 = [i_class_id,i_class_id_7,i_class_id_8], i_brand_id_9 = [i_brand_id,i_brand_id_7,i_brand_id_8], expr#'store'_1 = [expr#'store',expr#'catalog',expr#'web'], __grouping_set = [__grouping_set,__grouping_set,__grouping_set]
                        ├─ Aggregating
                        │  │     Group by: {expr#'store', i_brand_id, i_class_id, i_category_id}
                        │  │     Aggregates: expr#sum(sales):=AggNull(sum)(expr#sum(multiply(ss_quantity, ss_list_price))), expr#sum(number_sales):=AggNull(sum)(expr#count())
                        │  └─ Projection
                        │     │     Expressions: [expr#count(), expr#sum(multiply(ss_quantity, ss_list_price)), i_brand_id, i_category_id, i_class_id], expr#'store':='store'
                        │     └─ Inner Join
                        │        │     Condition: 
                        │        │     Filter: `expr#sum(multiply(ss_quantity, ss_list_price))` > `expr#avg(multiply(quantity, list_price))_1`
                        │        ├─ MergingAggregated
                        │        │  └─ Repartition Exchange
                        │        │     │     Partition by: {i_brand_id, i_class_id, i_category_id}
                        │        │     └─ Aggregating
                        │        │        │     Group by: {i_brand_id, i_class_id, i_category_id}
                        │        │        │     Aggregates: expr#sum(multiply(ss_quantity, ss_list_price)):=AggNull(sum)(expr#multiply(ss_quantity, ss_list_price)), expr#count():=AggNull(count)()
                        │        │        └─ Projection
                        │        │           │     Expressions: [i_brand_id, i_category_id, i_class_id], expr#multiply(ss_quantity, ss_list_price):=ss_quantity * ss_list_price
                        │        │           └─ Left Semi (PARALLEL_HASH) Join
                        │        │              │     Condition: ss_item_sk == i_item_sk_5
                        │        │              ├─ Repartition Exchange
                        │        │              │  │     Partition by: {ss_item_sk}
                        │        │              │  └─ Inner Join
                        │        │              │     │     Condition: ss_item_sk == i_item_sk
                        │        │              │     ├─ Inner Join
                        │        │              │     │  │     Condition: ss_sold_date_sk == d_date_sk
                        │        │              │     │  │     Runtime Filters Builder: {d_date_sk}
                        │        │              │     │  ├─ Filter
                        │        │              │     │  │  │     Condition: Runtime Filters: {ss_sold_date_sk}
                        │        │              │     │  │  └─ TableScan tpcds1000.store_sales
                        │        │              │     │  │           Where: Runtime Filters: {ss_sold_date_sk}
                        │        │              │     │  │           Outputs: [ss_sold_date_sk, ss_item_sk, ss_quantity, ss_list_price]
                        │        │              │     │  └─ Broadcast Exchange
                        │        │              │     │     └─ Projection
                        │        │              │     │        │     Expressions: [d_date_sk]
                        │        │              │     │        └─ Filter
                        │        │              │     │           │     Condition: (d_moy = 11) AND (d_year = cast(2001, 'UInt32'))
                        │        │              │     │           └─ TableScan tpcds1000.date_dim
                        │        │              │     │                    Where: (d_moy = 11) AND (d_year = cast(2001, 'UInt32'))
                        │        │              │     │                    Outputs: [d_date_sk, d_year, d_moy]
                        │        │              │     └─ TableScan tpcds1000.item
                        │        │              │              Outputs: [i_item_sk, i_brand_id, i_class_id, i_category_id]
                        │        │              └─ CTERef[0]
                        │        └─ Broadcast Exchange
                        │           └─ CTERef[2]
                        ├─ Aggregating
                        │  │     Group by: {expr#'catalog', i_brand_id_7, i_class_id_7, i_category_id_7}
                        │  │     Aggregates: expr#sum(sales):=AggNull(sum)(expr#sum(multiply(cs_quantity, cs_list_price))), expr#sum(number_sales):=AggNull(sum)(expr#count()_1)
                        │  └─ Projection
                        │     │     Expressions: [expr#count()_1, expr#sum(multiply(cs_quantity, cs_list_price)), i_brand_id_7, i_category_id_7, i_class_id_7], expr#'catalog':='catalog'
                        │     └─ Inner Join
                        │        │     Condition: 
                        │        │     Filter: `expr#sum(multiply(cs_quantity, cs_list_price))` > `expr#avg(multiply(quantity, list_price))_2`
                        │        ├─ MergingAggregated
                        │        │  └─ Repartition Exchange
                        │        │     │     Partition by: {i_brand_id_7, i_class_id_7, i_category_id_7}
                        │        │     └─ Aggregating
                        │        │        │     Group by: {i_brand_id_7, i_class_id_7, i_category_id_7}
                        │        │        │     Aggregates: expr#sum(multiply(cs_quantity, cs_list_price)):=AggNull(sum)(expr#multiply(cs_quantity, cs_list_price)), expr#count()_1:=AggNull(count)()
                        │        │        └─ Projection
                        │        │           │     Expressions: [i_brand_id_7, i_category_id_7, i_class_id_7], expr#multiply(cs_quantity, cs_list_price):=cs_quantity_1 * cs_list_price_1
                        │        │           └─ Left Semi (PARALLEL_HASH) Join
                        │        │              │     Condition: cs_item_sk_1 == i_item_sk_7
                        │        │              ├─ Repartition Exchange
                        │        │              │  │     Partition by: {cs_item_sk_1}
                        │        │              │  └─ Inner Join
                        │        │              │     │     Condition: cs_item_sk_1 == i_item_sk_6
                        │        │              │     ├─ Inner Join
                        │        │              │     │  │     Condition: cs_sold_date_sk_2 == d_date_sk_7
                        │        │              │     │  │     Runtime Filters Builder: {d_date_sk_7}
                        │        │              │     │  ├─ Filter
                        │        │              │     │  │  │     Condition: Runtime Filters: {cs_sold_date_sk_2}
                        │        │              │     │  │  └─ TableScan tpcds1000.catalog_sales
                        │        │              │     │  │           Where: Runtime Filters: {cs_sold_date_sk}
                        │        │              │     │  │           Outputs: cs_sold_date_sk_2:=cs_sold_date_sk, cs_item_sk_1:=cs_item_sk, cs_quantity_1:=cs_quantity, cs_list_price_1:=cs_list_price
                        │        │              │     │  └─ Broadcast Exchange
                        │        │              │     │     └─ Projection
                        │        │              │     │        │     Expressions: [d_date_sk_7]
                        │        │              │     │        └─ Filter
                        │        │              │     │           │     Condition: (d_moy_1 = 11) AND (d_year_7 = cast(2001, 'UInt32'))
                        │        │              │     │           └─ TableScan tpcds1000.date_dim
                        │        │              │     │                    Where: (d_moy = 11) AND (d_year = cast(2001, 'UInt32'))
                        │        │              │     │                    Outputs: d_date_sk_7:=d_date_sk, d_year_7:=d_year, d_moy_1:=d_moy
                        │        │              │     └─ TableScan tpcds1000.item
                        │        │              │              Outputs: i_item_sk_6:=i_item_sk, i_brand_id_7:=i_brand_id, i_class_id_7:=i_class_id, i_category_id_7:=i_category_id
                        │        │              └─ CTERef[0]
                        │        └─ Broadcast Exchange
                        │           └─ CTERef[2]
                        └─ Aggregating
                           │     Group by: {expr#'web', i_brand_id_8, i_class_id_8, i_category_id_8}
                           │     Aggregates: expr#sum(sales):=AggNull(sum)(expr#sum(multiply(ws_quantity, ws_list_price))), expr#sum(number_sales):=AggNull(sum)(expr#count()_2)
                           └─ Projection
                              │     Expressions: [expr#count()_2, expr#sum(multiply(ws_quantity, ws_list_price)), i_brand_id_8, i_category_id_8, i_class_id_8], expr#'web':='web'
                              └─ Inner Join
                                 │     Condition: 
                                 │     Filter: `expr#sum(multiply(ws_quantity, ws_list_price))` > `expr#avg(multiply(quantity, list_price))_3`
                                 ├─ MergingAggregated
                                 │  └─ Repartition Exchange
                                 │     │     Partition by: {i_brand_id_8, i_class_id_8, i_category_id_8}
                                 │     └─ Aggregating
                                 │        │     Group by: {i_brand_id_8, i_class_id_8, i_category_id_8}
                                 │        │     Aggregates: expr#sum(multiply(ws_quantity, ws_list_price)):=AggNull(sum)(expr#multiply(ws_quantity, ws_list_price)), expr#count()_2:=AggNull(count)()
                                 │        └─ Projection
                                 │           │     Expressions: [i_brand_id_8, i_category_id_8, i_class_id_8], expr#multiply(ws_quantity, ws_list_price):=ws_quantity_1 * ws_list_price_1
                                 │           └─ Left Semi (PARALLEL_HASH) Join
                                 │              │     Condition: ws_item_sk_1 == i_item_sk_9
                                 │              ├─ Repartition Exchange
                                 │              │  │     Partition by: {ws_item_sk_1}
                                 │              │  └─ Inner Join
                                 │              │     │     Condition: ws_item_sk_1 == i_item_sk_8
                                 │              │     ├─ Inner Join
                                 │              │     │  │     Condition: ws_sold_date_sk_2 == d_date_sk_8
                                 │              │     │  │     Runtime Filters Builder: {d_date_sk_8}
                                 │              │     │  ├─ Filter
                                 │              │     │  │  │     Condition: Runtime Filters: {ws_sold_date_sk_2}
                                 │              │     │  │  └─ TableScan tpcds1000.web_sales
                                 │              │     │  │           Where: Runtime Filters: {ws_sold_date_sk}
                                 │              │     │  │           Outputs: ws_sold_date_sk_2:=ws_sold_date_sk, ws_item_sk_1:=ws_item_sk, ws_quantity_1:=ws_quantity, ws_list_price_1:=ws_list_price
                                 │              │     │  └─ Broadcast Exchange
                                 │              │     │     └─ Projection
                                 │              │     │        │     Expressions: [d_date_sk_8]
                                 │              │     │        └─ Filter
                                 │              │     │           │     Condition: (d_moy_2 = 11) AND (d_year_8 = cast(2001, 'UInt32'))
                                 │              │     │           └─ TableScan tpcds1000.date_dim
                                 │              │     │                    Where: (d_moy = 11) AND (d_year = cast(2001, 'UInt32'))
                                 │              │     │                    Outputs: d_date_sk_8:=d_date_sk, d_year_8:=d_year, d_moy_2:=d_moy
                                 │              │     └─ TableScan tpcds1000.item
                                 │              │              Outputs: i_item_sk_8:=i_item_sk, i_brand_id_8:=i_brand_id, i_class_id_8:=i_class_id, i_category_id_8:=i_category_id
                                 │              └─ CTERef[0]
                                 └─ Broadcast Exchange
                                    └─ CTERef[2]
CTEDef [0]
   Repartition Exchange
   │     Partition by: {i_item_sk_1}
   └─ Inner Join
      │     Condition: i_brand_id_1 == i_brand_id_10, i_category_id_1 == i_category_id_10, i_class_id_1 == i_class_id_10
      │     Runtime Filters Builder: {i_brand_id_10,i_category_id_10,i_class_id_10}
      ├─ Repartition Exchange
      │  │     Partition by: {i_brand_id_1, i_category_id_1, i_class_id_1}
      │  └─ Filter
      │     │     Condition: Runtime Filters: {i_brand_id_1, i_category_id_1, i_class_id_1}
      │     └─ TableScan tpcds1000.item
      │              Where: Runtime Filters: {i_brand_id, i_category_id, i_class_id}
      │              Outputs: i_item_sk_1:=i_item_sk, i_brand_id_1:=i_brand_id, i_class_id_1:=i_class_id, i_category_id_1:=i_category_id
      └─ Repartition Exchange
         │     Partition by: {i_brand_id_10, i_category_id_10, i_class_id_10}
         └─ Projection
            │     Expressions: [i_brand_id_10, i_category_id_10, i_class_id_10]
            └─ Filter
               │     Condition: (count >= 1) AND (count_1 >= 1) AND (count_2 >= 1)
               └─ MergingAggregated
                  └─ Repartition Exchange
                     │     Partition by: {i_brand_id_10, i_class_id_10, i_category_id_10}
                     └─ Aggregating
                        │     Group by: {i_brand_id_10, i_class_id_10, i_category_id_10}
                        │     Aggregates: count:=AggNull(sum)(marker), count_1:=AggNull(sum)(marker_1), count_2:=AggNull(sum)(marker_2)
                        └─ Inner Join
                           │     Condition: ss_item_sk_2 == i_item_sk_10
                           │     Runtime Filters Builder: {i_item_sk_10}
                           ├─ Union
                           │  │     OutputToInputs: ss_item_sk_2 = [ss_item_sk_1,cs_item_sk,ws_item_sk], marker_2 = [marker_5,marker_8,marker_11], marker_1 = [marker_4,marker_7,marker_10], marker = [marker_3,marker_6,marker_9]
                           │  ├─ Projection
                           │  │  │     Expressions: [ss_item_sk_1], marker_3:=1, marker_4:=0, marker_5:=0
                           │  │  └─ Inner Join
                           │  │     │     Condition: ss_sold_date_sk_1 == d_date_sk_1
                           │  │     │     Runtime Filters Builder: {d_date_sk_1}
                           │  │     ├─ Filter
                           │  │     │  │     Condition: Runtime Filters: {ss_item_sk_1, ss_sold_date_sk_1}
                           │  │     │  └─ TableScan tpcds1000.store_sales
                           │  │     │           Where: Runtime Filters: {ss_item_sk, ss_sold_date_sk}
                           │  │     │           Outputs: ss_sold_date_sk_1:=ss_sold_date_sk, ss_item_sk_1:=ss_item_sk
                           │  │     └─ Broadcast Exchange
                           │  │        └─ Projection
                           │  │           │     Expressions: [d_date_sk_1]
                           │  │           └─ Filter
                           │  │              │     Condition: (d_year_1 >= 1999) AND (d_year_1 <= cast(2001, 'UInt32'))
                           │  │              └─ TableScan tpcds1000.date_dim
                           │  │                       Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                           │  │                       Outputs: d_date_sk_1:=d_date_sk, d_year_1:=d_year
                           │  ├─ Projection
                           │  │  │     Expressions: [cs_item_sk], marker_6:=0, marker_7:=1, marker_8:=0
                           │  │  └─ Inner Join
                           │  │     │     Condition: cs_sold_date_sk == d_date_sk_2
                           │  │     │     Runtime Filters Builder: {d_date_sk_2}
                           │  │     ├─ Filter
                           │  │     │  │     Condition: Runtime Filters: {cs_item_sk, cs_sold_date_sk}
                           │  │     │  └─ TableScan tpcds1000.catalog_sales
                           │  │     │           Where: Runtime Filters: {cs_item_sk, cs_sold_date_sk}
                           │  │     │           Outputs: [cs_sold_date_sk, cs_item_sk]
                           │  │     └─ Broadcast Exchange
                           │  │        └─ Projection
                           │  │           │     Expressions: [d_date_sk_2]
                           │  │           └─ Filter
                           │  │              │     Condition: (d_year_2 >= 1999) AND (d_year_2 <= cast(2001, 'UInt32'))
                           │  │              └─ TableScan tpcds1000.date_dim
                           │  │                       Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                           │  │                       Outputs: d_date_sk_2:=d_date_sk, d_year_2:=d_year
                           │  └─ Projection
                           │     │     Expressions: [ws_item_sk], marker_10:=0, marker_11:=1, marker_9:=0
                           │     └─ Inner Join
                           │        │     Condition: ws_sold_date_sk == d_date_sk_3
                           │        │     Runtime Filters Builder: {d_date_sk_3}
                           │        ├─ Filter
                           │        │  │     Condition: Runtime Filters: {ws_item_sk, ws_sold_date_sk}
                           │        │  └─ TableScan tpcds1000.web_sales
                           │        │           Where: Runtime Filters: {ws_item_sk, ws_sold_date_sk}
                           │        │           Outputs: [ws_sold_date_sk, ws_item_sk]
                           │        └─ Broadcast Exchange
                           │           └─ Projection
                           │              │     Expressions: [d_date_sk_3]
                           │              └─ Filter
                           │                 │     Condition: (d_year_3 >= 1999) AND (d_year_3 <= cast(2001, 'UInt32'))
                           │                 └─ TableScan tpcds1000.date_dim
                           │                          Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                           │                          Outputs: d_date_sk_3:=d_date_sk, d_year_3:=d_year
                           └─ TableScan tpcds1000.item
                                    Outputs: i_item_sk_10:=i_item_sk, i_brand_id_10:=i_brand_id, i_class_id_10:=i_class_id, i_category_id_10:=i_category_id
CTEDef [2]
   Projection
   │     Expressions: expr#avg(multiply(quantity, list_price))_1:=`expr#avg(multiply(quantity, list_price))_4`
   └─ MergingAggregated
      └─ Gather Exchange
         └─ Aggregating
            │     Group by: {}
            │     Aggregates: expr#avg(multiply(quantity, list_price))_4:=AggNull(avg)(expr#multiply(quantity, list_price)_1)
            └─ Projection
               │     Expressions: expr#multiply(quantity, list_price)_1:=ss_quantity_4 * ss_list_price_4
               └─ Union
                  │     OutputToInputs: ss_list_price_4 = [ss_list_price_3,cs_list_price_2,ws_list_price_2], ss_quantity_4 = [ss_quantity_3,cs_quantity_2,ws_quantity_2]
                  ├─ Inner Join
                  │  │     Condition: ss_sold_date_sk_3 == d_date_sk_9
                  │  │     Runtime Filters Builder: {d_date_sk_9}
                  │  ├─ Filter
                  │  │  │     Condition: Runtime Filters: {ss_sold_date_sk_3}
                  │  │  └─ TableScan tpcds1000.store_sales
                  │  │           Where: Runtime Filters: {ss_sold_date_sk}
                  │  │           Outputs: ss_sold_date_sk_3:=ss_sold_date_sk, ss_quantity_3:=ss_quantity, ss_list_price_3:=ss_list_price
                  │  └─ Broadcast Exchange
                  │     └─ Projection
                  │        │     Expressions: [d_date_sk_9]
                  │        └─ Filter
                  │           │     Condition: (d_year_9 >= 1999) AND (d_year_9 <= cast(2001, 'UInt32'))
                  │           └─ TableScan tpcds1000.date_dim
                  │                    Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                  │                    Outputs: d_date_sk_9:=d_date_sk, d_year_9:=d_year
                  ├─ Inner Join
                  │  │     Condition: cs_sold_date_sk_3 == d_date_sk_10
                  │  │     Runtime Filters Builder: {d_date_sk_10}
                  │  ├─ Filter
                  │  │  │     Condition: Runtime Filters: {cs_sold_date_sk_3}
                  │  │  └─ TableScan tpcds1000.catalog_sales
                  │  │           Where: Runtime Filters: {cs_sold_date_sk}
                  │  │           Outputs: cs_sold_date_sk_3:=cs_sold_date_sk, cs_quantity_2:=cs_quantity, cs_list_price_2:=cs_list_price
                  │  └─ Broadcast Exchange
                  │     └─ Projection
                  │        │     Expressions: [d_date_sk_10]
                  │        └─ Filter
                  │           │     Condition: (d_year_10 >= 1999) AND (d_year_10 <= cast(2001, 'UInt32'))
                  │           └─ TableScan tpcds1000.date_dim
                  │                    Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                  │                    Outputs: d_date_sk_10:=d_date_sk, d_year_10:=d_year
                  └─ Inner Join
                     │     Condition: ws_sold_date_sk_3 == d_date_sk_11
                     │     Runtime Filters Builder: {d_date_sk_11}
                     ├─ Filter
                     │  │     Condition: Runtime Filters: {ws_sold_date_sk_3}
                     │  └─ TableScan tpcds1000.web_sales
                     │           Where: Runtime Filters: {ws_sold_date_sk}
                     │           Outputs: ws_sold_date_sk_3:=ws_sold_date_sk, ws_quantity_2:=ws_quantity, ws_list_price_2:=ws_list_price
                     └─ Broadcast Exchange
                        └─ Projection
                           │     Expressions: [d_date_sk_11]
                           └─ Filter
                              │     Condition: (d_year_11 >= 1999) AND (d_year_11 <= cast(2001, 'UInt32'))
                              └─ TableScan tpcds1000.date_dim
                                       Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                                       Outputs: d_date_sk_11:=d_date_sk, d_year_11:=d_year
note: Runtime Filter is applied for 15 times.
note: CTE(Common Table Expression) is applied for 6 times.
Projection
│     Expressions: ly_brand:=i_brand_id_26, ly_category:=i_category_id_26, ly_channel:=`expr#'store'_3`, ly_class:=i_class_id_26, ly_number_sales:=`expr#count()_5`, ly_sales:=`expr#sum(multiply(ss_quantity, ss_list_price))_3`, ty_brand:=i_brand_id_26, ty_category:=i_category_id_26, ty_channel:=`expr#'store'_2`, ty_class:=i_class_id_26, ty_number_sales:=`expr#count()_4`, ty_sales:=`expr#sum(multiply(ss_quantity, ss_list_price))_2`
└─ Limit
   │     Limit: 100
   └─ Sorting
      │     Order by: {expr#'store'_2 ASC NULLS LAST, i_brand_id_26 ASC NULLS LAST, i_class_id_26 ASC NULLS LAST, i_category_id_26 ASC NULLS LAST}
      │     Limit: 100
      └─ Gather Exchange
         └─ Sorting
            │     Order by: {expr#'store'_2 ASC NULLS LAST, i_brand_id_26 ASC NULLS LAST, i_class_id_26 ASC NULLS LAST, i_category_id_26 ASC NULLS LAST}
            │     Limit: 100
            └─ Inner Join
               │     Condition: i_brand_id_26 == i_brand_id_29, i_category_id_26 == i_category_id_29, i_class_id_26 == i_class_id_29
               │     Runtime Filters Builder: {i_brand_id_29,i_category_id_29,i_class_id_29}
               ├─ Projection
               │  │     Expressions: [expr#count()_4, expr#sum(multiply(ss_quantity, ss_list_price))_2, i_brand_id_26, i_category_id_26, i_class_id_26], expr#'store'_2:='store'
               │  └─ Inner Join
               │     │     Condition: 
               │     │     Filter: `expr#sum(multiply(ss_quantity, ss_list_price))_2` > `expr#avg(multiply(quantity, list_price))_9`
               │     ├─ MergingAggregated
               │     │  └─ Repartition Exchange
               │     │     │     Partition by: {i_brand_id_26, i_class_id_26, i_category_id_26}
               │     │     └─ Aggregating
               │     │        │     Group by: {i_brand_id_26, i_class_id_26, i_category_id_26}
               │     │        │     Aggregates: expr#sum(multiply(ss_quantity, ss_list_price))_2:=AggNull(sum)(expr#multiply(ss_quantity, ss_list_price)_1), expr#count()_4:=AggNull(count)()
               │     │        └─ Projection
               │     │           │     Expressions: [i_brand_id_26, i_category_id_26, i_class_id_26], expr#multiply(ss_quantity, ss_list_price)_1:=ss_quantity_17 * ss_list_price_17
               │     │           └─ Left Semi (PARALLEL_HASH) Join
               │     │              │     Condition: ss_item_sk_13 == i_item_sk_22
               │     │              ├─ Repartition Exchange
               │     │              │  │     Partition by: {ss_item_sk_13}
               │     │              │  └─ Inner Join
               │     │              │     │     Condition: ss_sold_date_sk_15 == d_date_sk_30
               │     │              │     │     Runtime Filters Builder: {d_date_sk_30}
               │     │              │     ├─ Inner Join
               │     │              │     │  │     Condition: ss_item_sk_13 == i_item_sk_26
               │     │              │     │  ├─ Filter
               │     │              │     │  │  │     Condition: Runtime Filters: {ss_sold_date_sk_15}
               │     │              │     │  │  └─ TableScan tpcds1000.store_sales
               │     │              │     │  │           Where: Runtime Filters: {ss_sold_date_sk}
               │     │              │     │  │           Outputs: ss_sold_date_sk_15:=ss_sold_date_sk, ss_item_sk_13:=ss_item_sk, ss_quantity_17:=ss_quantity, ss_list_price_17:=ss_list_price
               │     │              │     │  └─ Filter
               │     │              │     │     │     Condition: Runtime Filters: {i_brand_id_26, i_category_id_26, i_class_id_26}
               │     │              │     │     └─ TableScan tpcds1000.item
               │     │              │     │              Where: Runtime Filters: {i_brand_id, i_category_id, i_class_id}
               │     │              │     │              Outputs: i_item_sk_26:=i_item_sk, i_brand_id_26:=i_brand_id, i_class_id_26:=i_class_id, i_category_id_26:=i_category_id
               │     │              │     └─ Broadcast Exchange
               │     │              │        └─ Inner Join
               │     │              │           │     Condition: d_week_seq == d_week_seq_2
               │     │              │           │     Runtime Filters Builder: {d_week_seq_2}
               │     │              │           ├─ Filter
               │     │              │           │  │     Condition: Runtime Filters: {d_week_seq}
               │     │              │           │  └─ TableScan tpcds1000.date_dim
               │     │              │           │           Where: Runtime Filters: {d_week_seq}
               │     │              │           │           Outputs: [d_week_seq], d_date_sk_30:=d_date_sk
               │     │              │           └─ Broadcast Exchange
               │     │              │              └─ EnforceSingleRow
               │     │              │                 └─ Gather Exchange
               │     │              │                    └─ Projection
               │     │              │                       │     Expressions: d_week_seq_2:=cast(d_week_seq_1, 'Nullable(Int16)')
               │     │              │                       └─ Filter
               │     │              │                          │     Condition: (d_year_30 = cast(2000, 'UInt32')) AND (d_moy_3 = 12) AND (d_dom = 11)
               │     │              │                          └─ TableScan tpcds1000.date_dim
               │     │              │                                   Where: (d_year = cast(2000, 'UInt32')) AND (d_moy = 12) AND (d_dom = 11)
               │     │              │                                   Outputs: [d_dom], d_week_seq_1:=d_week_seq, d_year_30:=d_year, d_moy_3:=d_moy
               │     │              └─ CTERef[0]
               │     └─ Broadcast Exchange
               │        └─ CTERef[3]
               └─ Projection
                  │     Expressions: [expr#count()_5, expr#sum(multiply(ss_quantity, ss_list_price))_3, i_brand_id_29, i_category_id_29, i_class_id_29], expr#'store'_3:='store'
                  └─ Inner Join
                     │     Condition: 
                     │     Filter: `expr#sum(multiply(ss_quantity, ss_list_price))_3` > `expr#avg(multiply(quantity, list_price))_10`
                     ├─ MergingAggregated
                     │  └─ Repartition Exchange
                     │     │     Partition by: {i_brand_id_29, i_class_id_29, i_category_id_29}
                     │     └─ Aggregating
                     │        │     Group by: {i_brand_id_29, i_class_id_29, i_category_id_29}
                     │        │     Aggregates: expr#sum(multiply(ss_quantity, ss_list_price))_3:=AggNull(sum)(expr#multiply(ss_quantity, ss_list_price)_2), expr#count()_5:=AggNull(count)()
                     │        └─ Projection
                     │           │     Expressions: [i_brand_id_29, i_category_id_29, i_class_id_29], expr#multiply(ss_quantity, ss_list_price)_2:=ss_quantity_20 * ss_list_price_20
                     │           └─ Left Semi (PARALLEL_HASH) Join
                     │              │     Condition: ss_item_sk_16 == i_item_sk_24
                     │              ├─ Repartition Exchange
                     │              │  │     Partition by: {ss_item_sk_16}
                     │              │  └─ Inner Join
                     │              │     │     Condition: ss_sold_date_sk_18 == d_date_sk_37
                     │              │     │     Runtime Filters Builder: {d_date_sk_37}
                     │              │     ├─ Inner Join
                     │              │     │  │     Condition: ss_item_sk_16 == i_item_sk_29
                     │              │     │  ├─ Filter
                     │              │     │  │  │     Condition: Runtime Filters: {ss_sold_date_sk_18}
                     │              │     │  │  └─ TableScan tpcds1000.store_sales
                     │              │     │  │           Where: Runtime Filters: {ss_sold_date_sk}
                     │              │     │  │           Outputs: ss_sold_date_sk_18:=ss_sold_date_sk, ss_item_sk_16:=ss_item_sk, ss_quantity_20:=ss_quantity, ss_list_price_20:=ss_list_price
                     │              │     │  └─ TableScan tpcds1000.item
                     │              │     │           Outputs: i_item_sk_29:=i_item_sk, i_brand_id_29:=i_brand_id, i_class_id_29:=i_class_id, i_category_id_29:=i_category_id
                     │              │     └─ Broadcast Exchange
                     │              │        └─ Inner Join
                     │              │           │     Condition: d_week_seq_3 == d_week_seq_5
                     │              │           │     Runtime Filters Builder: {d_week_seq_5}
                     │              │           ├─ Filter
                     │              │           │  │     Condition: Runtime Filters: {d_week_seq_3}
                     │              │           │  └─ TableScan tpcds1000.date_dim
                     │              │           │           Where: Runtime Filters: {d_week_seq}
                     │              │           │           Outputs: d_date_sk_37:=d_date_sk, d_week_seq_3:=d_week_seq
                     │              │           └─ Broadcast Exchange
                     │              │              └─ EnforceSingleRow
                     │              │                 └─ Gather Exchange
                     │              │                    └─ Projection
                     │              │                       │     Expressions: d_week_seq_5:=cast(d_week_seq_4, 'Nullable(Int16)')
                     │              │                       └─ Filter
                     │              │                          │     Condition: (d_year_37 = 1999) AND (d_moy_4 = 12) AND (d_dom_1 = 11)
                     │              │                          └─ TableScan tpcds1000.date_dim
                     │              │                                   Where: (d_year = 1999) AND (d_moy = 12) AND (d_dom = 11)
                     │              │                                   Outputs: d_week_seq_4:=d_week_seq, d_year_37:=d_year, d_moy_4:=d_moy, d_dom_1:=d_dom
                     │              └─ CTERef[0]
                     └─ Broadcast Exchange
                        └─ CTERef[3]
CTEDef [0]
   Repartition Exchange
   │     Partition by: {i_item_sk_18}
   └─ Inner Join
      │     Condition: i_brand_id_18 == i_brand_id_25, i_category_id_18 == i_category_id_25, i_class_id_18 == i_class_id_25
      │     Runtime Filters Builder: {i_brand_id_25,i_category_id_25,i_class_id_25}
      ├─ Repartition Exchange
      │  │     Partition by: {i_brand_id_18, i_category_id_18, i_class_id_18}
      │  └─ Filter
      │     │     Condition: Runtime Filters: {i_brand_id_18, i_category_id_18, i_class_id_18}
      │     └─ TableScan tpcds1000.item
      │              Where: Runtime Filters: {i_brand_id, i_category_id, i_class_id}
      │              Outputs: i_item_sk_18:=i_item_sk, i_brand_id_18:=i_brand_id, i_class_id_18:=i_class_id, i_category_id_18:=i_category_id
      └─ Repartition Exchange
         │     Partition by: {i_brand_id_25, i_category_id_25, i_class_id_25}
         └─ Projection
            │     Expressions: [i_brand_id_25, i_category_id_25, i_class_id_25]
            └─ Filter
               │     Condition: (count_12 >= 1) AND (count_13 >= 1) AND (count_14 >= 1)
               └─ MergingAggregated
                  └─ Repartition Exchange
                     │     Partition by: {i_brand_id_25, i_class_id_25, i_category_id_25}
                     └─ Aggregating
                        │     Group by: {i_brand_id_25, i_class_id_25, i_category_id_25}
                        │     Aggregates: count_12:=AggNull(sum)(marker_48), count_13:=AggNull(sum)(marker_49), count_14:=AggNull(sum)(marker_50)
                        └─ Inner Join
                           │     Condition: ss_item_sk_12 == i_item_sk_25
                           │     Runtime Filters Builder: {i_item_sk_25}
                           ├─ Union
                           │  │     OutputToInputs: ss_item_sk_12 = [ss_item_sk_10,cs_item_sk_5,ws_item_sk_5], marker_50 = [marker_53,marker_56,marker_59], marker_49 = [marker_52,marker_55,marker_58], marker_48 = [marker_51,marker_54,marker_57]
                           │  ├─ Projection
                           │  │  │     Expressions: [ss_item_sk_10], marker_51:=1, marker_52:=0, marker_53:=0
                           │  │  └─ Inner Join
                           │  │     │     Condition: ss_sold_date_sk_11 == d_date_sk_31
                           │  │     │     Runtime Filters Builder: {d_date_sk_31}
                           │  │     ├─ Filter
                           │  │     │  │     Condition: Runtime Filters: {ss_item_sk_10, ss_sold_date_sk_11}
                           │  │     │  └─ TableScan tpcds1000.store_sales
                           │  │     │           Where: Runtime Filters: {ss_item_sk, ss_sold_date_sk}
                           │  │     │           Outputs: ss_sold_date_sk_11:=ss_sold_date_sk, ss_item_sk_10:=ss_item_sk
                           │  │     └─ Broadcast Exchange
                           │  │        └─ Projection
                           │  │           │     Expressions: [d_date_sk_31]
                           │  │           └─ Filter
                           │  │              │     Condition: (d_year_31 >= 1999) AND (d_year_31 <= cast(2001, 'UInt32'))
                           │  │              └─ TableScan tpcds1000.date_dim
                           │  │                       Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                           │  │                       Outputs: d_date_sk_31:=d_date_sk, d_year_31:=d_year
                           │  ├─ Projection
                           │  │  │     Expressions: [cs_item_sk_5], marker_54:=0, marker_55:=1, marker_56:=0
                           │  │  └─ Inner Join
                           │  │     │     Condition: cs_sold_date_sk_10 == d_date_sk_32
                           │  │     │     Runtime Filters Builder: {d_date_sk_32}
                           │  │     ├─ Filter
                           │  │     │  │     Condition: Runtime Filters: {cs_item_sk_5, cs_sold_date_sk_10}
                           │  │     │  └─ TableScan tpcds1000.catalog_sales
                           │  │     │           Where: Runtime Filters: {cs_item_sk, cs_sold_date_sk}
                           │  │     │           Outputs: cs_sold_date_sk_10:=cs_sold_date_sk, cs_item_sk_5:=cs_item_sk
                           │  │     └─ Broadcast Exchange
                           │  │        └─ Projection
                           │  │           │     Expressions: [d_date_sk_32]
                           │  │           └─ Filter
                           │  │              │     Condition: (d_year_32 >= 1999) AND (d_year_32 <= cast(2001, 'UInt32'))
                           │  │              └─ TableScan tpcds1000.date_dim
                           │  │                       Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                           │  │                       Outputs: d_date_sk_32:=d_date_sk, d_year_32:=d_year
                           │  └─ Projection
                           │     │     Expressions: [ws_item_sk_5], marker_57:=0, marker_58:=0, marker_59:=1
                           │     └─ Inner Join
                           │        │     Condition: ws_sold_date_sk_10 == d_date_sk_33
                           │        │     Runtime Filters Builder: {d_date_sk_33}
                           │        ├─ Filter
                           │        │  │     Condition: Runtime Filters: {ws_item_sk_5, ws_sold_date_sk_10}
                           │        │  └─ TableScan tpcds1000.web_sales
                           │        │           Where: Runtime Filters: {ws_item_sk, ws_sold_date_sk}
                           │        │           Outputs: ws_sold_date_sk_10:=ws_sold_date_sk, ws_item_sk_5:=ws_item_sk
                           │        └─ Broadcast Exchange
                           │           └─ Projection
                           │              │     Expressions: [d_date_sk_33]
                           │              └─ Filter
                           │                 │     Condition: (d_year_33 >= 1999) AND (d_year_33 <= cast(2001, 'UInt32'))
                           │                 └─ TableScan tpcds1000.date_dim
                           │                          Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                           │                          Outputs: d_date_sk_33:=d_date_sk, d_year_33:=d_year
                           └─ TableScan tpcds1000.item
                                    Outputs: i_item_sk_25:=i_item_sk, i_brand_id_25:=i_brand_id, i_class_id_25:=i_class_id, i_category_id_25:=i_category_id
CTEDef [3]
   Projection
   │     Expressions: expr#avg(multiply(quantity, list_price))_9:=`expr#avg(multiply(quantity, list_price))_11`
   └─ MergingAggregated
      └─ Gather Exchange
         └─ Aggregating
            │     Group by: {}
            │     Aggregates: expr#avg(multiply(quantity, list_price))_11:=AggNull(avg)(expr#multiply(quantity, list_price)_6)
            └─ Projection
               │     Expressions: expr#multiply(quantity, list_price)_6:=ss_quantity_16 * ss_list_price_16
               └─ Union
                  │     OutputToInputs: ss_list_price_16 = [ss_list_price_15,cs_list_price_7,ws_list_price_7], ss_quantity_16 = [ss_quantity_15,cs_quantity_7,ws_quantity_7]
                  ├─ Inner Join
                  │  │     Condition: ss_sold_date_sk_14 == d_date_sk_38
                  │  │     Runtime Filters Builder: {d_date_sk_38}
                  │  ├─ Filter
                  │  │  │     Condition: Runtime Filters: {ss_sold_date_sk_14}
                  │  │  └─ TableScan tpcds1000.store_sales
                  │  │           Where: Runtime Filters: {ss_sold_date_sk}
                  │  │           Outputs: ss_sold_date_sk_14:=ss_sold_date_sk, ss_quantity_15:=ss_quantity, ss_list_price_15:=ss_list_price
                  │  └─ Broadcast Exchange
                  │     └─ Projection
                  │        │     Expressions: [d_date_sk_38]
                  │        └─ Filter
                  │           │     Condition: (d_year_38 >= 1999) AND (d_year_38 <= cast(2001, 'UInt32'))
                  │           └─ TableScan tpcds1000.date_dim
                  │                    Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                  │                    Outputs: d_date_sk_38:=d_date_sk, d_year_38:=d_year
                  ├─ Inner Join
                  │  │     Condition: cs_sold_date_sk_12 == d_date_sk_39
                  │  │     Runtime Filters Builder: {d_date_sk_39}
                  │  ├─ Filter
                  │  │  │     Condition: Runtime Filters: {cs_sold_date_sk_12}
                  │  │  └─ TableScan tpcds1000.catalog_sales
                  │  │           Where: Runtime Filters: {cs_sold_date_sk}
                  │  │           Outputs: cs_sold_date_sk_12:=cs_sold_date_sk, cs_quantity_7:=cs_quantity, cs_list_price_7:=cs_list_price
                  │  └─ Broadcast Exchange
                  │     └─ Projection
                  │        │     Expressions: [d_date_sk_39]
                  │        └─ Filter
                  │           │     Condition: (d_year_39 >= 1999) AND (d_year_39 <= cast(2001, 'UInt32'))
                  │           └─ TableScan tpcds1000.date_dim
                  │                    Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                  │                    Outputs: d_date_sk_39:=d_date_sk, d_year_39:=d_year
                  └─ Inner Join
                     │     Condition: ws_sold_date_sk_12 == d_date_sk_40
                     │     Runtime Filters Builder: {d_date_sk_40}
                     ├─ Filter
                     │  │     Condition: Runtime Filters: {ws_sold_date_sk_12}
                     │  └─ TableScan tpcds1000.web_sales
                     │           Where: Runtime Filters: {ws_sold_date_sk}
                     │           Outputs: ws_sold_date_sk_12:=ws_sold_date_sk, ws_quantity_7:=ws_quantity, ws_list_price_7:=ws_list_price
                     └─ Broadcast Exchange
                        └─ Projection
                           │     Expressions: [d_date_sk_40]
                           └─ Filter
                              │     Condition: (d_year_40 >= 1999) AND (d_year_40 <= cast(2001, 'UInt32'))
                              └─ TableScan tpcds1000.date_dim
                                       Where: (d_year >= 1999) AND (d_year <= cast(2001, 'UInt32'))
                                       Outputs: d_date_sk_40:=d_date_sk, d_year_40:=d_year
note: Runtime Filter is applied for 19 times.
note: CTE(Common Table Expression) is applied for 4 times.
