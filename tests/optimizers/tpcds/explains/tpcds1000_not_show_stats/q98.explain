Projection
│     Expressions: [i_category, i_class, i_current_price, i_item_desc, i_item_id], itemrevenue:=`expr#sum(ss_ext_sales_price)`, revenueratio:=`expr#divide(multiply(sum(ss_ext_sales_price), 100), sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class))`
└─ Sorting
   │     Order by: {i_category ASC NULLS LAST, i_class ASC NULLS LAST, i_item_id ASC NULLS LAST, i_item_desc ASC NULLS LAST, expr#divide(multiply(sum(ss_ext_sales_price), 100), sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class)) ASC NULLS LAST}
   └─ Gather Exchange
      └─ Sorting
         │     Order by: {i_category ASC NULLS LAST, i_class ASC NULLS LAST, i_item_id ASC NULLS LAST, i_item_desc ASC NULLS LAST, expr#divide(multiply(sum(ss_ext_sales_price), 100), sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class)) ASC NULLS LAST}
         └─ Projection
            │     Expressions: [expr#sum(ss_ext_sales_price), i_category, i_class, i_current_price, i_item_desc, i_item_id], expr#divide(multiply(sum(ss_ext_sales_price), 100), sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class)):=(`expr#sum(ss_ext_sales_price)` * 100) / `expr#sum(sum(ss_ext_sales_price)) OVER (PARTITION BY i_class)`
            └─ Window
               └─ Repartition Exchange
                  │     Partition by: {i_class}
                  └─ MergingAggregated
                     └─ Repartition Exchange
                        │     Partition by: {i_item_id, i_item_desc, i_category, i_class, i_current_price}
                        └─ Aggregating
                           │     Group by: {i_item_id, i_item_desc, i_category, i_class, i_current_price}
                           │     Aggregates: expr#sum(ss_ext_sales_price):=AggNull(sum)(ss_ext_sales_price)
                           └─ Inner Join
                              │     Condition: ss_item_sk == i_item_sk
                              │     Runtime Filters Builder: {i_item_sk}
                              ├─ Inner Join
                              │  │     Condition: ss_sold_date_sk == d_date_sk
                              │  │     Runtime Filters Builder: {d_date_sk}
                              │  ├─ Filter
                              │  │  │     Condition: Runtime Filters: {ss_item_sk, ss_sold_date_sk}
                              │  │  └─ TableScan tpcds1000.store_sales
                              │  │           Where: Runtime Filters: {ss_item_sk, ss_sold_date_sk}
                              │  │           Outputs: [ss_sold_date_sk, ss_item_sk, ss_ext_sales_price]
                              │  └─ Broadcast Exchange
                              │     └─ Projection
                              │        │     Expressions: [d_date_sk]
                              │        └─ Filter
                              │           │     Condition: (d_date >= cast(10644, 'Date32')) AND (d_date <= cast(10674, 'Date32'))
                              │           └─ TableScan tpcds1000.date_dim
                              │                    Where: (d_date >= cast(10644, 'Date32')) AND (d_date <= cast(10674, 'Date32'))
                              │                    Outputs: [d_date_sk, d_date]
                              └─ Filter
                                 │     Condition: i_category IN ('Books', 'Home', 'Sports')
                                 └─ TableScan tpcds1000.item
                                          Where: i_category IN ('Books', 'Home', 'Sports')
                                          Outputs: [i_item_sk, i_item_id, i_item_desc, i_current_price, i_class, i_category]
note: Runtime Filter is applied for 2 times.
