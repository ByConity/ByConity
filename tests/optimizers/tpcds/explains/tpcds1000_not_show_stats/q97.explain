Projection
│     Expressions: catalog_only:=`expr#sum(multiIf(and(isNull(ssci.customer_sk), isNotNull(csci.customer_sk)), 1, 0))`, store_and_catalog:=`expr#sum(multiIf(and(isNotNull(ssci.customer_sk), isNotNull(csci.customer_sk)), 1, 0))`, store_only:=`expr#sum(multiIf(and(isNotNull(ssci.customer_sk), isNull(csci.customer_sk)), 1, 0))`
└─ Limit
   │     Limit: 100
   └─ MergingAggregated
      └─ Gather Exchange
         └─ Aggregating
            │     Group by: {}
            │     Aggregates: expr#sum(multiIf(and(isNotNull(ssci.customer_sk), isNull(csci.customer_sk)), 1, 0)):=AggNull(sum)(expr#multiIf(and(isNotNull(ssci.customer_sk), isNull(csci.customer_sk)), 1, 0)), expr#sum(multiIf(and(isNull(ssci.customer_sk), isNotNull(csci.customer_sk)), 1, 0)):=AggNull(sum)(expr#multiIf(and(isNull(ssci.customer_sk), isNotNull(csci.customer_sk)), 1, 0)), expr#sum(multiIf(and(isNotNull(ssci.customer_sk), isNotNull(csci.customer_sk)), 1, 0)):=AggNull(sum)(expr#multiIf(and(isNotNull(ssci.customer_sk), isNotNull(csci.customer_sk)), 1, 0))
            └─ Projection
               │     Expressions: expr#multiIf(and(isNotNull(ssci.customer_sk), isNotNull(csci.customer_sk)), 1, 0):=multiIf(isNotNull(ss_customer_sk) AND isNotNull(cs_bill_customer_sk), 1, 0), expr#multiIf(and(isNotNull(ssci.customer_sk), isNull(csci.customer_sk)), 1, 0):=multiIf(isNotNull(ss_customer_sk) AND isNull(cs_bill_customer_sk), 1, 0), expr#multiIf(and(isNull(ssci.customer_sk), isNotNull(csci.customer_sk)), 1, 0):=multiIf(isNull(ss_customer_sk) AND isNotNull(cs_bill_customer_sk), 1, 0)
               └─ Full (PARALLEL_HASH) Join
                  │     Condition: ss_customer_sk == cs_bill_customer_sk, ss_item_sk == cs_item_sk
                  ├─ Aggregating
                  │  │     Group by: {ss_customer_sk, ss_item_sk}
                  │  └─ Inner Join
                  │     │     Condition: ss_sold_date_sk == d_date_sk
                  │     │     Runtime Filters Builder: {d_date_sk}
                  │     ├─ Filter
                  │     │  │     Condition: Runtime Filters: {ss_sold_date_sk}
                  │     │  └─ TableScan tpcds1000.store_sales
                  │     │           Where: Runtime Filters: {ss_sold_date_sk}
                  │     │           Outputs: [ss_sold_date_sk, ss_item_sk, ss_customer_sk]
                  │     └─ Broadcast Exchange
                  │        └─ Projection
                  │           │     Expressions: [d_date_sk]
                  │           └─ Filter
                  │              │     Condition: (d_month_seq >= 1200) AND (d_month_seq <= cast(1211, 'UInt32'))
                  │              └─ TableScan tpcds1000.date_dim
                  │                       Where: (d_month_seq >= 1200) AND (d_month_seq <= cast(1211, 'UInt32'))
                  │                       Outputs: [d_date_sk, d_month_seq]
                  └─ Aggregating
                     │     Group by: {cs_bill_customer_sk, cs_item_sk}
                     └─ Inner Join
                        │     Condition: cs_sold_date_sk == d_date_sk_1
                        │     Runtime Filters Builder: {d_date_sk_1}
                        ├─ Filter
                        │  │     Condition: Runtime Filters: {cs_sold_date_sk}
                        │  └─ TableScan tpcds1000.catalog_sales
                        │           Where: Runtime Filters: {cs_sold_date_sk}
                        │           Outputs: [cs_sold_date_sk, cs_bill_customer_sk, cs_item_sk]
                        └─ Broadcast Exchange
                           └─ Projection
                              │     Expressions: [d_date_sk_1]
                              └─ Filter
                                 │     Condition: (d_month_seq_1 >= 1200) AND (d_month_seq_1 <= cast(1211, 'UInt32'))
                                 └─ TableScan tpcds1000.date_dim
                                          Where: (d_month_seq >= 1200) AND (d_month_seq <= cast(1211, 'UInt32'))
                                          Outputs: d_date_sk_1:=d_date_sk, d_month_seq_1:=d_month_seq
note: Runtime Filter is applied for 2 times.
