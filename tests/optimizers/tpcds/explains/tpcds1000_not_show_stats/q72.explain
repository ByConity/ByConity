Projection
│     Expressions: [d_week_seq, i_item_desc, w_warehouse_name], no_promo:=`expr#sum(multiIf(isNull(p_promo_sk), 1, 0))`, promo:=`expr#sum(multiIf(isNotNull(p_promo_sk), 1, 0))`, total_cnt:=`expr#count()`
└─ Limit
   │     Limit: 100
   └─ Sorting
      │     Order by: {expr#count() DESC NULLS LAST, i_item_desc ASC NULLS LAST, w_warehouse_name ASC NULLS LAST, d_week_seq ASC NULLS LAST}
      │     Limit: 100
      └─ Gather Exchange
         └─ Sorting
            │     Order by: {expr#count() DESC NULLS LAST, i_item_desc ASC NULLS LAST, w_warehouse_name ASC NULLS LAST, d_week_seq ASC NULLS LAST}
            │     Limit: 100
            └─ MergingAggregated
               └─ Repartition Exchange
                  │     Partition by: {i_item_desc, w_warehouse_name, d_week_seq}
                  └─ Aggregating
                     │     Group by: {i_item_desc, w_warehouse_name, d_week_seq}
                     │     Aggregates: expr#sum(multiIf(isNull(p_promo_sk), 1, 0)):=AggNull(sum)(expr#multiIf(isNull(p_promo_sk), 1, 0)), expr#sum(multiIf(isNotNull(p_promo_sk), 1, 0)):=AggNull(sum)(expr#multiIf(isNotNull(p_promo_sk), 1, 0)), expr#count():=AggNull(count)()
                     └─ Projection
                        │     Expressions: [d_week_seq, i_item_desc, w_warehouse_name], expr#multiIf(isNotNull(p_promo_sk), 1, 0):=multiIf(isNotNull(cs_promo_sk), 1, 0), expr#multiIf(isNull(p_promo_sk), 1, 0):=multiIf(isNull(cs_promo_sk), 1, 0)
                        └─ Left (PARALLEL_HASH) Join
                           │     Condition: inv_item_sk == cr_item_sk, cs_order_number == cr_order_number
                           ├─ Inner Join
                           │  │     Condition: inv_warehouse_sk == w_warehouse_sk
                           │  ├─ Inner (PARALLEL_HASH) Join
                           │  │  │     Condition: inv_date_sk == d_date_sk_1, inv_item_sk == cs_item_sk
                           │  │  │     Filter: inv_quantity_on_hand < cs_quantity
                           │  │  │     Runtime Filters Builder: {cs_item_sk}
                           │  │  ├─ Repartition Exchange
                           │  │  │  │     Partition by: {inv_item_sk}
                           │  │  │  └─ Filter
                           │  │  │     │     Condition: Runtime Filters: {inv_item_sk}
                           │  │  │     └─ TableScan tpcds1000.inventory
                           │  │  │              Where: Runtime Filters: {inv_item_sk}
                           │  │  │              Outputs: [inv_date_sk, inv_item_sk, inv_warehouse_sk, inv_quantity_on_hand]
                           │  │  └─ Inner Join
                           │  │     │     Condition: d_week_seq == d_week_seq_1
                           │  │     ├─ Inner Join
                           │  │     │  │     Condition: cs_item_sk == i_item_sk
                           │  │     │  ├─ Repartition Exchange
                           │  │     │  │  │     Partition by: {cs_item_sk}
                           │  │     │  │  └─ Inner Join
                           │  │     │  │     │     Condition: cs_ship_date_sk == d_date_sk_2
                           │  │     │  │     │     Filter: d_date_1 > (d_date + toIntervalDay(5))
                           │  │     │  │     ├─ Inner Join
                           │  │     │  │     │  │     Condition: cs_bill_cdemo_sk == cd_demo_sk
                           │  │     │  │     │  │     Runtime Filters Builder: {cd_demo_sk}
                           │  │     │  │     │  ├─ Repartition Exchange
                           │  │     │  │     │  │  │     Partition by: {cs_bill_cdemo_sk}
                           │  │     │  │     │  │  └─ Inner Join
                           │  │     │  │     │  │     │     Condition: cs_sold_date_sk == d_date_sk
                           │  │     │  │     │  │     │     Runtime Filters Builder: {d_date_sk}
                           │  │     │  │     │  │     ├─ Inner Join
                           │  │     │  │     │  │     │  │     Condition: cs_bill_hdemo_sk == hd_demo_sk
                           │  │     │  │     │  │     │  │     Runtime Filters Builder: {hd_demo_sk}
                           │  │     │  │     │  │     │  ├─ Filter
                           │  │     │  │     │  │     │  │  │     Condition: Runtime Filters: {cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_sold_date_sk}
                           │  │     │  │     │  │     │  │  └─ TableScan tpcds1000.catalog_sales
                           │  │     │  │     │  │     │  │           Where: Runtime Filters: {cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_sold_date_sk}
                           │  │     │  │     │  │     │  │           Outputs: [cs_sold_date_sk, cs_ship_date_sk, cs_bill_cdemo_sk, cs_bill_hdemo_sk, cs_item_sk, cs_promo_sk, cs_order_number, cs_quantity]
                           │  │     │  │     │  │     │  └─ Broadcast Exchange
                           │  │     │  │     │  │     │     └─ Projection
                           │  │     │  │     │  │     │        │     Expressions: [hd_demo_sk]
                           │  │     │  │     │  │     │        └─ Filter
                           │  │     │  │     │  │     │           │     Condition: hd_buy_potential = '>10000'
                           │  │     │  │     │  │     │           └─ TableScan tpcds1000.household_demographics
                           │  │     │  │     │  │     │                    Where: hd_buy_potential = '>10000'
                           │  │     │  │     │  │     │                    Outputs: [hd_demo_sk, hd_buy_potential]
                           │  │     │  │     │  │     └─ Broadcast Exchange
                           │  │     │  │     │  │        └─ Projection
                           │  │     │  │     │  │           │     Expressions: [d_date, d_date_sk, d_week_seq]
                           │  │     │  │     │  │           └─ Filter
                           │  │     │  │     │  │              │     Condition: d_year = 1999
                           │  │     │  │     │  │              └─ TableScan tpcds1000.date_dim
                           │  │     │  │     │  │                       Where: d_year = 1999
                           │  │     │  │     │  │                       Outputs: [d_date_sk, d_date, d_week_seq, d_year]
                           │  │     │  │     │  └─ Repartition Exchange
                           │  │     │  │     │     │     Partition by: {cd_demo_sk}
                           │  │     │  │     │     └─ Projection
                           │  │     │  │     │        │     Expressions: [cd_demo_sk]
                           │  │     │  │     │        └─ Filter
                           │  │     │  │     │           │     Condition: cd_marital_status = 'D'
                           │  │     │  │     │           └─ TableScan tpcds1000.customer_demographics
                           │  │     │  │     │                    Where: cd_marital_status = 'D'
                           │  │     │  │     │                    Outputs: [cd_demo_sk, cd_marital_status]
                           │  │     │  │     └─ Broadcast Exchange
                           │  │     │  │        └─ TableScan tpcds1000.date_dim
                           │  │     │  │                 Outputs: d_date_sk_2:=d_date_sk, d_date_1:=d_date
                           │  │     │  └─ Repartition Exchange
                           │  │     │     │     Partition by: {i_item_sk}
                           │  │     │     └─ TableScan tpcds1000.item
                           │  │     │              Outputs: [i_item_sk, i_item_desc]
                           │  │     └─ Broadcast Exchange
                           │  │        └─ TableScan tpcds1000.date_dim
                           │  │                 Outputs: d_date_sk_1:=d_date_sk, d_week_seq_1:=d_week_seq
                           │  └─ Broadcast Exchange
                           │     └─ TableScan tpcds1000.warehouse
                           │              Outputs: [w_warehouse_sk, w_warehouse_name]
                           └─ Repartition Exchange
                              │     Partition by: {cr_item_sk}
                              └─ TableScan tpcds1000.catalog_returns
                                       Outputs: [cr_item_sk, cr_order_number]
note: Runtime Filter is applied for 4 times.
