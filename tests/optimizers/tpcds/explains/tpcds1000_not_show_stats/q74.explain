Projection
│     Expressions: customer_first_name:=c_first_name_4, customer_id:=c_customer_id_4, customer_last_name:=c_last_name_4
└─ Limit
   │     Limit: 100
   └─ Projection
      │     Expressions: c_customer_id_4:=c_customer_id_7, c_first_name_4:=c_first_name_7, c_last_name_4:=c_last_name_7
      └─ Sorting
         │     Order by: {c_customer_id_7 ASC NULLS LAST, c_customer_id_7 ASC NULLS LAST, c_customer_id_7 ASC NULLS LAST}
         │     Limit: 100
         └─ Gather Exchange
            └─ Sorting
               │     Order by: {c_customer_id_7 ASC NULLS LAST, c_customer_id_7 ASC NULLS LAST, c_customer_id_7 ASC NULLS LAST}
               │     Limit: 100
               └─ Inner (PARALLEL_HASH) Join
                  │     Condition: c_customer_sk_2 == ss_customer_sk_2
                  │     Filter: multiIf(`expr#sum(ss_net_paid)_4` > 0, `expr#sum(ss_net_paid)_5` / `expr#sum(ss_net_paid)_4`, NULL) > multiIf(`expr#sum(ss_net_paid)_2` > 0, `expr#sum(ss_net_paid)_3` / `expr#sum(ss_net_paid)_2`, NULL)
                  │     Runtime Filters Builder: {ss_customer_sk_2}
                  ├─ Inner (PARALLEL_HASH) Join
                  │  │     Condition: ss_customer_sk_3 == c_customer_sk_2
                  │  │     Runtime Filters Builder: {c_customer_sk_2}
                  │  ├─ Projection
                  │  │  │     Expressions: [expr#sum(ss_net_paid)_3, ss_customer_sk_3]
                  │  │  └─ Filter
                  │  │     │     Condition: (`expr#'s'_3` = 's') AND (d_year_4 = 2002) Runtime Filters: {ss_customer_sk_3}
                  │  │     └─ Buffer
                  │  │        └─ CTERef[0]
                  │  └─ Inner (PARALLEL_HASH) Join
                  │     │     Condition: c_customer_sk_2 == ss_customer_sk_4
                  │     ├─ Repartition Exchange
                  │     │  │     Partition by: {c_customer_sk_2}
                  │     │  └─ TableScan tpcds1000.customer
                  │     │           Outputs: c_customer_sk_2:=c_customer_sk, c_customer_id_7:=c_customer_id, c_first_name_7:=c_first_name, c_last_name_7:=c_last_name
                  │     └─ Projection
                  │        │     Expressions: [expr#sum(ss_net_paid)_4, ss_customer_sk_4]
                  │        └─ Filter
                  │           │     Condition: (`expr#'s'_4` = 'w') AND (d_year_5 = 2001) AND (`expr#sum(ss_net_paid)_4` > 0.) Runtime Filters: {ss_customer_sk_4}
                  │           └─ Buffer
                  │              └─ CTERef[0]
                  └─ Inner (PARALLEL_HASH) Join
                     │     Condition: ss_customer_sk_2 == ss_customer_sk_5
                     │     Runtime Filters Builder: {ss_customer_sk_5}
                     ├─ Projection
                     │  │     Expressions: [expr#sum(ss_net_paid)_2, ss_customer_sk_2]
                     │  └─ Filter
                     │     │     Condition: (`expr#'s'_2` = 's') AND (d_year_3 = 2001) AND (`expr#sum(ss_net_paid)_2` > 0.) Runtime Filters: {ss_customer_sk_2}
                     │     └─ Buffer
                     │        └─ CTERef[0]
                     └─ Projection
                        │     Expressions: [expr#sum(ss_net_paid)_5, ss_customer_sk_5]
                        └─ Filter
                           │     Condition: (d_year_6 = 2002) AND (`expr#'s'_5` = 'w')
                           └─ Buffer
                              └─ CTERef[0]
CTEDef [0]
   Union
   │     OutputToInputs: expr#'s'_1 = [expr#'s',expr#'w'], expr#sum(ss_net_paid)_1 = [expr#sum(ss_net_paid),expr#sum(ws_net_paid)], d_year_2 = [d_year,d_year_1], ss_customer_sk_1 = [ss_customer_sk,ws_bill_customer_sk]
   ├─ Projection
   │  │     Expressions: [d_year, expr#sum(ss_net_paid), ss_customer_sk], expr#'s':='s'
   │  └─ Filter
   │     │     Condition: (d_year = 2002) OR (`expr#sum(ss_net_paid)` > 0.)
   │     └─ MergingAggregated
   │        └─ Repartition Exchange
   │           │     Partition by: {ss_customer_sk}
   │           └─ Aggregating
   │              │     Group by: {ss_customer_sk, d_year}
   │              │     Aggregates: expr#sum(ss_net_paid):=AggNull(sum)(ss_net_paid)
   │              └─ Inner Join
   │                 │     Condition: ss_sold_date_sk == d_date_sk
   │                 │     Runtime Filters Builder: {d_date_sk}
   │                 ├─ Filter
   │                 │  │     Condition: isNotNull(ss_customer_sk) Runtime Filters: {ss_sold_date_sk}
   │                 │  └─ TableScan tpcds1000.store_sales
   │                 │           Where: isNotNull(ss_customer_sk) Runtime Filters: {ss_sold_date_sk}
   │                 │           Outputs: [ss_sold_date_sk, ss_customer_sk, ss_net_paid]
   │                 └─ Broadcast Exchange
   │                    └─ Filter
   │                       │     Condition: d_year IN (2001, 2002)
   │                       └─ TableScan tpcds1000.date_dim
   │                                Where: d_year IN (2001, 2002)
   │                                Outputs: [d_date_sk, d_year]
   └─ Projection
      │     Expressions: [d_year_1, expr#sum(ws_net_paid), ws_bill_customer_sk], expr#'w':='w'
      └─ Filter
         │     Condition: (d_year_1 = 2002) OR (`expr#sum(ws_net_paid)` > 0.)
         └─ MergingAggregated
            └─ Repartition Exchange
               │     Partition by: {ws_bill_customer_sk}
               └─ Aggregating
                  │     Group by: {ws_bill_customer_sk, d_year_1}
                  │     Aggregates: expr#sum(ws_net_paid):=AggNull(sum)(ws_net_paid)
                  └─ Inner Join
                     │     Condition: ws_sold_date_sk == d_date_sk_1
                     │     Runtime Filters Builder: {d_date_sk_1}
                     ├─ Filter
                     │  │     Condition: isNotNull(ws_bill_customer_sk) Runtime Filters: {ws_sold_date_sk}
                     │  └─ TableScan tpcds1000.web_sales
                     │           Where: isNotNull(ws_bill_customer_sk) Runtime Filters: {ws_sold_date_sk}
                     │           Outputs: [ws_sold_date_sk, ws_bill_customer_sk, ws_net_paid]
                     └─ Broadcast Exchange
                        └─ Filter
                           │     Condition: d_year_1 IN (2001, 2002)
                           └─ TableScan tpcds1000.date_dim
                                    Where: d_year IN (2001, 2002)
                                    Outputs: d_date_sk_1:=d_date_sk, d_year_1:=d_year
note: Runtime Filter is applied for 6 times.
note: CTE(Common Table Expression) is applied for 4 times.
