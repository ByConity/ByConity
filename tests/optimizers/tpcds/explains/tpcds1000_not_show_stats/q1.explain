Projection
│     Expressions: [c_customer_id]
└─ Limit
   │     Limit: 100
   └─ Sorting
      │     Order by: {c_customer_id ASC NULLS LAST}
      │     Limit: 100
      └─ Gather Exchange
         └─ Sorting
            │     Order by: {c_customer_id ASC NULLS LAST}
            │     Limit: 100
            └─ Inner (PARALLEL_HASH) Join
               │     Condition: c_customer_sk == sr_customer_sk_1
               │     Runtime Filters Builder: {sr_customer_sk_1}
               ├─ Repartition Exchange
               │  │     Partition by: {c_customer_sk}
               │  └─ Filter
               │     │     Condition: Runtime Filters: {c_customer_sk}
               │     └─ TableScan tpcds1000.customer
               │              Where: Runtime Filters: {c_customer_sk}
               │              Outputs: [c_customer_sk, c_customer_id]
               └─ Repartition Exchange
                  │     Partition by: {sr_customer_sk_1}
                  └─ Inner Join
                     │     Condition: sr_store_sk_1 == s_store_sk
                     │     Filter: `expr#sum(sr_return_amt)_1` > (`expr#avg(ctr_total_return)_1` * '1.2')
                     │     Runtime Filters Builder: {s_store_sk}
                     ├─ Filter
                     │  │     Condition: Runtime Filters: {sr_store_sk_1}
                     │  └─ Local Exchange
                     │     └─ Buffer
                     │        └─ CTERef[0]
                     └─ Broadcast Exchange
                        └─ Inner Join
                           │     Condition: sr_store_sk_2 == s_store_sk
                           │     Runtime Filters Builder: {s_store_sk}
                           ├─ MergingAggregated
                           │  └─ Repartition Exchange
                           │     │     Partition by: {sr_store_sk_2}
                           │     └─ Aggregating
                           │        │     Group by: {sr_store_sk_2}
                           │        │     Aggregates: expr#avg(ctr_total_return)_1:=AggNull(avgIf)(expr#sum(sr_return_amt)_2,build_side_non_null_symbol)
                           │        └─ Projection
                           │           │     Expressions: [expr#sum(sr_return_amt)_2, sr_store_sk_2], build_side_non_null_symbol:=1
                           │           └─ Left Semi Join
                           │              │     Condition: sr_store_sk_2 == s_store_sk
                           │              │     Runtime Filters Builder: {s_store_sk}
                           │              ├─ Filter
                           │              │  │     Condition: Runtime Filters: {sr_store_sk_2}
                           │              │  └─ Local Exchange
                           │              │     └─ Buffer
                           │              │        └─ CTERef[0]
                           │              └─ Broadcast Exchange
                           │                 └─ Buffer
                           │                    └─ CTERef[1]
                           └─ Repartition Exchange
                              │     Partition by: {s_store_sk}
                              └─ Buffer
                                 └─ CTERef[1]
CTEDef [0]
   MergingAggregated
   └─ Repartition Exchange
      │     Partition by: {sr_customer_sk, sr_store_sk}
      └─ Aggregating
         │     Group by: {sr_customer_sk, sr_store_sk}
         │     Aggregates: expr#sum(sr_return_amt):=AggNull(sum)(sr_return_amt)
         └─ Inner Join
            │     Condition: sr_returned_date_sk == d_date_sk
            │     Runtime Filters Builder: {d_date_sk}
            ├─ Filter
            │  │     Condition: Runtime Filters: {sr_returned_date_sk}
            │  └─ TableScan tpcds1000.store_returns
            │           Where: Runtime Filters: {sr_returned_date_sk}
            │           Outputs: [sr_returned_date_sk, sr_customer_sk, sr_store_sk, sr_return_amt]
            └─ Broadcast Exchange
               └─ Projection
                  │     Expressions: [d_date_sk]
                  └─ Filter
                     │     Condition: d_year = 2000
                     └─ TableScan tpcds1000.date_dim
                              Where: d_year = 2000
                              Outputs: [d_date_sk, d_year]
CTEDef [1]
   Projection
   │     Expressions: [s_store_sk]
   └─ Filter
      │     Condition: s_state = 'TN'
      └─ TableScan tpcds1000.store
               Where: s_state = 'TN'
               Outputs: [s_store_sk, s_state]
note: Magic Set is applied for 1 parts.
note: Runtime Filter is applied for 5 times.
note: CTE(Common Table Expression) is applied for 4 times.
