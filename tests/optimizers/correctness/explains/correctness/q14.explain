Projection Est. ? rows
│     Expressions: [a_4, b, c, d, e, f], a:=a_4, a_1:=a_4, a_2:=a_4, a_3:=a_4
└─ Gather Exchange Est. ? rows
   └─ Inner Join Est. ? rows
      │     Condition: a_4 == a_3
      ├─ Inner Join Est. ? rows
      │  │     Condition: a_4 == a_1
      │  ├─ Inner Join Est. ? rows
      │  │  │     Condition: a_4 == a_2
      │  │  ├─ TableScan correctness.q6_t5 Est. ? rows
      │  │  │        Outputs: [f], a_4:=a
      │  │  └─ Broadcast Exchange Est. ? rows
      │  │     └─ TableScan correctness.q6_t3 Est. ? rows
      │  │              Outputs: [d], a_2:=a
      │  └─ Broadcast Exchange Est. ? rows
      │     └─ Inner Join Est. ? rows
      │        │     Condition: a_1 == a
      │        ├─ TableScan correctness.q6_t2 Est. ? rows
      │        │        Outputs: [c], a_1:=a
      │        └─ Broadcast Exchange Est. ? rows
      │           └─ TableScan correctness.q6_t1 Est. ? rows
      │                    Outputs: [a, b]
      └─ Broadcast Exchange Est. ? rows
         └─ TableScan correctness.q6_t4 Est. ? rows
                  Outputs: [e], a_3:=a
Projection Est. ? rows
│     Expressions: a:=a_9, a_1:=a_9, a_2:=a_9, a_3:=a_9, a_4:=a_9, b:=b_1, c:=c_1, d:=d_1, e:=e_1, f:=f_1
└─ Gather Exchange Est. ? rows
   └─ Inner Join Est. ? rows
      │     Condition: a_9 == a_8
      ├─ Inner Join Est. ? rows
      │  │     Condition: a_9 == a_6
      │  ├─ Inner Join Est. ? rows
      │  │  │     Condition: a_9 == a_7
      │  │  ├─ TableScan correctness.q6_t5 Est. ? rows
      │  │  │        Outputs: a_9:=a, f_1:=f
      │  │  └─ Broadcast Exchange Est. ? rows
      │  │     └─ TableScan correctness.q6_t3 Est. ? rows
      │  │              Outputs: a_7:=a, d_1:=d
      │  └─ Broadcast Exchange Est. ? rows
      │     └─ Inner Join Est. ? rows
      │        │     Condition: a_6 == a_5
      │        ├─ TableScan correctness.q6_t2 Est. ? rows
      │        │        Outputs: a_6:=a, c_1:=c
      │        └─ Broadcast Exchange Est. ? rows
      │           └─ TableScan correctness.q6_t1 Est. ? rows
      │                    Outputs: a_5:=a, b_1:=b
      └─ Broadcast Exchange Est. ? rows
         └─ TableScan correctness.q6_t4 Est. ? rows
                  Outputs: a_8:=a, e_1:=e
Projection Est. ? rows
│     Expressions: count():=`expr#count()`
└─ MergingAggregated Est. ? rows
   └─ Gather Exchange Est. ? rows
      └─ Aggregating Est. ? rows
         │     Group by: {}
         │     Aggregates: expr#count():=AggNull(count)()
         └─ Inner Join Est. ? rows
            │     Condition: 
            ├─ Inner Join Est. ? rows
            │  │     Condition: expr#cast(sk_1, 'Nullable(Int64)') == expr#cast(sk, 'Nullable(Int64)')
            │  ├─ Projection Est. ? rows
            │  │  │     Expressions: expr#cast(sk_1, 'Nullable(Int64)'):=cast(sk_1, 'Nullable(Int64)')
            │  │  └─ TableScan correctness.cust Est. ? rows
            │  │           Outputs: sk_1:=sk
            │  └─ Broadcast Exchange Est. ? rows
            │     └─ Projection Est. ? rows
            │        │     Expressions: expr#cast(sk, 'Nullable(Int64)'):=cast(sk, 'Nullable(Int64)')
            │        └─ Filter Est. ? rows
            │           │     Condition: price < 10.
            │           └─ TableScan correctness.web Est. ? rows
            │                    Where: price < 10.
            │                    Outputs: [sk, price]
            └─ Broadcast Exchange Est. ? rows
               └─ Filter Est. ? rows
                  │     Condition: 22. = price_1
                  └─ TableScan correctness.web Est. ? rows
                           Where: 22. = price
                           Outputs: price_1:=price
Projection Est. ? rows
│     Expressions: c:=b_2, c_1:=`expr#count()_1`
└─ Gather Exchange Est. ? rows
   └─ Right Join Est. ? rows
      │     Condition: expr#count()_1 == b_2
      ├─ Repartition Exchange Est. ? rows
      │  │     Partition by: {expr#count()_1}
      │  └─ MergingAggregated Est. ? rows
      │     └─ Gather Exchange Est. ? rows
      │        └─ Aggregating Est. ? rows
      │           │     Group by: {}
      │           │     Aggregates: expr#count()_1:=AggNull(count)()
      │           └─ Inner Join Est. ? rows
      │              │     Condition: d_2 == e_2
      │              ├─ TableScan correctness.q6_t3 Est. ? rows
      │              │        Outputs: d_2:=d
      │              └─ Broadcast Exchange Est. ? rows
      │                 └─ TableScan correctness.q6_t4 Est. ? rows
      │                          Outputs: e_2:=e
      └─ Repartition Exchange Est. ? rows
         │     Partition by: {b_2}
         └─ Inner Join Est. ? rows
            │     Condition: b_2 == c_2
            ├─ TableScan correctness.q6_t1 Est. ? rows
            │        Outputs: b_2:=b
            └─ Broadcast Exchange Est. ? rows
               └─ TableScan correctness.q6_t2 Est. ? rows
                        Outputs: c_2:=c
