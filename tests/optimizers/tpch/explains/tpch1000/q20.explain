Projection Est. 400000 rows
│     Expressions: [s_address, s_name]
└─ Sorting Est. 400000 rows
   │     Order by: {s_name ASC NULLS LAST}
   └─ Gather Exchange Est. 400000 rows
      └─ Sorting Est. 400000 rows
         │     Order by: {s_name ASC NULLS LAST}
         └─ Inner Join Est. 400000 rows
            │     Condition: s_suppkey == ps_suppkey
            │     Runtime Filters Builder: {ps_suppkey}
            ├─ Repartition Exchange Est. 400000 rows
            │  │     Partition by: {s_suppkey}
            │  └─ Inner Join Est. 400000 rows
            │     │     Condition: s_nationkey == n_nationkey
            │     │     Runtime Filters Builder: {n_nationkey}
            │     ├─ Filter Est. 10000000 rows
            │     │  │     Condition: isNotNull(s_suppkey) Runtime Filters: {s_nationkey, s_suppkey}
            │     │  └─ TableScan tpch1000.supplier Est. 10000000 rows
            │     │           Where: isNotNull(s_suppkey) Runtime Filters: {s_nationkey, s_suppkey}
            │     │           Outputs: [s_suppkey, s_name, s_address, s_nationkey]
            │     └─ Broadcast Exchange Est. 1 rows
            │        └─ Projection Est. 1 rows
            │           │     Expressions: [n_nationkey]
            │           └─ Filter Est. 1 rows
            │              │     Condition: n_name = 'CANADA'
            │              └─ TableScan tpch1000.nation Est. 25 rows
            │                       Where: n_name = 'CANADA'
            │                       Outputs: [n_nationkey, n_name]
            └─ Aggregating Est. 399343 rows
               │     Group by: {ps_suppkey}
               └─ Inner (PARALLEL_HASH) Join Est. 25766329 rows
                  │     Condition: l_partkey == p_partkey, l_suppkey == ps_suppkey
                  │     Filter: ps_availqty > ('0.5' * `expr#sum(l_quantity)`)
                  │     Runtime Filters Builder: {p_partkey,ps_suppkey}
                  ├─ Aggregating Est. 36409794 rows
                  │  │     Group by: {l_partkey, l_suppkey}
                  │  │     Aggregates: expr#sum(l_quantity):=AggNull(sumIf)(l_quantity,build_side_non_null_symbol_2)
                  │  └─ Projection Est. 36409794 rows
                  │     │     Expressions: [l_partkey, l_quantity, l_suppkey], build_side_non_null_symbol_2:=1
                  │     └─ Inner Join Est. 36409794 rows
                  │        │     Condition: l_suppkey == s_suppkey_1
                  │        │     Runtime Filters Builder: {s_suppkey_1}
                  │        ├─ Repartition Exchange Est. 910245131 rows
                  │        │  │     Partition by: {l_suppkey}
                  │        │  └─ Projection Est. 910245131 rows
                  │        │     │     Expressions: [l_partkey, l_quantity, l_suppkey]
                  │        │     └─ Filter Est. 910245131 rows
                  │        │        │     Condition: (l_shipdate >= cast(8766, 'Date')) AND (l_shipdate < cast(9131, 'Date')) AND isNotNull(l_partkey) AND isNotNull(l_suppkey) Runtime Filters: {l_partkey, l_suppkey}
                  │        │        └─ TableScan tpch1000.lineitem Est. 5999989709 rows
                  │        │                 Where: (l_shipdate >= cast(8766, 'Date')) AND (l_shipdate < cast(9131, 'Date')) AND isNotNull(l_partkey) AND isNotNull(l_suppkey) Runtime Filters: {l_partkey, l_suppkey}
                  │        │                 Outputs: [l_partkey, l_suppkey, l_quantity, l_shipdate]
                  │        └─ MergingAggregated Est. 399343 rows
                  │           └─ Repartition Exchange Est. 399343 rows
                  │              │     Partition by: {s_suppkey_1}
                  │              └─ Aggregating Est. 399343 rows
                  │                 │     Group by: {s_suppkey_1}
                  │                 └─ Projection Est. 400000 rows
                  │                    │     Expressions: s_suppkey_1:=s_suppkey
                  │                    └─ Inner Join Est. 400000 rows
                  │                       │     Condition: s_nationkey == n_nationkey
                  │                       │     Runtime Filters Builder: {n_nationkey}
                  │                       ├─ Filter Est. 10000000 rows
                  │                       │  │     Condition: isNotNull(s_suppkey) Runtime Filters: {s_nationkey, s_suppkey}
                  │                       │  └─ TableScan tpch1000.supplier Est. 10000000 rows
                  │                       │           Where: isNotNull(s_suppkey) Runtime Filters: {s_nationkey, s_suppkey}
                  │                       │           Outputs: [s_suppkey, s_nationkey]
                  │                       └─ Broadcast Exchange Est. 1 rows
                  │                          └─ Projection Est. 1 rows
                  │                             │     Expressions: [n_nationkey]
                  │                             └─ Filter Est. 1 rows
                  │                                │     Condition: n_name = 'CANADA'
                  │                                └─ TableScan tpch1000.nation Est. 25 rows
                  │                                         Where: n_name = 'CANADA'
                  │                                         Outputs: [n_nationkey, n_name]
                  └─ Repartition Exchange Est. 32207911 rows
                     │     Partition by: {ps_suppkey}
                     └─ Inner (PARALLEL_HASH) Join Est. 32207911 rows
                        │     Condition: p_partkey == ps_partkey
                        │     Runtime Filters Builder: {ps_partkey}
                        ├─ MergingAggregated Est. 180000000 rows
                        │  └─ Repartition Exchange Est. 180000000 rows
                        │     │     Partition by: {p_partkey}
                        │     └─ Aggregating Est. 180000000 rows
                        │        │     Group by: {p_partkey}
                        │        └─ Projection Est. 180000000 rows
                        │           │     Expressions: [p_partkey]
                        │           └─ Filter Est. 180000000 rows
                        │              │     Condition: isNotNull(p_partkey) AND (p_name LIKE 'forest%') Runtime Filters: {p_partkey}
                        │              └─ TableScan tpch1000.part Est. 200000000 rows
                        │                       Where: isNotNull(p_partkey) AND (p_name LIKE 'forest%') Runtime Filters: {p_partkey}
                        │                       Outputs: [p_partkey, p_name]
                        └─ Repartition Exchange Est. 31999990 rows
                           │     Partition by: {ps_partkey}
                           └─ Inner Join Est. 31999990 rows
                              │     Condition: ps_suppkey == s_suppkey_1
                              │     Runtime Filters Builder: {s_suppkey_1}
                              ├─ Repartition Exchange Est. 800000000 rows
                              │  │     Partition by: {ps_suppkey}
                              │  └─ Filter Est. 800000000 rows
                              │     │     Condition: isNotNull(ps_partkey) AND isNotNull(ps_suppkey) Runtime Filters: {ps_suppkey}
                              │     └─ TableScan tpch1000.partsupp Est. 800000000 rows
                              │              Where: isNotNull(ps_partkey) AND isNotNull(ps_suppkey) Runtime Filters: {ps_suppkey}
                              │              Outputs: [ps_partkey, ps_suppkey, ps_availqty]
                              └─ MergingAggregated Est. 399343 rows
                                 └─ Repartition Exchange Est. 399343 rows
                                    │     Partition by: {s_suppkey_1}
                                    └─ Aggregating Est. 399343 rows
                                       │     Group by: {s_suppkey_1}
                                       └─ Projection Est. 400000 rows
                                          │     Expressions: s_suppkey_1:=s_suppkey
                                          └─ Inner Join Est. 400000 rows
                                             │     Condition: s_nationkey == n_nationkey
                                             │     Runtime Filters Builder: {n_nationkey}
                                             ├─ Filter Est. 10000000 rows
                                             │  │     Condition: isNotNull(s_suppkey) Runtime Filters: {s_nationkey}
                                             │  └─ TableScan tpch1000.supplier Est. 10000000 rows
                                             │           Where: isNotNull(s_suppkey) Runtime Filters: {s_nationkey}
                                             │           Outputs: [s_suppkey, s_nationkey]
                                             └─ Broadcast Exchange Est. 1 rows
                                                └─ Projection Est. 1 rows
                                                   │     Expressions: [n_nationkey]
                                                   └─ Filter Est. 1 rows
                                                      │     Condition: n_name = 'CANADA'
                                                      └─ TableScan tpch1000.nation Est. 25 rows
                                                               Where: n_name = 'CANADA'
                                                               Outputs: [n_nationkey, n_name]
note: Magic Set is applied for 2 parts.
note: Runtime Filter is applied for 10 times.
