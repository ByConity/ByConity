Projection
│     Expressions: [c_name, o_orderdate, o_totalprice], c_custkey:=o_custkey, o_orderkey:=l_orderkey, sum(l_quantity):=`expr#sum(l_quantity)_1`
└─ Limit
   │     Limit: 100
   └─ Sorting
      │     Order by: {o_totalprice DESC NULLS LAST, o_orderdate ASC NULLS LAST}
      │     Limit: 100
      └─ Gather Exchange
         └─ Sorting
            │     Order by: {o_totalprice DESC NULLS LAST, o_orderdate ASC NULLS LAST}
            │     Limit: 100
            └─ Aggregating
               │     Group by: {c_name, o_custkey, l_orderkey, o_orderdate, o_totalprice}
               │     Aggregates: expr#sum(l_quantity)_1:=AggNull(sum)(l_quantity)
               └─ Inner (PARALLEL_HASH) Join
                  │     Condition: l_orderkey == o_orderkey
                  │     Runtime Filters Builder: {o_orderkey}
                  ├─ Repartition Exchange
                  │  │     Partition by: {l_orderkey}
                  │  └─ Filter
                  │     │     Condition: Runtime Filters: {l_orderkey}
                  │     └─ TableScan tpch1000.lineitem
                  │              Where: Runtime Filters: {l_orderkey}
                  │              Outputs: [l_orderkey, l_quantity]
                  └─ Repartition Exchange
                     │     Partition by: {o_orderkey}
                     └─ Inner (PARALLEL_HASH) Join
                        │     Condition: o_custkey == c_custkey
                        ├─ Repartition Exchange
                        │  │     Partition by: {o_custkey}
                        │  └─ Left Semi (PARALLEL_HASH) Join
                        │     │     Condition: o_orderkey == l_orderkey_1
                        │     │     Runtime Filters Builder: {l_orderkey_1}
                        │     ├─ Filter
                        │     │  │     Condition: Runtime Filters: {o_orderkey}
                        │     │  └─ TableScan tpch1000.orders
                        │     │           Where: Runtime Filters: {o_orderkey}
                        │     │           Outputs: [o_orderkey, o_custkey, o_totalprice, o_orderdate]
                        │     └─ Projection
                        │        │     Expressions: [l_orderkey_1]
                        │        └─ Filter
                        │           │     Condition: `expr#sum(l_quantity)` > '300'
                        │           └─ Aggregating
                        │              │     Group by: {l_orderkey_1}
                        │              │     Aggregates: expr#sum(l_quantity):=AggNull(sum)(l_quantity_1)
                        │              └─ TableScan tpch1000.lineitem
                        │                       Outputs: l_orderkey_1:=l_orderkey, l_quantity_1:=l_quantity
                        └─ Repartition Exchange
                           │     Partition by: {c_custkey}
                           └─ TableScan tpch1000.customer
                                    Outputs: [c_custkey, c_name]
note: Runtime Filter is applied for 2 times.
