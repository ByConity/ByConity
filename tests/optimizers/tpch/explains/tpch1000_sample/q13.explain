Projection Est. 80166750 rows
│     Expressions: c_count:=`expr#count(o_orderkey)`, custdist:=`expr#count()`
└─ Sorting Est. 80166750 rows
   │     Order by: {expr#count() DESC NULLS LAST, expr#count(o_orderkey) DESC NULLS LAST}
   └─ Gather Exchange Est. 80166750 rows
      └─ Sorting Est. 80166750 rows
         │     Order by: {expr#count() DESC NULLS LAST, expr#count(o_orderkey) DESC NULLS LAST}
         └─ MergingAggregated Est. 80166750 rows
            └─ Repartition Exchange Est. 80166750 rows
               │     Partition by: {expr#count(o_orderkey)}
               └─ Aggregating Est. 80166750 rows
                  │     Group by: {expr#count(o_orderkey)}
                  │     Aggregates: expr#count():=AggNull(count)()
                  └─ Projection Est. 80166750 rows
                     │     Expressions: [expr#count(o_orderkey)]
                     └─ Aggregating Est. 80166750 rows
                        │     Group by: {c_custkey}
                        │     Aggregates: expr#count(o_orderkey):=AggNull(count)(o_orderkey)
                        └─ Right (PARALLEL_HASH) Join Est. 1350000000 rows
                           │     Condition: o_custkey == c_custkey
                           ├─ Repartition Exchange Est. 1350000000 rows
                           │  │     Partition by: {o_custkey}
                           │  └─ Projection Est. 1350000000 rows
                           │     │     Expressions: [o_custkey, o_orderkey]
                           │     └─ Filter Est. 1350000000 rows
                           │        │     Condition: o_comment NOT LIKE '%special%requests%'
                           │        └─ TableScan tpch1000_sample.orders Est. 1500000000 rows
                           │                 Where: o_comment NOT LIKE '%special%requests%'
                           │                 Outputs: [o_orderkey, o_custkey, o_comment]
                           └─ Repartition Exchange Est. 150000000 rows
                              │     Partition by: {c_custkey}
                              └─ TableScan tpch1000_sample.customer Est. 150000000 rows
                                       Outputs: [c_custkey]
