# Wait for mutate for table, it will return after table's part reach certain number
function wait_for_mutate() {
    database=${1}
    table=${2}
    expect_part_num=${3}

    while true
    do
        current_part_num=`${CLICKHOUSE_CLIENT} --query "SELECT COUNT() FROM system.cnch_parts WHERE database = '${database}' AND table = '${table}'"`

        if [ "${current_part_num}" -eq "${expect_part_num}" ]
        then
            return 0
        fi

        sleep 1
    done
}

_TABLE_DETACHED_PATH=""
function table_detached_path() {
    database=${1}
    table=${2}

    uuid=`${CLICKHOUSE_CLIENT} --query "select uuid from system.cnch_tables where database = '${database}' and name = '${table}' limit 1"`
    root_path=`${CLICKHOUSE_CLIENT} --query "select path from system.disks where type = 'bytehdfs'"`

    _TABLE_DETACHED_PATH="${root_path}/${uuid}/detached/"
}

declare -A all_exception_points=(
    ["before_collect_parts"]=1
    ["collect_parts_from_unit"]=2
    ["parts_assert_fail"]=4
    ["load_part"]=8
    ["discover_path"]=16
    ["check_filter_result"]=32
    ["rows_assert_fail"]=64
    ["detach_partition_fail"]=128
    ["prepare_write_undo_fail"]=256
    ["move_part_fail"]=512
    ["gen_delete_mark_fail"]=1024
    ["before_commit_fail"]=2048
    ["mid_commit_fail"]=4096
    ["after_commit_fail"]=8192
)
all_exception_names=( $( echo ${!all_exception_points[@]} | tr ' ' $'\n' | sort ) )