select unique table
2021-07-13 18:50:00	10001	5	500	2
2021-07-13 18:50:00	10002	2	200	2
2021-07-13 18:50:00	10003	1	100	2
2021-07-13 18:50:01	10004	1	100	2
2021-07-14 18:50:01	10003	2	200	2

delete data with lower version, which will not take effect
select unique table
2021-07-13 18:50:00	10001	5	500	2
2021-07-13 18:50:00	10002	2	200	2
2021-07-13 18:50:00	10003	1	100	2
2021-07-13 18:50:01	10004	1	100	2
2021-07-14 18:50:01	10003	2	200	2

delete data with higher version, which will take effect, delete pair(2021-07-13, 10002) and pair(2021-07-14, 10003)
select unique table
2021-07-13 18:50:00	10001	5	500	2
2021-07-13 18:50:00	10003	1	100	2
2021-07-13 18:50:01	10004	1	100	2

insert data with lower version which has just been deleted
select unique table
2021-07-13 18:50:00	10001	5	500	2
2021-07-13 18:50:00	10003	1	100	2
2021-07-13 18:50:01	10004	1	100	2
2021-07-13 19:50:01	10002	5	5000	2
2021-07-14 19:50:00	10003	2	200	1

delete data with ignoring version whose revenue is bigger than 500 using insert select, write to another replica
select unique table
2021-07-13 18:50:00	10003	1	100	2
2021-07-13 18:50:01	10004	1	100	2
2021-07-14 19:50:00	10003	2	200	1
-----------------------------------------------------
test enable staging area
select unique table count()
0

delete data with lower version, which will not take effect
select unique table count()
0

delete data with higher version, which will take effect, delete pair(2021-07-13, 10002) and pair(2021-07-14, 10003)
select unique table count()
0

insert data with lower version which has just been deleted
start dedup worker and select unique table
2021-07-13 18:50:00	10001	5	500	2
2021-07-13 18:50:00	10003	1	100	2
2021-07-13 18:50:01	10004	1	100	2
2021-07-13 19:50:01	10002	5	5000	2
2021-07-14 19:50:00	10003	2	200	1

delete data with ignoring version whose revenue is bigger than 500 using insert select, write to another replica
select unique table
2021-07-13 18:50:00	10003	1	100	2
2021-07-13 18:50:01	10004	1	100	2
2021-07-14 19:50:00	10003	2	200	1
