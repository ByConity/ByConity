SET send_logs_level = 'none';

USE test;

DROP TABLE IF EXISTS test.tab1;
DROP TABLE IF EXISTS test.tab2;

DROP ROW ACCESS POLICY IF EXISTS filter_1;
DROP ROW ACCESS POLICY IF EXISTS filter_2;
DROP ROW ACCESS POLICY IF EXISTS filter_3;
DROP ROW ACCESS POLICY IF EXISTS filter_recursive;

CREATE TABLE test.tab1 (i1 UInt32) ENGINE = CnchMergeTree() PARTITION BY `i1` PRIMARY KEY `i1` ORDER BY `i1`;
CREATE TABLE test.tab2 (i2 UInt32) ENGINE = CnchMergeTree() PARTITION BY `i2` PRIMARY KEY `i2` ORDER BY `i2`;

-- correlated subquery is not support by InterpreterSelectQuery
-- CREATE ROW ACCESS POLICY filter_1 AS (x UInt32) -> CASE WHEN (SELECT any(i2) FROM test.tab2 WHERE x = i2) IS NULL THEN 1 ELSE 0 END;
-- CREATE ROW ACCESS POLICY filter_2 AS (x UInt32) -> CASE WHEN exists ((SELECT * FROM test.tab2 WHERE x = i2)) THEN 1 ELSE 0 END;
CREATE ROW ACCESS POLICY filter_3 AS (x UInt32) -> CASE WHEN x IN (SELECT i2 FROM test.tab2) THEN 1 ELSE 0 END;
CREATE ROW ACCESS POLICY filter_recursive AS (x UInt32) -> CASE WHEN x IN (SELECT i1 FROM test.tab1) THEN 1 ELSE 0 END;

INSERT INTO test.tab1 VALUES (1), (2), (3), (4);
INSERT INTO test.tab2 VALUES (0), (2), (3), (5);

SELECT * FROM test.tab1 ORDER BY i1;

-- ALTER TABLE test.tab1 UNSET ROW ACCESS POLICY;
-- ALTER TABLE test.tab1 SET ROW ACCESS POLICY filter_1 ON (i1);
-- SELECT * FROM test.tab1 ORDER BY i1;

-- ALTER TABLE test.tab1 UNSET ROW ACCESS POLICY;
-- ALTER TABLE test.tab1 SET ROW ACCESS POLICY filter_2 ON (i1);
-- SELECT * FROM test.tab1 ORDER BY i1;

ALTER TABLE test.tab1 UNSET ROW ACCESS POLICY;
ALTER TABLE test.tab1 SET ROW ACCESS POLICY filter_3 ON (i1);
SELECT * FROM test.tab1 ORDER BY i1;

ALTER TABLE test.tab1 UNSET ROW ACCESS POLICY;
ALTER TABLE test.tab1 SET ROW ACCESS POLICY filter_recursive ON (i1);
SELECT * FROM test.tab1 ORDER BY i1; -- { serverError 162 }

ALTER TABLE test.tab1 UNSET ROW ACCESS POLICY;

DROP ROW ACCESS POLICY IF EXISTS filter_1;
DROP ROW ACCESS POLICY IF EXISTS filter_2;
DROP ROW ACCESS POLICY filter_3;
DROP ROW ACCESS POLICY filter_recursive;

DROP TABLE test.tab1;
DROP TABLE test.tab2;
