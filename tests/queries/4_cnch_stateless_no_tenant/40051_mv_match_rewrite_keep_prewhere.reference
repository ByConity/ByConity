Projection Est. ? rows
│     Expressions: event_date:=event_date_3, event_type:=event_type_3, server_time_hour:=`expr#toHour(toDateTime(server_time))_3`, sum_click:=`expr#sumMerge(expr#sumState(click))_2`, uid:=uid_3
└─ Gather Exchange Est. ? rows
   └─ MergingAggregated Est. ? rows
      └─ Repartition Exchange Est. ? rows
         │     Partition by: {event_type_3, uid_3, event_date_3, expr#toHour(toDateTime(server_time))_3}
         └─ Aggregating Est. ? rows
            │     Group by: {event_type_3, uid_3, event_date_3, expr#toHour(toDateTime(server_time))_3}
            │     Aggregates: expr#sumMerge(expr#sumState(click))_2:=AggNull(sumMerge)(expr#sumState(click)_2)
            └─ TableScan test.target40051 Est. ? rows
                     Prewhere: uid = \'xx\'
                     Outputs: event_date_3:=event_date, event_type_3:=event_type, expr#sumState(click)_2:=sum_click, expr#toHour(toDateTime(server_time))_3:=server_time_hour, uid_3:=uid
note: Materialized Views is applied for 1 times: test.mv40051.
Projection Est. ? rows
│     Expressions: event_date:=event_date_3, event_type:=event_type_3, server_time_hour:=`expr#toHour(toDateTime(server_time))_3`, sum_click:=`expr#sumMerge(expr#sumState(click))_2`, uid:=uid_3
└─ Gather Exchange Est. ? rows
   └─ MergingAggregated Est. ? rows
      └─ Repartition Exchange Est. ? rows
         │     Partition by: {event_type_3, uid_3, event_date_3, expr#toHour(toDateTime(server_time))_3}
         └─ Aggregating Est. ? rows
            │     Group by: {event_type_3, uid_3, event_date_3, expr#toHour(toDateTime(server_time))_3}
            │     Aggregates: expr#sumMerge(expr#sumState(click))_2:=AggNull(sumMerge)(expr#sumState(click)_2)
            └─ TableScan test.target40051 Est. ? rows
                     Prewhere: event_type = 1
                     Outputs: event_date_3:=event_date, event_type_3:=event_type, expr#sumState(click)_2:=sum_click, expr#toHour(toDateTime(server_time))_3:=server_time_hour, uid_3:=uid
note: Materialized Views is applied for 1 times: test.mv40051.
