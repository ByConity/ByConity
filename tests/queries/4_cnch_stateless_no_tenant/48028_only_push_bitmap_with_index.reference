Projection Est. 100 rows, cost 2.380000e+01
│     Expressions: _1700004311268:=`expr#sum(mapElement(int_params, \'predict_step\'))`, _1700050188505:=`expr#multiIf(arraySetCheck(splitByChar(\',\', mapElement(string_params, \'local_life_deboost_ab_list\')), \'33\'), \'AA\', \'-1\')`
└─ Limit Est. 100 rows, cost 1.640000e+01
   │     Limit: 100
   └─ Gather Exchange Est. 100 rows, cost 1.640000e+01
      └─ Limit Est. 100 rows, cost 2.400000e-01
         │     Limit: 100
         └─ MergingAggregated Est. ? rows, cost 2.400000e-01
            └─ Repartition Exchange Est. ? rows, cost 2.400000e-01
               │     Partition by: {expr#multiIf(arraySetCheck(splitByChar(\',\', mapElement(string_params, \'local_life_deboost_ab_list\')), \'33\'), \'AA\', \'-1\')}
               └─ Aggregating Est. ? rows, cost 0.000000e+00
                  │     Group by: {expr#multiIf(arraySetCheck(splitByChar(\',\', mapElement(string_params, \'local_life_deboost_ab_list\')), \'33\'), \'AA\', \'-1\')}
                  │     Aggregates: expr#sum(mapElement(int_params, \'predict_step\')):=AggNull(sum)(__int_params__\'predict_step\')
                  └─ Projection Est. ? rows, cost 0.000000e+00
                     │     Expressions: [__int_params__\'predict_step\'], expr#multiIf(arraySetCheck(splitByChar(\',\', mapElement(string_params, \'local_life_deboost_ab_list\')), \'33\'), \'AA\', \'-1\'):=multiIf(arraySetCheck(splitByChar(\',\', `__string_params__\'local_life_deboost_ab_list\'`), \'33\'), \'AA\', \'-1\')
                     └─ Filter Est. ? rows, cost 0.000000e+00
                        │     Condition: (multiIf(`arraySetCheck(ab_vids, 8586431)`, \'对照\', `arraySetCheck(ab_vids, 8586432)`, \'实验组1\', \'else\') = \'实验组1\') AND (chn_id = 0) AND (app_id = 1128) AND (toDate(ts) = cast(19816, \'Date\'))
                        └─ TableScan test.aweme_sort_debug_gamma Est. ? rows, cost 0.000000e+00
                                 Where: (chn_id = 0) AND (app_id = 1128) AND (toDate(ts) = cast(19816, \'Date\'))
                                 Inline expressions: [arraySetCheck(ab_vids, 8586431):=arraySetCheck(ab_vids, 8586431), arraySetCheck(ab_vids, 8586432):=arraySetCheck(ab_vids, 8586432)]
                                 Outputs: [ts, app_id, chn_id, __int_params__\'predict_step\', __string_params__\'local_life_deboost_ab_list\']
